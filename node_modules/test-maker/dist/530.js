exports['id'] = 0x212, exports['ids'] = [
    0x212,
    0x3a4,
    0x23d
], exports['modules'] = {
    0xc30c: _0x54bfee => {
        function _0x3248a9(_0x22ac77) {
            var _0x5ba1f8 = new Error('Cannot\x20find\x20module\x20\x27' + _0x22ac77 + '\x27');
            _0x5ba1f8['code'] = 'MODULE_NOT_FOUND';
            throw _0x5ba1f8;
        }
        _0x3248a9['keys'] = () => [], _0x3248a9['resolve'] = _0x3248a9, _0x3248a9['id'] = 0xc30c, _0x54bfee['exports'] = _0x3248a9;
    },
    0x12667: (_0x2af881, _0x4fd42b, _0x5929b7) => {
        'use strict';
        _0x5929b7['r'](_0x4fd42b), _0x5929b7['d'](_0x4fd42b, {
            'Generate': () => _0x5a3452,
            'default': () => _0x487613
        });
        var _0x523340 = _0x5929b7(0xc165), _0x3569f2 = _0x5929b7['n'](_0x523340), _0x4864f7 = _0x5929b7(0x1145c), _0xf87458 = _0x5929b7['n'](_0x4864f7), _0x37c18c = _0x5929b7(0x1bd7), _0x3440cb = _0x5929b7['n'](_0x37c18c), _0xbd8b28 = _0x5929b7(0x17fbe), _0x2c892b = _0x5929b7['n'](_0xbd8b28), _0x40f5a8 = _0x5929b7(0x3b1), _0x5deff5 = _0x5929b7['n'](_0x40f5a8), _0x2c145a = _0x5929b7(0x13833), _0x3dce74 = _0x5929b7(0x51b9), _0x3a26e0 = _0x5929b7(0x38ed);
        class _0x5a3452 {
            constructor() {
                this['templatesRoot'] = _0x2c145a['testMakerInstallPath'] + '/dist/templates', _0x523340['program']['command']('init', 'Initialize\x20A\x20Test\x20Maker\x20Project.')['action'](async () => {
                    try {
                        await this['generate'](!![]);
                    } catch (_0x1cd2d4) {
                        await (0x0, _0x3a26e0['logGenericError'])({ 'error': _0x1cd2d4 });
                    }
                }), _0x523340['program']['command']('generate', 'Scaffold\x20Project.')['action'](async () => {
                    try {
                        await this['generate']();
                    } catch (_0x37d6e2) {
                        await (0x0, _0x3a26e0['logGenericError'])({ 'error': _0x37d6e2 });
                    }
                });
            }
            async ['generate'](_0x5ae5d3) {
                try {
                    let _0x1cf73f = [];
                    _0x5ae5d3 ? _0x1cf73f = [
                        {
                            'name': 'express',
                            'message': 'Init\x20Express\x20-\x20Generate\x20a\x20Default\x20convention\x20Test\x20Maker\x20project\x20structure'
                        },
                        {
                            'name': 'custom',
                            'message': 'Custom\x20-\x20Choose\x20what\x20to\x20generate'
                        },
                        {
                            'name': 'PEGA\x20express',
                            'message': 'Init\x20PEGA\x20Express\x20-\x20Generate\x20a\x20Default\x20convention\x20Test\x20Maker/PEGA\x20project\x20structure'
                        }
                    ] : _0x1cf73f = [
                        {
                            'name': 'feature',
                            'message': 'Feature\x20-\x20Spec\x20file'
                        },
                        {
                            'name': 'fromGherkin',
                            'message': 'Feature\x20From\x20Gherkin\x20-\x20Generate\x20a\x20Feature\x20code\x20file\x20from\x20Gherkin\x20Feature\x20file'
                        }
                    ];
                    const _0x3ef694 = new _0x37c18c['Select']({
                            'name': 'method',
                            'message': 'Choose\x20Your\x20generation\x20method',
                            'choices': _0x1cf73f
                        }), _0x502a4d = await _0x3ef694['run']();
                    switch (_0x502a4d) {
                    case 'express':
                        await this['generateRun']({
                            'tsConfig': !![],
                            'specs': !![],
                            'testLocalScript': !![],
                            'testCiScript': !![],
                            'configLocal': !![],
                            'configCi': !![]
                        });
                        break;
                    case 'custom':
                        await this['generateCustom']();
                        break;
                    case 'PEGA\x20express':
                        await this['generatePega']();
                        break;
                    case 'feature':
                        await this['generateFeature']();
                        break;
                    case 'fromGherkin':
                        await this['generateFromGherkin']();
                    }
                    (0x0, _0x3dce74['exitProcess'])(0x0);
                } catch (_0x450797) {
                    console['log'](_0x450797), (0x0, _0x3dce74['exitProcess'])(0x1);
                }
            }
            async ['generatePega']() {
                const _0x43c590 = (await Promise['all']([
                    _0x5929b7['e'](0x83),
                    _0x5929b7['e'](0x13a),
                    _0x5929b7['e'](0x2dd),
                    _0x5929b7['e'](0x2ed),
                    _0x5929b7['e'](0x352),
                    _0x5929b7['e'](0x373)
                ])['then'](_0x5929b7['bind'](_0x5929b7, 0x10952)))['modulesInstaller'];
                await _0x43c590['install']({
                    'installs': [{
                            'name': 'git+ssh://git@github.com/KnowledgeExpert/pega-model',
                            'version': ''
                        }],
                    'restart': ![]
                });
                const _0x43c164 = this['templatesRoot'] + '/pega-model', _0x621c17 = await _0xbd8b28['readdir'](_0x40f5a8['join'](_0x43c164));
                for (const _0x533225 of _0x621c17) {
                    const _0x2ce418 = _0x40f5a8['join'](_0x43c164, _0x533225), _0x44286f = _0x40f5a8['join'](_0x2c145a['projectPath'], _0x533225);
                    await _0xbd8b28['copy'](_0x2ce418, _0x44286f, { 'overwrite': !![] }), this['logStep'](_0x44286f);
                }
                await this['generateTemplate'](this['templatesRoot'] + '/template-ts-config.json', _0x2c145a['projectPath'] + '/tsconfig.json');
                const _0x50d6a0 = _0x40f5a8['normalizeTrim'](_0x2c145a['projectPath'] + '/package.json'), _0x12d107 = await _0xbd8b28['readJSON'](_0x50d6a0);
                if (!_0x12d107['scripts'])
                    _0x12d107['scripts'] = {};
                _0x12d107['scripts']['test:local'] = 'ketm\x20run\x20-c\x20test-maker.local.ts', await _0xbd8b28['writeJSON'](_0x50d6a0, _0x12d107, { 'spaces': 0x2 }), this['logStep']('NPM\x20test:local\x20script');
                if (!_0x12d107['scripts'])
                    _0x12d107['scripts'] = {};
                _0x12d107['scripts']['test:ci'] = 'ketm\x20run\x20-c\x20test-maker.ci.ts', await _0xbd8b28['writeJSON'](_0x50d6a0, _0x12d107, { 'spaces': 0x2 }), this['logStep']('NPM\x20test:ci\x20script'), console['info']('Successfully\x20Initialized\x20PEGA\x20Template\x20based\x20project.\x0a\x0a' + _0xf87458()['cyan']('Important:') + '\x20Please\x20check\x20' + _0x2c145a['projectPath'] + '/README.md\x20to\x20Further\x20customize\x20the\x20project\x20per\x20requirements.\x20\x0a');
            }
            async ['generateCustom']() {
                const _0x4e4544 = new _0x37c18c['MultiSelect']({
                    'name': 'generationOptions',
                    'message': 'What\x20do\x20you\x20want\x20to\x20Generate?',
                    'choices': [
                        {
                            'name': 'tsConfig',
                            'message': 'TypeScript\x20Config'
                        },
                        {
                            'name': 'specs',
                            'message': 'Spec\x20Folder\x20and\x20example\x20Spec'
                        },
                        {
                            'name': 'testLocalScript',
                            'message': 'npm\x20run\x20test:local\x20script'
                        },
                        {
                            'name': 'testCiScript',
                            'message': 'npm\x20run\x20test:ci\x20script'
                        },
                        {
                            'name': 'configLocal',
                            'message': 'test-maker.local\x20config\x20file'
                        },
                        {
                            'name': 'configCi',
                            'message': 'test-maker.ci\x20config\x20file'
                        }
                    ],
                    'pointer'(_0x144aae, _0x35ca08) {
                        if (_0x35ca08['index'] === _0x144aae['index'])
                            return _0xf87458()['cyan'](_0xf87458()['symbols']['pointer']);
                        return '\x20';
                    },
                    'indicator'(_0x5909d5, _0x32a121) {
                        if (_0x32a121['enabled'])
                            return _0xf87458()['cyan'](_0x5909d5['symbols']['radio']['on']);
                        return _0xf87458()['dim'](_0x5909d5['symbols']['radio']['off']);
                    }
                });
                await this['generateRun']((await _0x4e4544['run']())['reduce']((_0x27e215, _0xf10c38) => {
                    return _0x27e215[_0xf10c38] = !![], _0x27e215;
                }, {}));
            }
            async ['generateRun'](_0x286980) {
                let _0x249923 = {
                    ...{
                        'tsConfig': ![],
                        'specs': ![],
                        'testLocalScript': ![],
                        'testCiScript': ![],
                        'configLocal': ![],
                        'configCi': ![]
                    },
                    ..._0x286980
                };
                const _0x1d28ce = _0x40f5a8['normalizeTrim'](_0x2c145a['projectPath'] + '/package.json'), _0x2f3d90 = await _0xbd8b28['readJSON'](_0x1d28ce);
                if (_0x249923['testLocalScript']) {
                    if (!_0x2f3d90['scripts'])
                        _0x2f3d90['scripts'] = {};
                    _0x2f3d90['scripts']['test:local'] = 'ketm\x20run\x20-c\x20test-maker.local.ts', await _0xbd8b28['writeJSON'](_0x1d28ce, _0x2f3d90, { 'spaces': 0x2 }), this['logStep']('NPM\x20test:local\x20script');
                }
                if (_0x249923['testCiScript']) {
                    if (!_0x2f3d90['scripts'])
                        _0x2f3d90['scripts'] = {};
                    _0x2f3d90['scripts']['test:ci'] = 'ketm\x20run\x20-c\x20test-maker.ci.ts', await _0xbd8b28['writeJSON'](_0x1d28ce, _0x2f3d90, { 'spaces': 0x2 }), this['logStep']('NPM\x20test:ci\x20script');
                }
                _0x249923['configLocal'] && await this['generateTemplate'](this['templatesRoot'] + '/template-test-maker.local.ts', _0x2c145a['projectPath'] + '/test-maker.local.ts'), _0x249923['configCi'] && await this['generateTemplate'](this['templatesRoot'] + '/template-test-maker.ci.ts', _0x2c145a['projectPath'] + '/test-maker.ci.ts'), _0x249923['configLocal'] && await this['generateTemplate'](this['templatesRoot'] + '/template-ts-config.json', _0x2c145a['projectPath'] + '/tsconfig.json'), _0x249923['specs'] && await this['generateTemplate'](this['templatesRoot'] + '/template-example-spec.ts', _0x2c145a['projectPath'] + '/src/specs/example-spec.ts');
            }
            async ['generateFeature']() {
                const _0xff67d5 = new _0x37c18c['Select']({
                        'name': 'method',
                        'message': 'Choose\x20Your\x20generation\x20method',
                        'choices': [
                            {
                                'name': 'given',
                                'message': 'feature\x20with\x20Given\x20step'
                            },
                            {
                                'name': 'givenThen',
                                'message': 'feature\x20with\x20Given\x20=>\x20Then\x20steps'
                            },
                            {
                                'name': 'givenWhenThen',
                                'message': 'feature\x20with\x20Given\x20=>\x20When\x20=>\x20Then\x20steps'
                            }
                        ]
                    }), _0x2ce006 = await _0xff67d5['run']();
                let _0x420c00 = '';
                const _0x56b708 = [
                    {
                        'name': 'featureName',
                        'message': 'Feature\x20Name'
                    },
                    {
                        'name': 'scenarioName',
                        'message': 'Scenario\x20Name'
                    },
                    {
                        'name': 'givenStepName',
                        'message': 'Given\x20Step\x20Name'
                    }
                ];
                switch (_0x2ce006) {
                case 'given':
                    _0x420c00 = 'template-feature-given.txt';
                    break;
                case 'givenThen':
                    _0x420c00 = 'template-feature-given-then.txt', _0x56b708['push']({
                        'name': 'thenStepName',
                        'message': 'Then\x20Step\x20Name'
                    });
                    break;
                case 'givenWhenThen':
                    _0x420c00 = 'template-feature-given-when-then.txt', _0x56b708['push']({
                        'name': 'whenStepName',
                        'message': 'When\x20Step\x20Name'
                    }), _0x56b708['push']({
                        'name': 'thenStepName',
                        'message': 'Then\x20Step\x20Name'
                    });
                    break;
                }
                const _0x29280e = new _0x37c18c['Snippet']({
                        'name': 'feature',
                        'message': 'Fill\x20out\x20the\x20fields\x20below',
                        'required': !![],
                        'fields': _0x56b708,
                        'template': '' + await _0xbd8b28['readFile'](_0x40f5a8['normalizeTrim'](this['templatesRoot'] + '/' + _0x420c00))
                    }), _0x3708d5 = await _0x29280e['run'](), _0x49f2a2 = new _0x37c18c['Confirm']({
                        'name': 'fileName',
                        'message': 'use\x20\x22' + _0x3708d5['values']['featureName'] + '\x22\x20as\x20file\x20name?'
                    }), _0x15cf47 = await _0x49f2a2['run']();
                if (_0x15cf47)
                    await this['generateTemplate'](_0x3708d5['result'], _0x2c145a['projectPath'] + '/src/specs/' + _0x3708d5['values']['featureName'] + '-spec.ts', !![]);
                else {
                    const _0xb5b1c2 = await new _0x37c18c['Input']({
                        'message': 'What\x20is\x20the\x20File\x20Name\x20you\x20choose?',
                        'initial': _0x3708d5['values']['featureName']
                    })['run']();
                    await this['generateTemplate'](_0x3708d5['result'], _0x2c145a['projectPath'] + '/src/specs/' + _0xb5b1c2 + '-spec.ts', !![]);
                }
            }
            async ['generateFromGherkin']() {
                const _0x54b0a6 = new _0x37c18c['Select']({
                    'name': 'method',
                    'message': 'Choose\x20Gherkin\x20Files\x20Location',
                    'choices': [
                        {
                            'name': 'default',
                            'message': 'Default\x20-\x20location\x20at\x20\x22./features'
                        },
                        {
                            'name': 'custom',
                            'message': 'Custom\x20-\x20Choose\x20a\x20custom\x20location'
                        }
                    ]
                });
                let _0x37d25c = await _0x54b0a6['run']();
                if (_0x37d25c === 'custom') {
                    const _0x5c3c58 = new _0x37c18c['Input']({
                        'message': 'Specify\x20new\x20custom\x20location',
                        'initial': './features'
                    });
                    _0x37d25c = await _0x5c3c58['run']();
                } else
                    _0x37d25c = './features';
                _0x37d25c = _0x40f5a8['normalizeTrim'](_0x40f5a8['resolve'](_0x37d25c));
                const _0x9f6258 = new _0x37c18c['Select']({
                        'name': 'method',
                        'message': 'Choose\x20Gherkin\x20Files\x20Location',
                        'choices': [
                            {
                                'name': 'all',
                                'message': 'All\x20-\x20Generate\x20Features\x20from\x20all\x20files'
                            },
                            {
                                'name': 'choose',
                                'message': 'Choose\x20-\x20Choose\x20files\x20to\x20generate\x20from'
                            }
                        ]
                    }), _0x4d2aba = await _0x9f6258['run'](), _0x40ca94 = await (await Promise['all']([
                        _0x5929b7['e'](0x83),
                        _0x5929b7['e'](0x13a),
                        _0x5929b7['e'](0x2dd),
                        _0x5929b7['e'](0x2ed),
                        _0x5929b7['e'](0x11b),
                        _0x5929b7['e'](0x167),
                        _0x5929b7['e'](0x18d),
                        _0x5929b7['e'](0x24e),
                        _0x5929b7['e'](0x255),
                        _0x5929b7['e'](0x352),
                        _0x5929b7['e'](0xca),
                        _0x5929b7['e'](0x2d5)
                    ])['then'](_0x5929b7['bind'](_0x5929b7, 0x17784)))['specsParser']['parse']([_0x37d25c + '/**/*.feature']);
                !_0x40ca94['size'] && (console['error']('Could\x20not\x20find\x20any\x20Gherkin\x20files\x20at\x20the\x20specified\x20location'), (0x0, _0x3dce74['exitProcess'])(0x1));
                if (_0x4d2aba === 'all')
                    for (let _0x3efed2 of _0x40ca94['values']()) {
                        await this['createFromGherkin'](_0x3efed2);
                    }
                else {
                    const _0x2c660a = [];
                    for (let _0x9d8025 of _0x40ca94['values']()) {
                        _0x2c660a['push']({
                            'name': _0x9d8025['uri'],
                            'message': _0x9d8025['name']
                        });
                    }
                    const _0x5394e6 = new _0x37c18c['MultiSelect']({
                            'name': 'generationOptions',
                            'message': 'What\x20do\x20you\x20want\x20to\x20Generate?',
                            'choices': _0x2c660a,
                            'pointer'(_0x583705, _0x3aeab9) {
                                if (_0x3aeab9['index'] === _0x583705['index'])
                                    return _0xf87458()['cyan'](_0xf87458()['symbols']['pointer']);
                                return '\x20';
                            },
                            'indicator'(_0x116edb, _0x29975b) {
                                if (_0x29975b['enabled'])
                                    return _0xf87458()['cyan'](_0x116edb['symbols']['radio']['on']);
                                return _0xf87458()['dim'](_0x116edb['symbols']['radio']['off']);
                            }
                        }), _0x370679 = await _0x5394e6['run']();
                    if (_0x370679['length'])
                        for (let _0x49bb96 of _0x370679) {
                            for (let _0x4373b5 of _0x40ca94['values']()) {
                                if (_0x49bb96 === _0x4373b5['uri'])
                                    await this['createFromGherkin'](_0x4373b5);
                            }
                        }
                    else
                        (0x0, _0x3dce74['exitProcess'])(0x0);
                }
            }
            async ['generateTemplate'](_0x5339bf, _0x4e534e, _0x544d1d = ![]) {
                const _0x5d61a8 = _0x544d1d ? _0x5339bf : await _0xbd8b28['readFile'](_0x40f5a8['normalizeTrim'](_0x5339bf)), _0x411aae = _0x40f5a8['normalizeTrim'](_0x4e534e);
                await _0xbd8b28['outputFile'](_0x411aae, _0x5d61a8), this['logStep'](_0x411aae);
            }
            async ['createFromGherkin'](_0x40586d) {
                let _0x50579a = 'import\x20{\x20expect,\x20Feature,\x20Selector\x20}\x20from\x20\x22test-maker\x22;';
                _0x50579a += '\x0a', _0x50579a += 'Feature(`' + _0x40586d['name'] + '`)';
                for (let [_0x20d3c8, _0x1f3d86] of _0x40586d['scenarios']) {
                    _0x50579a += '\x0a', _0x50579a += '\x20\x20\x20\x20.' + _0x1f3d86['keyword'] + '(`' + _0x20d3c8 + '`)';
                    for (let [_0x330826, _0xc64bc2] of _0x1f3d86['steps']) {
                        _0x50579a += '\x0a', _0x50579a += '\x20\x20\x20\x20.' + _0xc64bc2['keyword'] + '(`' + _0x330826 + '`,\x20async\x20(I)\x20=>\x20{', _0x50579a += '\x0a', _0x50579a += '})';
                    }
                }
                let _0x46e0de = _0x40f5a8['normalizeTrim']('./generated-features/' + _0x40f5a8['basename'](_0x40586d['uri']) + '-spec.ts');
                _0x46e0de = _0x46e0de['replace']('.feature-spec.ts', '-spec.ts'), await _0xbd8b28['outputFile'](_0x46e0de, _0x50579a), console['info'](_0x40586d['name'] + '\x20Feature\x20has\x20been\x20converted\x20into\x20File:\x20' + _0xf87458()['yellowBright'](_0x46e0de));
            }
            ['logStep'](_0x572b37) {
                console['log'](_0xf87458()['green']('Successfully\x20generated:\x20' + _0xf87458()['yellow']['bold'](_0x572b37) + '\x0a'));
            }
        }
        const _0x487613 = new _0x5a3452();
    },
    0x38ed: (_0x559da7, _0x463452, _0x34d617) => {
        'use strict';
        _0x34d617['r'](_0x463452), _0x34d617['d'](_0x463452, { 'logGenericError': () => _0x478b06 });
        var _0x585bd2 = _0x34d617(0x1145c), _0x34f70d = _0x34d617['n'](_0x585bd2);
        async function _0x478b06({
            error: _0x128fbb,
            isWarning: _0x55346e,
            show: show = !![]
        }) {
            let _0x2791ef;
            try {
                _0x2791ef ? _0x55346e ? console['warn'](_0x2791ef['formatted']['ansi']) : console['error'](_0x2791ef['formatted']['ansi']) : _0x55346e ? console['warn'](_0x128fbb) : console['error'](_0x34f70d()['redBright'](_0x128fbb['stack'] || _0x128fbb));
            } catch (_0x200483) {
                console['error'](_0x34f70d()['redBright'](_0x200483['stack'] || _0x200483));
            } finally {
                console['info'](_0x34f70d()['cyanBright']('See\x20Log\x20file\x20for\x20more\x20Details...'));
            }
        }
    }
};
;
//# sourceMappingURL=530.js.map
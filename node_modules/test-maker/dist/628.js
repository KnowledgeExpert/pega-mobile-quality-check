'use strict';
exports['id'] = 0x274, exports['ids'] = [0x274], exports['modules'] = {
    0xb23c: (_0xbdb95, _0x580c5c, _0x4b19e3) => {
        _0x4b19e3['r'](_0x580c5c), _0x4b19e3['d'](_0x580c5c, { 'getFeatureCompilerConfig': () => _0x507c66 });
        var _0x26e533 = _0x4b19e3(0x1145c), _0x5c6d40 = _0x4b19e3['n'](_0x26e533), _0x1bcbd9 = _0x4b19e3(0x6036), _0x5d6b7c = _0x4b19e3['n'](_0x1bcbd9), _0x365606 = _0x4b19e3(0x5323), _0x1d65db = _0x4b19e3(0x17fbe), _0x24fd03 = _0x4b19e3['n'](_0x1d65db), _0x1853b9 = _0x4b19e3(0x11569), _0xae50eb = _0x4b19e3(0x3b1), _0x137daa = _0x4b19e3(0x176e9), _0xf9250a = _0x4b19e3['n'](_0x137daa), _0x3bcf2a = _0x4b19e3(0x16257), _0x1634f2 = _0x4b19e3['n'](_0x3bcf2a), _0x10583e = _0x4b19e3(0x13833), _0x31dad3 = _0x4b19e3(0x1fee), _0x1e04f2 = _0x4b19e3(0xc5d1), _0x31885b = _0x4b19e3(0x1273f), _0x15fa63 = _0x4b19e3['n'](_0x31885b);
        ;
        async function _0x3b6a11(_0x3de2cb) {
            const _0x4444da = {};
            if (!_0x3de2cb)
                throw new Error('must\x20provide\x20base\x20path');
            const _0x33ea5c = await _0x15fa63()(_0x3de2cb);
            _0x33ea5c['forEach'](_0x376968 => {
                const _0x59974d = _0xae50eb['trimExt'](_0x376968);
                _0x4444da[_0x59974d] = _0x376968;
            });
            if (!Object['keys'](_0x4444da)['length'])
                throw new Error('There\x20are\x20no\x20test\x20files\x20added,\x20please\x20make\x20sure\x20to\x20add\x20at\x20least\x20one\x20that\x20matches\x20the\x20convention\x20used.\x20The\x20default\x20one\x20(if\x20not\x20changed)\x20ends\x20with\x20\x27-spec.ts\x27,\x20for\x20example:\x20project-folder/src/specs/test-spec.ts');
            return _0x4444da;
        }
        var _0x18136d = _0x4b19e3(0x3458), _0x32bfe3 = _0x4b19e3(0x38ed), _0x837c9f = _0x4b19e3(0x16057), _0x1e0c9b = _0x4b19e3(0x1367e);
        ;
        async function _0x4248f6(_0xa36f9a, _0x1b9688, _0x77a869) {
            const _0x494f9b = {
                    'code': _0xa36f9a,
                    'linesAbove': 0x2,
                    'linesBelow': 0x2,
                    'mode': 'node',
                    'location': {
                        'start': {
                            'line': _0x1b9688,
                            'column': _0x77a869
                        }
                    },
                    'highlightOptions': { 'language': 'typescript' }
                }, _0xef28ce = (0x0, _0x837c9f['createCodeFrame'])(_0x494f9b), _0x4eac89 = (0x0, _0x837c9f['createCodeFrame'])({
                    ..._0x494f9b,
                    ...{ 'highlighter': _0x1ed351 => _0x1e0c9b['codeHighlighter']['highlightAsAnsi'](_0x1ed351) }
                });
            return {
                'noColor': _0xef28ce,
                'ansi': _0x4eac89,
                'html': _0x1e0c9b['codeHighlighter']['ansi2Html'](_0x4eac89)
            };
        }
        var _0x169793 = _0x4b19e3(0x147aa), _0x392c1c = _0x4b19e3(0xfa07), _0x30b64b = _0x4b19e3['n'](_0x392c1c);
        ;
        function _0x198ee1() {
            return _0x54f299 => {
                return _0x30b64b()['factory']['updateSourceFile'](_0x54f299, [
                    _0x30b64b()['factory']['createImportDeclaration'](undefined, undefined, undefined, _0x30b64b()['factory']['createStringLiteral']('source-map-support/register')),
                    ..._0x54f299['statements']
                ]);
            };
        }
        ;
        function _0x2e6b03(_0xab6512, _0xbfb676, _0x487737) {
            const _0x1eb328 = _0x3fa9de => {
                var _0x4a3a57;
                if (_0x487737['features']['has'](_0xbfb676['fileName']) && _0x3fa9de['kind'] === _0x30b64b()['SyntaxKind']['Block']) {
                    if (((_0x4a3a57 = _0x3fa9de['parent']) === null || _0x4a3a57 === void 0x0 ? void 0x0 : _0x4a3a57['kind']) !== _0x30b64b()['SyntaxKind']['ArrowFunction'])
                        return _0x3fa9de;
                    const _0x3e0acd = _0x3fa9de, _0x3ad2f1 = 'e';
                    return _0x30b64b()['factory']['updateBlock'](_0x3e0acd, [_0x30b64b()['factory']['createTryStatement'](_0x30b64b()['factory']['createBlock']([..._0x3e0acd['statements']], !![]), _0x30b64b()['factory']['createCatchClause'](_0x30b64b()['factory']['createVariableDeclaration'](_0x30b64b()['factory']['createIdentifier'](_0x3ad2f1)), _0x30b64b()['factory']['createBlock']([
                            _0x30b64b()['factory']['createExpressionStatement'](_0x30b64b()['factory']['createBinaryExpression'](_0x30b64b()['factory']['createPropertyAccessExpression'](_0x30b64b()['factory']['createIdentifier'](_0x3ad2f1), _0x30b64b()['factory']['createIdentifier']('fromSpec')), _0x30b64b()['factory']['createToken'](_0x30b64b()['SyntaxKind']['EqualsToken']), _0x30b64b()['factory']['createTrue']())),
                            _0x30b64b()['factory']['createExpressionStatement'](_0x30b64b()['factory']['createBinaryExpression'](_0x30b64b()['factory']['createPropertyAccessExpression'](_0x30b64b()['factory']['createIdentifier'](_0x3ad2f1), _0x30b64b()['factory']['createIdentifier']('filePath')), _0x30b64b()['factory']['createToken'](_0x30b64b()['SyntaxKind']['EqualsToken']), _0x30b64b()['factory']['createNoSubstitutionTemplateLiteral'](_0xbfb676['fileName'], _0xbfb676['fileName']))),
                            _0x30b64b()['factory']['createThrowStatement'](_0x30b64b()['factory']['createIdentifier'](_0x3ad2f1))
                        ], !![])), undefined)]);
                }
                return _0x30b64b()['visitEachChild'](_0x3fa9de, _0x1eb328, _0xab6512);
            };
            return _0x1eb328;
        }
        function _0x4e3d69(_0x363598) {
            return _0x3a9145 => {
                return _0xc0a510 => _0x30b64b()['visitNode'](_0xc0a510, _0x2e6b03(_0x3a9145, _0xc0a510, _0x363598));
            };
        }
        var _0x1f3727 = _0x4b19e3(0x17e06), _0x280709 = _0x4b19e3['n'](_0x1f3727);
        ;
        async function _0x507c66() {
            const _0x1e0f04 = [];
            Object['values'](_0x1e04f2['stateManager']['state']['source'])['forEach'](_0x5a9fce => _0x1e0f04['push'](..._0x5a9fce['path']));
            const _0xe6ff46 = await _0x3b6a11(_0x1e0f04), _0x153d1e = new Set();
            for (const [_0x1b797b, _0x4378ea] of Object['entries'](_0xe6ff46)) {
                let _0x4bed48 = !![];
                const _0x410383 = _0xae50eb['resolve'](_0xae50eb['normalizeTrim'](_0x4378ea)), _0x31150c = await _0x24fd03()['readFile'](_0x410383), _0x89307d = _0x31150c['toString']()['split']('\x0a');
                for (const [_0x3821c7, _0x155142] of _0x89307d['entries']()) {
                    const _0x4ec555 = /^\s*Feature\s*\(\s*['"`](.*)\s*['"`]\)*/gm, _0x544b49 = _0x4ec555['exec'](_0x155142);
                    if (_0x544b49) {
                        const _0x39c8b5 = _0x544b49[0x1];
                        _0x39c8b5 && _0x31dad3['configManager']['configuration']['filtering']['features']['length'] && !_0x31dad3['configManager']['configuration']['filtering']['features']['includes'](_0x39c8b5) && (_0x4bed48 = ![]);
                    }
                }
                _0x4bed48 ? _0x153d1e['add'](_0xae50eb['resolve'](_0x410383)) : delete _0xe6ff46[_0x1b797b];
            }
            const _0x2c7d64 = {
                    'compilerOptions': {
                        'module': 'esnext',
                        'moduleResolution': 'node',
                        'target': 'ES2018',
                        'jsx': 'react',
                        'sourceMap': !![],
                        'skipLibCheck': !![],
                        'skipDefaultLibCheck': !![],
                        'emitDecoratorMetadata': !![],
                        'experimentalDecorators': !![],
                        'resolveJsonModule': !![],
                        'downlevelIteration': !![],
                        'esModuleInterop': !![],
                        'importHelpers': !![],
                        'lib': [
                            'es6',
                            'dom',
                            'es2017'
                        ]
                    },
                    'include': [..._0x153d1e],
                    'exclude': [_0x10583e['projectPath'] + '/node_modules/**/*.*']
                }, _0x4091aa = {
                    'async': ![],
                    'typescript': { 'configOverwrite': _0x2c7d64 },
                    'issue': {
                        'exclude': [{
                                'origin': 'typescript',
                                'file': 'node_modules/**/*.*'
                            }]
                    },
                    'logger': { 'infrastructure': 'silent' }
                };
            if (_0x31dad3['configManager']['configuration']['build']['compiler']['typescript']['typeCheck'])
                console['warn'](_0x5c6d40()['yellow']('\x27configManager.configuration.build.compiler.typescript.typeCheck\x27\x20is\x20enabled.\x20this\x20will\x20make\x20compilation\x20times\x20longer\x20because\x20of\x20Typescript\x20checking\x20Process.'));
            const _0x351a88 = _0x280709()(process['argv']['slice'](0x2)), _0x4c736b = {
                    'entry': _0xe6ff46,
                    'watch': ![],
                    'target': 'node',
                    'mode': 'development',
                    'devtool': _0x351a88['devtools'] || 'source-map',
                    'externals': [
                        _0xf9250a()(),
                        { [_0x10583e['testMakerPackageName']]: _0x10583e['testMakerInstallPath'] }
                    ],
                    'externalsPresets': { 'node': !![] },
                    'resolve': {
                        'extensions': [
                            '.ts',
                            '.tsx',
                            '.js',
                            '.json'
                        ],
                        'modules': _0x10583e['modulesPaths'],
                        'alias': { [_0x10583e['testMakerPackageName']]: _0x10583e['testMakerInstallPath'] }
                    },
                    'resolveLoader': { 'modules': _0x10583e['modulesPaths'] },
                    'output': {
                        'path': _0x1853b9['resolve'](_0x10583e['projectPath'], _0x31dad3['configManager']['configuration']['build']['output']['path'] + '/tests'),
                        'libraryTarget': 'umd',
                        'filename': '[name].js',
                        'pathinfo': !![],
                        'devtoolModuleFilenameTemplate': _0x351a88['devToolsTemplate'] || '[absolute-resource-path]'
                    },
                    'optimization': {
                        'concatenateModules': ![],
                        'mangleExports': ![],
                        'innerGraph': ![],
                        'removeAvailableModules': ![],
                        'removeEmptyChunks': ![],
                        'mergeDuplicateChunks': ![],
                        'flagIncludedChunks': ![],
                        'runtimeChunk': ![],
                        'providedExports': ![],
                        'usedExports': ![],
                        'portableRecords': ![],
                        'realContentHash': ![],
                        'splitChunks': { 'chunks': 'all' }
                    },
                    'plugins': [
                        new (_0x1634f2())({
                            'summaryContent': !![],
                            'format': 'build\x20[' + _0x5c6d40()['green'](':bar') + ']\x20' + _0x5c6d40()['green']['bold'](':percent') + '\x20current\x20' + _0x5c6d40()['green']['bold'](':current') + '\x20/\x20total\x20' + _0x5c6d40()['green']['bold'](':total') + '\x20(:elapsed\x20seconds)\x20'
                        }),
                        new (_0x5d6b7c())({
                            'beforeCompile': new _0x365606['PromiseTask'](async () => {
                                try {
                                    _0x1e04f2['stateManager']['state']['runner']['ChangeTask'] = (0x0, _0x18136d['lazyPromise'])(), _0x1e04f2['stateManager']['state']['runner']['runs']++, _0x31dad3['configManager']['configuration']['build']['cleanUp']['reports'] && _0x31dad3['configManager']['configuration']['reporting']['path'] && _0x1e04f2['stateManager']['state']['runner']['runs'] >= 0x1 && (console['info']('\x0a-\x20Deleting\x20Old\x20Reporters\x20Files'), await _0x24fd03()['remove'](_0x1853b9['resolve'](_0x31dad3['configManager']['configuration']['reporting']['path']))), console['info']('-\x20Compiling\x20Spec\x20Files\x0a');
                                } catch (_0x1be1c8) {
                                    await (0x0, _0x32bfe3['logGenericError'])({ 'error': _0x1be1c8 });
                                }
                            }),
                            'emit': new _0x365606['PromiseTask'](async _0x2c9cfb => {
                                if (_0x1e04f2['stateManager']['state']['runner']['runs'] > 0x1) {
                                    const _0x331680 = _0x2c9cfb['getStats']()['toJson']({
                                            'hash': ![],
                                            'publicPath': ![],
                                            'assets': ![],
                                            'chunks': !![],
                                            'modules': ![],
                                            'source': ![],
                                            'errorDetails': ![],
                                            'timings': ![]
                                        }), _0x3c360c = _0x331680['chunks']['filter'](_0x564d67 => _0x564d67['rendered'] === !![]);
                                    for (let _0x51d989 of _0x3c360c) {
                                        const _0x3b1848 = _0xae50eb['resolve'](_0x10583e['projectPath'], _0x31dad3['configManager']['configuration']['build']['output']['path'] + '/tests/' + _0x51d989['files'][0x0]);
                                        for (let _0x3a1bd0 of _0x1e04f2['stateManager']['state']['runner']['loadedFeatures']['values']()) {
                                            if (_0x3a1bd0['astInfo']['distPath'] === _0x3b1848)
                                                _0x1e04f2['stateManager']['state']['runner']['loadedFeatures']['delete'](_0x3a1bd0['astInfo']['name']);
                                        }
                                        for (let _0x1acbae of _0x1e04f2['stateManager']['state']['runner']['featuresAst']['values']()) {
                                            if (_0x1acbae['distPath'] === _0x3b1848)
                                                _0x1acbae['didRun'] = ![];
                                        }
                                        _0x1e04f2['stateManager']['state']['runner']['changedFeatures']['add'](_0x3b1848);
                                    }
                                    const _0x24260e = setInterval(async () => {
                                        var _0x2dcdce;
                                        !_0x1e04f2['stateManager']['state']['runner']['changedFeatures']['size'] && (clearInterval(_0x24260e), await ((_0x2dcdce = _0x1e04f2['stateManager']['state']['runner']['ChangeTask']) === null || _0x2dcdce === void 0x0 ? void 0x0 : _0x2dcdce['resolve']()));
                                    }, 0x64);
                                }
                            })
                        }),
                        ..._0x31dad3['configManager']['configuration']['build']['compiler']['typescript']['typeCheck'] ? [new (await Promise['resolve']()['then'](_0x4b19e3['t']['bind'](_0x4b19e3, 0x36aa, 0x17)))['default'](_0x4091aa)] : []
                    ],
                    'module': {
                        'rules': [{
                                'test': /\.tsx?$/,
                                'use': [
                                    {
                                        'loader': _0x1853b9['resolve'](_0x10583e['testMakerInstallPath'], 'dist/feature-loader.js'),
                                        'options': {
                                            'whiteList': _0xe6ff46,
                                            'configManager': _0x31dad3['configManager'],
                                            'stateManager': _0x1e04f2['stateManager'],
                                            'renderCodeFrame': _0x4248f6
                                        }
                                    },
                                    {
                                        'loader': (0x0, _0x169793['resolveLinkedModule'])('ts-loader'),
                                        'options': {
                                            'transpileOnly': !![],
                                            'experimentalFileCaching': !![],
                                            'experimentalWatchApi': !![],
                                            'compilerOptions': _0x2c7d64,
                                            'getCustomTransformers': _0x966d72 => ({
                                                'before': [
                                                    _0x198ee1,
                                                    _0x4e3d69({ 'features': _0x153d1e })
                                                ]
                                            })
                                        }
                                    }
                                ],
                                'exclude': [
                                    _0x1853b9['resolve'](_0x10583e['projectPath'] + '/node_modules'),
                                    /node_modules/
                                ]
                            }]
                    }
                };
            return _0x4c736b;
        }
    },
    0x147aa: (_0x517d30, _0x3e00f1, _0x418fb4) => {
        _0x418fb4['r'](_0x3e00f1), _0x418fb4['d'](_0x3e00f1, { 'resolveLinkedModule': () => _0x1586ca });
        var _0x44c91b = _0x418fb4(0x11569), _0x5da77f = _0x418fb4['n'](_0x44c91b), _0x2fa566 = _0x418fb4(0x17a85);
        function _0x1586ca(_0x237b0c) {
            let _0x49016a, _0x25035c = '';
            try {
                _0x25035c = _0x2fa566['nativeRequire']['resolve'](_0x237b0c);
            } catch (_0x996037) {
                _0x49016a = _0x996037;
            }
            if (!_0x25035c)
                try {
                    _0x25035c = _0x2fa566['nativeRequire']['resolve'](_0x5da77f()['resolve'](process['cwd']() + '/node_modules/test-maker/node_modules/' + _0x237b0c)), _0x49016a = undefined;
                } catch (_0x7a6d50) {
                    try {
                        !_0x25035c && (_0x25035c = _0x2fa566['nativeRequire']['resolve'](_0x5da77f()['resolve'](process['cwd']() + '/node_modules/' + _0x237b0c))), _0x49016a = undefined;
                    } catch (_0x46655f) {
                        _0x49016a = _0x46655f;
                    }
                }
            if (_0x49016a)
                throw _0x49016a;
            return _0x25035c;
        }
    }
};
;
//# sourceMappingURL=628.js.map
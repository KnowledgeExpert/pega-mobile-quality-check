exports['id'] = 0x13a, exports['ids'] = [0x13a], exports['modules'] = {
    0x12bf4: (_0x23594e, _0x3545a5, _0x49ff3e) => {
        'use strict';
        var _0x7706c6 = _0x49ff3e(0x9431), _0x4ebb1f = _0x49ff3e(0xe87a);
        _0x23594e['exports'] = _0x1f0815;
        function _0x1f0815(_0x3506b7) {
            if (!(this instanceof _0x1f0815))
                return new _0x1f0815(_0x3506b7);
            this['headers'] = _0x3506b7['headers'], this['negotiator'] = new _0x7706c6(_0x3506b7);
        }
        _0x1f0815['prototype']['type'] = _0x1f0815['prototype']['types'] = function (_0x13eb51) {
            var _0x4e3545 = _0x13eb51;
            if (_0x4e3545 && !Array['isArray'](_0x4e3545)) {
                _0x4e3545 = new Array(arguments['length']);
                for (var _0x4148c0 = 0x0; _0x4148c0 < _0x4e3545['length']; _0x4148c0++) {
                    _0x4e3545[_0x4148c0] = arguments[_0x4148c0];
                }
            }
            if (!_0x4e3545 || _0x4e3545['length'] === 0x0)
                return this['negotiator']['mediaTypes']();
            if (!this['headers']['accept'])
                return _0x4e3545[0x0];
            var _0x13ce1c = _0x4e3545['map'](_0x19fc68), _0x4b2765 = this['negotiator']['mediaTypes'](_0x13ce1c['filter'](_0x43b57b)), _0x5ee2be = _0x4b2765[0x0];
            return _0x5ee2be ? _0x4e3545[_0x13ce1c['indexOf'](_0x5ee2be)] : ![];
        }, _0x1f0815['prototype']['encoding'] = _0x1f0815['prototype']['encodings'] = function (_0x2f6126) {
            var _0x1d41a7 = _0x2f6126;
            if (_0x1d41a7 && !Array['isArray'](_0x1d41a7)) {
                _0x1d41a7 = new Array(arguments['length']);
                for (var _0x55107c = 0x0; _0x55107c < _0x1d41a7['length']; _0x55107c++) {
                    _0x1d41a7[_0x55107c] = arguments[_0x55107c];
                }
            }
            if (!_0x1d41a7 || _0x1d41a7['length'] === 0x0)
                return this['negotiator']['encodings']();
            return this['negotiator']['encodings'](_0x1d41a7)[0x0] || ![];
        }, _0x1f0815['prototype']['charset'] = _0x1f0815['prototype']['charsets'] = function (_0x4126d0) {
            var _0x4c930a = _0x4126d0;
            if (_0x4c930a && !Array['isArray'](_0x4c930a)) {
                _0x4c930a = new Array(arguments['length']);
                for (var _0xd3bcf9 = 0x0; _0xd3bcf9 < _0x4c930a['length']; _0xd3bcf9++) {
                    _0x4c930a[_0xd3bcf9] = arguments[_0xd3bcf9];
                }
            }
            if (!_0x4c930a || _0x4c930a['length'] === 0x0)
                return this['negotiator']['charsets']();
            return this['negotiator']['charsets'](_0x4c930a)[0x0] || ![];
        }, _0x1f0815['prototype']['lang'] = _0x1f0815['prototype']['langs'] = _0x1f0815['prototype']['language'] = _0x1f0815['prototype']['languages'] = function (_0xd8dfd8) {
            var _0x1eed23 = _0xd8dfd8;
            if (_0x1eed23 && !Array['isArray'](_0x1eed23)) {
                _0x1eed23 = new Array(arguments['length']);
                for (var _0x163575 = 0x0; _0x163575 < _0x1eed23['length']; _0x163575++) {
                    _0x1eed23[_0x163575] = arguments[_0x163575];
                }
            }
            if (!_0x1eed23 || _0x1eed23['length'] === 0x0)
                return this['negotiator']['languages']();
            return this['negotiator']['languages'](_0x1eed23)[0x0] || ![];
        };
        function _0x19fc68(_0xb8da60) {
            return _0xb8da60['indexOf']('/') === -0x1 ? _0x4ebb1f['lookup'](_0xb8da60) : _0xb8da60;
        }
        function _0x43b57b(_0x54825a) {
            return typeof _0x54825a === 'string';
        }
    },
    0x7384: (_0x44b710, _0x492396, _0x436801) => {
        var _0xc9f922 = _0x436801(0x17e1), _0x12ea6e = function () {
            };
        _0x12ea6e['prototype']['getRandomBytes'] = function (_0x404276) {
            var _0x8adcd5 = 0x1000, _0x4e3d94 = this;
            _0x404276 = _0x404276 || 0xc;
            if (_0x404276 > _0x8adcd5)
                return _0xc9f922['randomBytes'](_0x404276);
            var _0x573ce3 = parseInt(_0x8adcd5 / _0x404276), _0x5e6b05 = parseInt(_0x573ce3 * 0.85);
            if (!_0x5e6b05)
                return _0xc9f922['randomBytes'](_0x404276);
            this['bytesBufferIndex'] == null && (this['bytesBufferIndex'] = -0x1);
            this['bytesBufferIndex'] == _0x573ce3 && (this['bytesBuffer'] = null, this['bytesBufferIndex'] = -0x1);
            if (this['bytesBufferIndex'] == -0x1 || this['bytesBufferIndex'] > _0x5e6b05) {
                !this['isGeneratingBytes'] && (this['isGeneratingBytes'] = !![], _0xc9f922['randomBytes'](_0x8adcd5, function (_0x439325, _0x403a6e) {
                    _0x4e3d94['bytesBuffer'] = _0x403a6e, _0x4e3d94['bytesBufferIndex'] = 0x0, _0x4e3d94['isGeneratingBytes'] = ![];
                }));
                if (this['bytesBufferIndex'] == -0x1)
                    return _0xc9f922['randomBytes'](_0x404276);
            }
            var _0x3c9a08 = this['bytesBuffer']['slice'](_0x404276 * this['bytesBufferIndex'], _0x404276 * (this['bytesBufferIndex'] + 0x1));
            return this['bytesBufferIndex']++, _0x3c9a08;
        }, _0x12ea6e['prototype']['generateId'] = function () {
            var _0x7ef06a = Buffer['alloc'](0xf);
            if (!_0x7ef06a['writeInt32BE'])
                return Math['abs'](Math['random']() * Math['random']() * Date['now']() | 0x0)['toString']() + Math['abs'](Math['random']() * Math['random']() * Date['now']() | 0x0)['toString']();
            return this['sequenceNumber'] = this['sequenceNumber'] + 0x1 | 0x0, _0x7ef06a['writeInt32BE'](this['sequenceNumber'], 0xb), _0xc9f922['randomBytes'] ? this['getRandomBytes'](0xc)['copy'](_0x7ef06a) : [
                0x0,
                0x4,
                0x8
            ]['forEach'](function (_0x479f07) {
                _0x7ef06a['writeInt32BE'](Math['random']() * Math['pow'](0x2, 0x20) | 0x0, _0x479f07);
            }), _0x7ef06a['toString']('base64')['replace'](/\//g, '_')['replace'](/\+/g, '-');
        }, _0x492396 = _0x44b710['exports'] = new _0x12ea6e();
    },
    0x4527: _0x59c2c6 => {
        'use strict';
        const _0x2cbdec = (_0xd06880, _0x450538, _0x5e2e63, _0xa3088, _0x39c581) => {
                for (var _0x4b1f7f = 0x0; _0x4b1f7f < _0x39c581; _0x4b1f7f++) {
                    _0x5e2e63[_0xa3088 + _0x4b1f7f] = _0xd06880[_0x4b1f7f] ^ _0x450538[_0x4b1f7f & 0x3];
                }
            }, _0x8ec21a = (_0xc47c76, _0x312c5f) => {
                const _0x4cb96f = _0xc47c76['length'];
                for (var _0x34925f = 0x0; _0x34925f < _0x4cb96f; _0x34925f++) {
                    _0xc47c76[_0x34925f] ^= _0x312c5f[_0x34925f & 0x3];
                }
            };
        _0x59c2c6['exports'] = {
            'mask': _0x2cbdec,
            'unmask': _0x8ec21a
        };
    },
    0x4033: (_0x57e2ce, _0x503a54, _0x551932) => {
        'use strict';
        try {
            _0x57e2ce['exports'] = _0x551932(0xd41b)(__dirname);
        } catch (_0x2964fa) {
            _0x57e2ce['exports'] = _0x551932(0x4527);
        }
    },
    0x16c04: (_0x15cb4b, _0x50e19d) => {
        'use strict';
        _0x50e19d['parse'] = _0x133984, _0x50e19d['serialize'] = _0x784bcb;
        var _0x292c96 = decodeURIComponent, _0x40fa64 = encodeURIComponent, _0x283bb2 = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
        function _0x133984(_0xa686ed, _0x12b372) {
            if (typeof _0xa686ed !== 'string')
                throw new TypeError('argument\x20str\x20must\x20be\x20a\x20string');
            var _0x48c9ba = {}, _0x123128 = _0x12b372 || {}, _0x2994fd = _0xa686ed['split'](';'), _0x360321 = _0x123128['decode'] || _0x292c96;
            for (var _0x5cf217 = 0x0; _0x5cf217 < _0x2994fd['length']; _0x5cf217++) {
                var _0x526a1d = _0x2994fd[_0x5cf217], _0x11cfa5 = _0x526a1d['indexOf']('=');
                if (_0x11cfa5 < 0x0)
                    continue;
                var _0x20aad9 = _0x526a1d['substring'](0x0, _0x11cfa5)['trim']();
                if (undefined == _0x48c9ba[_0x20aad9]) {
                    var _0x3089ee = _0x526a1d['substring'](_0x11cfa5 + 0x1, _0x526a1d['length'])['trim']();
                    _0x3089ee[0x0] === '\x22' && (_0x3089ee = _0x3089ee['slice'](0x1, -0x1)), _0x48c9ba[_0x20aad9] = _0x2642f3(_0x3089ee, _0x360321);
                }
            }
            return _0x48c9ba;
        }
        function _0x784bcb(_0x3bef88, _0x18d67d, _0x313231) {
            var _0x531775 = _0x313231 || {}, _0x4093a8 = _0x531775['encode'] || _0x40fa64;
            if (typeof _0x4093a8 !== 'function')
                throw new TypeError('option\x20encode\x20is\x20invalid');
            if (!_0x283bb2['test'](_0x3bef88))
                throw new TypeError('argument\x20name\x20is\x20invalid');
            var _0xeac649 = _0x4093a8(_0x18d67d);
            if (_0xeac649 && !_0x283bb2['test'](_0xeac649))
                throw new TypeError('argument\x20val\x20is\x20invalid');
            var _0x36dec6 = _0x3bef88 + '=' + _0xeac649;
            if (null != _0x531775['maxAge']) {
                var _0x5d41f1 = _0x531775['maxAge'] - 0x0;
                if (isNaN(_0x5d41f1) || !isFinite(_0x5d41f1))
                    throw new TypeError('option\x20maxAge\x20is\x20invalid');
                _0x36dec6 += ';\x20Max-Age=' + Math['floor'](_0x5d41f1);
            }
            if (_0x531775['domain']) {
                if (!_0x283bb2['test'](_0x531775['domain']))
                    throw new TypeError('option\x20domain\x20is\x20invalid');
                _0x36dec6 += ';\x20Domain=' + _0x531775['domain'];
            }
            if (_0x531775['path']) {
                if (!_0x283bb2['test'](_0x531775['path']))
                    throw new TypeError('option\x20path\x20is\x20invalid');
                _0x36dec6 += ';\x20Path=' + _0x531775['path'];
            }
            if (_0x531775['expires']) {
                if (typeof _0x531775['expires']['toUTCString'] !== 'function')
                    throw new TypeError('option\x20expires\x20is\x20invalid');
                _0x36dec6 += ';\x20Expires=' + _0x531775['expires']['toUTCString']();
            }
            _0x531775['httpOnly'] && (_0x36dec6 += ';\x20HttpOnly');
            _0x531775['secure'] && (_0x36dec6 += ';\x20Secure');
            if (_0x531775['sameSite']) {
                var _0x53d1c4 = typeof _0x531775['sameSite'] === 'string' ? _0x531775['sameSite']['toLowerCase']() : _0x531775['sameSite'];
                switch (_0x53d1c4) {
                case !![]:
                    _0x36dec6 += ';\x20SameSite=Strict';
                    break;
                case 'lax':
                    _0x36dec6 += ';\x20SameSite=Lax';
                    break;
                case 'strict':
                    _0x36dec6 += ';\x20SameSite=Strict';
                    break;
                case 'none':
                    _0x36dec6 += ';\x20SameSite=None';
                    break;
                default:
                    throw new TypeError('option\x20sameSite\x20is\x20invalid');
                }
            }
            return _0x36dec6;
        }
        function _0x2642f3(_0x3e1dbd, _0x18c608) {
            try {
                return _0x18c608(_0x3e1dbd);
            } catch (_0x4d4351) {
                return _0x3e1dbd;
            }
        }
    },
    0x1642d: (_0x6b64e, _0x20225c, _0x13384b) => {
        (function () {
            'use strict';
            var _0x496006 = _0x13384b(0x58ef), _0x19804a = _0x13384b(0x56ef), _0x5b7f54 = {
                    'origin': '*',
                    'methods': 'GET,HEAD,PUT,PATCH,POST,DELETE',
                    'preflightContinue': ![],
                    'optionsSuccessStatus': 0xcc
                };
            function _0x1c51dc(_0x15fcda) {
                return typeof _0x15fcda === 'string' || _0x15fcda instanceof String;
            }
            function _0x266df0(_0x4f6d1d, _0x134681) {
                if (Array['isArray'](_0x134681)) {
                    for (var _0x9f69e2 = 0x0; _0x9f69e2 < _0x134681['length']; ++_0x9f69e2) {
                        if (_0x266df0(_0x4f6d1d, _0x134681[_0x9f69e2]))
                            return !![];
                    }
                    return ![];
                } else {
                    if (_0x1c51dc(_0x134681))
                        return _0x4f6d1d === _0x134681;
                    else
                        return _0x134681 instanceof RegExp ? _0x134681['test'](_0x4f6d1d) : !!_0x134681;
                }
            }
            function _0x519835(_0x50e912, _0x1cdedc) {
                var _0x356440 = _0x1cdedc['headers']['origin'], _0x4446c7 = [], _0x324450;
                if (!_0x50e912['origin'] || _0x50e912['origin'] === '*')
                    _0x4446c7['push']([{
                            'key': 'Access-Control-Allow-Origin',
                            'value': '*'
                        }]);
                else
                    _0x1c51dc(_0x50e912['origin']) ? (_0x4446c7['push']([{
                            'key': 'Access-Control-Allow-Origin',
                            'value': _0x50e912['origin']
                        }]), _0x4446c7['push']([{
                            'key': 'Vary',
                            'value': 'Origin'
                        }])) : (_0x324450 = _0x266df0(_0x356440, _0x50e912['origin']), _0x4446c7['push']([{
                            'key': 'Access-Control-Allow-Origin',
                            'value': _0x324450 ? _0x356440 : ![]
                        }]), _0x4446c7['push']([{
                            'key': 'Vary',
                            'value': 'Origin'
                        }]));
                return _0x4446c7;
            }
            function _0x2723be(_0x47e8e8) {
                var _0xdb16f = _0x47e8e8['methods'];
                return _0xdb16f['join'] && (_0xdb16f = _0x47e8e8['methods']['join'](',')), {
                    'key': 'Access-Control-Allow-Methods',
                    'value': _0xdb16f
                };
            }
            function _0x1d85f8(_0x4b5434) {
                if (_0x4b5434['credentials'] === !![])
                    return {
                        'key': 'Access-Control-Allow-Credentials',
                        'value': 'true'
                    };
                return null;
            }
            function _0x1f849a(_0x5dec7c, _0x1ee001) {
                var _0x220bf8 = _0x5dec7c['allowedHeaders'] || _0x5dec7c['headers'], _0x42e2c5 = [];
                if (!_0x220bf8)
                    _0x220bf8 = _0x1ee001['headers']['access-control-request-headers'], _0x42e2c5['push']([{
                            'key': 'Vary',
                            'value': 'Access-Control-Request-Headers'
                        }]);
                else
                    _0x220bf8['join'] && (_0x220bf8 = _0x220bf8['join'](','));
                return _0x220bf8 && _0x220bf8['length'] && _0x42e2c5['push']([{
                        'key': 'Access-Control-Allow-Headers',
                        'value': _0x220bf8
                    }]), _0x42e2c5;
            }
            function _0x20ec2d(_0x243b1d) {
                var _0x28e95d = _0x243b1d['exposedHeaders'];
                if (!_0x28e95d)
                    return null;
                else
                    _0x28e95d['join'] && (_0x28e95d = _0x28e95d['join'](','));
                if (_0x28e95d && _0x28e95d['length'])
                    return {
                        'key': 'Access-Control-Expose-Headers',
                        'value': _0x28e95d
                    };
                return null;
            }
            function _0x22e566(_0x2069cc) {
                var _0x3c997d = (typeof _0x2069cc['maxAge'] === 'number' || _0x2069cc['maxAge']) && _0x2069cc['maxAge']['toString']();
                if (_0x3c997d && _0x3c997d['length'])
                    return {
                        'key': 'Access-Control-Max-Age',
                        'value': _0x3c997d
                    };
                return null;
            }
            function _0x5a6536(_0x3df219, _0xe40cf2) {
                for (var _0x486839 = 0x0, _0x103ad2 = _0x3df219['length']; _0x486839 < _0x103ad2; _0x486839++) {
                    var _0x163abe = _0x3df219[_0x486839];
                    if (_0x163abe) {
                        if (Array['isArray'](_0x163abe))
                            _0x5a6536(_0x163abe, _0xe40cf2);
                        else {
                            if (_0x163abe['key'] === 'Vary' && _0x163abe['value'])
                                _0x19804a(_0xe40cf2, _0x163abe['value']);
                            else
                                _0x163abe['value'] && _0xe40cf2['setHeader'](_0x163abe['key'], _0x163abe['value']);
                        }
                    }
                }
            }
            function _0x20d40d(_0x5d8d73, _0x22bfba, _0x109450, _0x5d6bbf) {
                var _0x29f59a = [], _0x502c71 = _0x22bfba['method'] && _0x22bfba['method']['toUpperCase'] && _0x22bfba['method']['toUpperCase']();
                _0x502c71 === 'OPTIONS' ? (_0x29f59a['push'](_0x519835(_0x5d8d73, _0x22bfba)), _0x29f59a['push'](_0x1d85f8(_0x5d8d73, _0x22bfba)), _0x29f59a['push'](_0x2723be(_0x5d8d73, _0x22bfba)), _0x29f59a['push'](_0x1f849a(_0x5d8d73, _0x22bfba)), _0x29f59a['push'](_0x22e566(_0x5d8d73, _0x22bfba)), _0x29f59a['push'](_0x20ec2d(_0x5d8d73, _0x22bfba)), _0x5a6536(_0x29f59a, _0x109450), _0x5d8d73['preflightContinue'] ? _0x5d6bbf() : (_0x109450['statusCode'] = _0x5d8d73['optionsSuccessStatus'], _0x109450['setHeader']('Content-Length', '0'), _0x109450['end']())) : (_0x29f59a['push'](_0x519835(_0x5d8d73, _0x22bfba)), _0x29f59a['push'](_0x1d85f8(_0x5d8d73, _0x22bfba)), _0x29f59a['push'](_0x20ec2d(_0x5d8d73, _0x22bfba)), _0x5a6536(_0x29f59a, _0x109450), _0x5d6bbf());
            }
            function _0x2cb63e(_0x18a1b7) {
                var _0x98fc2e = null;
                return typeof _0x18a1b7 === 'function' ? _0x98fc2e = _0x18a1b7 : _0x98fc2e = function (_0x37ea2c, _0x3219e1) {
                    _0x3219e1(null, _0x18a1b7);
                }, function _0x3688a1(_0x2f497d, _0x151588, _0x3dd145) {
                    _0x98fc2e(_0x2f497d, function (_0x4e6314, _0x5f10a7) {
                        if (_0x4e6314)
                            _0x3dd145(_0x4e6314);
                        else {
                            var _0x7ef838 = _0x496006({}, _0x5b7f54, _0x5f10a7), _0x4cf78c = null;
                            if (_0x7ef838['origin'] && typeof _0x7ef838['origin'] === 'function')
                                _0x4cf78c = _0x7ef838['origin'];
                            else
                                _0x7ef838['origin'] && (_0x4cf78c = function (_0x24f869, _0x151f07) {
                                    _0x151f07(null, _0x7ef838['origin']);
                                });
                            _0x4cf78c ? _0x4cf78c(_0x2f497d['headers']['origin'], function (_0x232bf0, _0x425ea2) {
                                _0x232bf0 || !_0x425ea2 ? _0x3dd145(_0x232bf0) : (_0x7ef838['origin'] = _0x425ea2, _0x20d40d(_0x7ef838, _0x2f497d, _0x151588, _0x3dd145));
                            }) : _0x3dd145();
                        }
                    });
                };
            }
            _0x6b64e['exports'] = _0x2cb63e;
        }());
    },
    0x22c8: (_0x29d667, _0x1c52ff, _0x2bda91) => {
        'use strict';
        var _0x30b50a = _0x2bda91(0x13377);
        function _0xcc1c4c(_0x14a031, _0x5a98f4, _0x26a045) {
            typeof _0x14a031 === 'function' && (_0x26a045 = _0x5a98f4, _0x5a98f4 = _0x14a031, _0x14a031 = null);
            if (_0x26a045 < 0x1)
                throw new Error('fastqueue\x20concurrency\x20must\x20be\x20greater\x20than\x201');
            var _0x13e1e9 = _0x30b50a(_0x44b8bb), _0x12e074 = null, _0x480479 = null, _0x10862d = 0x0, _0x3ad1aa = null, _0xdc2180 = {
                    'push': _0x34fef0,
                    'drain': _0x4a92b3,
                    'saturated': _0x4a92b3,
                    'pause': _0x2d90ca,
                    'paused': ![],
                    'concurrency': _0x26a045,
                    'running': _0x54f397,
                    'resume': _0x7e6d69,
                    'idle': _0x121f2c,
                    'length': _0x131b5c,
                    'getQueue': _0x50c188,
                    'unshift': _0x154dbd,
                    'empty': _0x4a92b3,
                    'kill': _0x493890,
                    'killAndDrain': _0x54196d,
                    'error': _0x508291
                };
            return _0xdc2180;
            function _0x54f397() {
                return _0x10862d;
            }
            function _0x2d90ca() {
                _0xdc2180['paused'] = !![];
            }
            function _0x131b5c() {
                var _0x1a56e6 = _0x12e074, _0x162862 = 0x0;
                while (_0x1a56e6) {
                    _0x1a56e6 = _0x1a56e6['next'], _0x162862++;
                }
                return _0x162862;
            }
            function _0x50c188() {
                var _0x40fe7f = _0x12e074, _0x293ec0 = [];
                while (_0x40fe7f) {
                    _0x293ec0['push'](_0x40fe7f['value']), _0x40fe7f = _0x40fe7f['next'];
                }
                return _0x293ec0;
            }
            function _0x7e6d69() {
                if (!_0xdc2180['paused'])
                    return;
                _0xdc2180['paused'] = ![];
                for (var _0x36ed03 = 0x0; _0x36ed03 < _0xdc2180['concurrency']; _0x36ed03++) {
                    _0x10862d++, _0x592ad0();
                }
            }
            function _0x121f2c() {
                return _0x10862d === 0x0 && _0xdc2180['length']() === 0x0;
            }
            function _0x34fef0(_0x32faef, _0x34db15) {
                var _0x1a52ce = _0x13e1e9['get']();
                _0x1a52ce['context'] = _0x14a031, _0x1a52ce['release'] = _0x592ad0, _0x1a52ce['value'] = _0x32faef, _0x1a52ce['callback'] = _0x34db15 || _0x4a92b3, _0x1a52ce['errorHandler'] = _0x3ad1aa, _0x10862d === _0xdc2180['concurrency'] || _0xdc2180['paused'] ? _0x480479 ? (_0x480479['next'] = _0x1a52ce, _0x480479 = _0x1a52ce) : (_0x12e074 = _0x1a52ce, _0x480479 = _0x1a52ce, _0xdc2180['saturated']()) : (_0x10862d++, _0x5a98f4['call'](_0x14a031, _0x1a52ce['value'], _0x1a52ce['worked']));
            }
            function _0x154dbd(_0x309500, _0x5c3886) {
                var _0x2cb60e = _0x13e1e9['get']();
                _0x2cb60e['context'] = _0x14a031, _0x2cb60e['release'] = _0x592ad0, _0x2cb60e['value'] = _0x309500, _0x2cb60e['callback'] = _0x5c3886 || _0x4a92b3, _0x10862d === _0xdc2180['concurrency'] || _0xdc2180['paused'] ? _0x12e074 ? (_0x2cb60e['next'] = _0x12e074, _0x12e074 = _0x2cb60e) : (_0x12e074 = _0x2cb60e, _0x480479 = _0x2cb60e, _0xdc2180['saturated']()) : (_0x10862d++, _0x5a98f4['call'](_0x14a031, _0x2cb60e['value'], _0x2cb60e['worked']));
            }
            function _0x592ad0(_0x50e6f1) {
                _0x50e6f1 && _0x13e1e9['release'](_0x50e6f1);
                var _0x43f236 = _0x12e074;
                if (_0x43f236)
                    !_0xdc2180['paused'] ? (_0x480479 === _0x12e074 && (_0x480479 = null), _0x12e074 = _0x43f236['next'], _0x43f236['next'] = null, _0x5a98f4['call'](_0x14a031, _0x43f236['value'], _0x43f236['worked']), _0x480479 === null && _0xdc2180['empty']()) : _0x10862d--;
                else
                    --_0x10862d === 0x0 && _0xdc2180['drain']();
            }
            function _0x493890() {
                _0x12e074 = null, _0x480479 = null, _0xdc2180['drain'] = _0x4a92b3;
            }
            function _0x54196d() {
                _0x12e074 = null, _0x480479 = null, _0xdc2180['drain'](), _0xdc2180['drain'] = _0x4a92b3;
            }
            function _0x508291(_0x149876) {
                _0x3ad1aa = _0x149876;
            }
        }
        function _0x4a92b3() {
        }
        function _0x44b8bb() {
            this['value'] = null, this['callback'] = _0x4a92b3, this['next'] = null, this['release'] = _0x4a92b3, this['context'] = null, this['errorHandler'] = null;
            var _0xe58212 = this;
            this['worked'] = function _0x34a537(_0xbf5c79, _0x59c629) {
                var _0x57164a = _0xe58212['callback'], _0x450f67 = _0xe58212['errorHandler'], _0x1a22e7 = _0xe58212['value'];
                _0xe58212['value'] = null, _0xe58212['callback'] = _0x4a92b3, _0xe58212['errorHandler'] && _0x450f67(_0xbf5c79, _0x1a22e7), _0x57164a['call'](_0xe58212['context'], _0xbf5c79, _0x59c629), _0xe58212['release'](_0xe58212);
            };
        }
        function _0x3dc08e(_0x509f91, _0x26606d, _0x490dca) {
            typeof _0x509f91 === 'function' && (_0x490dca = _0x26606d, _0x26606d = _0x509f91, _0x509f91 = null);
            function _0x531149(_0x1fd789, _0x1e84c8) {
                _0x26606d['call'](this, _0x1fd789)['then'](function (_0x2938a8) {
                    _0x1e84c8(null, _0x2938a8);
                }, _0x1e84c8);
            }
            var _0x4af0ba = _0xcc1c4c(_0x509f91, _0x531149, _0x490dca), _0x32890b = _0x4af0ba['push'], _0x1ebb4e = _0x4af0ba['unshift'];
            _0x4af0ba['push'] = _0x7b0a2b, _0x4af0ba['unshift'] = _0x3887ff, _0x4af0ba['drained'] = _0xe6dc4d;
            return _0x4af0ba;
            function _0x7b0a2b(_0x512898) {
                var _0x9079a8 = new Promise(function (_0x490f15, _0x657a13) {
                    _0x32890b(_0x512898, function (_0x55c1e1, _0x32fa36) {
                        if (_0x55c1e1) {
                            _0x657a13(_0x55c1e1);
                            return;
                        }
                        _0x490f15(_0x32fa36);
                    });
                });
                return _0x9079a8['catch'](_0x4a92b3), _0x9079a8;
            }
            function _0x3887ff(_0x356856) {
                var _0x42d350 = new Promise(function (_0x25cedf, _0x5365b6) {
                    _0x1ebb4e(_0x356856, function (_0x108c01, _0x5f5762) {
                        if (_0x108c01) {
                            _0x5365b6(_0x108c01);
                            return;
                        }
                        _0x25cedf(_0x5f5762);
                    });
                });
                return _0x42d350['catch'](_0x4a92b3), _0x42d350;
            }
            function _0xe6dc4d() {
                var _0x46769f = _0x4af0ba['drain'], _0x1ffab6 = new Promise(function (_0xa3b21b) {
                        _0x4af0ba['drain'] = function () {
                            _0x46769f(), _0xa3b21b();
                        };
                    });
                return _0x1ffab6;
            }
        }
        _0x29d667['exports'] = _0xcc1c4c, _0x29d667['exports']['promise'] = _0x3dc08e;
    },
    0x9431: (_0x4372f7, _0x40de9e, _0x2ff0af) => {
        'use strict';
        var _0x5a3982 = _0x2ff0af(0xcb41), _0x22d4e1 = _0x2ff0af(0xda4d), _0x5cafb3 = _0x2ff0af(0x17dce), _0x2818e5 = _0x2ff0af(0x165ae);
        _0x4372f7['exports'] = _0xe19e99, _0x4372f7['exports']['Negotiator'] = _0xe19e99;
        function _0xe19e99(_0x496be9) {
            if (!(this instanceof _0xe19e99))
                return new _0xe19e99(_0x496be9);
            this['request'] = _0x496be9;
        }
        _0xe19e99['prototype']['charset'] = function _0xe496(_0x329b88) {
            var _0x545330 = this['charsets'](_0x329b88);
            return _0x545330 && _0x545330[0x0];
        }, _0xe19e99['prototype']['charsets'] = function _0x31cb90(_0x17cc64) {
            return _0x5a3982(this['request']['headers']['accept-charset'], _0x17cc64);
        }, _0xe19e99['prototype']['encoding'] = function _0x257f4d(_0x38ab0d) {
            var _0x476b11 = this['encodings'](_0x38ab0d);
            return _0x476b11 && _0x476b11[0x0];
        }, _0xe19e99['prototype']['encodings'] = function _0xb580fa(_0x3aae7d) {
            return _0x22d4e1(this['request']['headers']['accept-encoding'], _0x3aae7d);
        }, _0xe19e99['prototype']['language'] = function _0x25e142(_0x4ec386) {
            var _0x2818a7 = this['languages'](_0x4ec386);
            return _0x2818a7 && _0x2818a7[0x0];
        }, _0xe19e99['prototype']['languages'] = function _0x3843e1(_0x4801fd) {
            return _0x5cafb3(this['request']['headers']['accept-language'], _0x4801fd);
        }, _0xe19e99['prototype']['mediaType'] = function _0x52a97e(_0x5db6a9) {
            var _0x274fd5 = this['mediaTypes'](_0x5db6a9);
            return _0x274fd5 && _0x274fd5[0x0];
        }, _0xe19e99['prototype']['mediaTypes'] = function _0x1e759e(_0x82de96) {
            return _0x2818e5(this['request']['headers']['accept'], _0x82de96);
        }, _0xe19e99['prototype']['preferredCharset'] = _0xe19e99['prototype']['charset'], _0xe19e99['prototype']['preferredCharsets'] = _0xe19e99['prototype']['charsets'], _0xe19e99['prototype']['preferredEncoding'] = _0xe19e99['prototype']['encoding'], _0xe19e99['prototype']['preferredEncodings'] = _0xe19e99['prototype']['encodings'], _0xe19e99['prototype']['preferredLanguage'] = _0xe19e99['prototype']['language'], _0xe19e99['prototype']['preferredLanguages'] = _0xe19e99['prototype']['languages'], _0xe19e99['prototype']['preferredMediaType'] = _0xe19e99['prototype']['mediaType'], _0xe19e99['prototype']['preferredMediaTypes'] = _0xe19e99['prototype']['mediaTypes'];
    },
    0xcb41: _0x2a01e9 => {
        'use strict';
        _0x2a01e9['exports'] = _0x2a17cf, _0x2a01e9['exports']['preferredCharsets'] = _0x2a17cf;
        var _0x4b17fd = /^\s*([^\s;]+)\s*(?:;(.*))?$/;
        function _0x29a25d(_0x7e3c68) {
            var _0x10a8b1 = _0x7e3c68['split'](',');
            for (var _0xfc2781 = 0x0, _0x4eae9b = 0x0; _0xfc2781 < _0x10a8b1['length']; _0xfc2781++) {
                var _0x4d7b93 = _0x43c255(_0x10a8b1[_0xfc2781]['trim'](), _0xfc2781);
                _0x4d7b93 && (_0x10a8b1[_0x4eae9b++] = _0x4d7b93);
            }
            return _0x10a8b1['length'] = _0x4eae9b, _0x10a8b1;
        }
        function _0x43c255(_0x333876, _0x3669fe) {
            var _0x28389a = _0x4b17fd['exec'](_0x333876);
            if (!_0x28389a)
                return null;
            var _0x5114d8 = _0x28389a[0x1], _0x510d77 = 0x1;
            if (_0x28389a[0x2]) {
                var _0x5868b8 = _0x28389a[0x2]['split'](';');
                for (var _0x18fd8e = 0x0; _0x18fd8e < _0x5868b8['length']; _0x18fd8e++) {
                    var _0x10feb6 = _0x5868b8[_0x18fd8e]['trim']()['split']('=');
                    if (_0x10feb6[0x0] === 'q') {
                        _0x510d77 = parseFloat(_0x10feb6[0x1]);
                        break;
                    }
                }
            }
            return {
                'charset': _0x5114d8,
                'q': _0x510d77,
                'i': _0x3669fe
            };
        }
        function _0x36092e(_0x42d2ee, _0x230e9a, _0x2099a6) {
            var _0x505f5e = {
                'o': -0x1,
                'q': 0x0,
                's': 0x0
            };
            for (var _0x4f822a = 0x0; _0x4f822a < _0x230e9a['length']; _0x4f822a++) {
                var _0x4f0bed = _0x5b2e0a(_0x42d2ee, _0x230e9a[_0x4f822a], _0x2099a6);
                _0x4f0bed && (_0x505f5e['s'] - _0x4f0bed['s'] || _0x505f5e['q'] - _0x4f0bed['q'] || _0x505f5e['o'] - _0x4f0bed['o']) < 0x0 && (_0x505f5e = _0x4f0bed);
            }
            return _0x505f5e;
        }
        function _0x5b2e0a(_0x304c88, _0x186312, _0x117971) {
            var _0x3b698a = 0x0;
            if (_0x186312['charset']['toLowerCase']() === _0x304c88['toLowerCase']())
                _0x3b698a |= 0x1;
            else {
                if (_0x186312['charset'] !== '*')
                    return null;
            }
            return {
                'i': _0x117971,
                'o': _0x186312['i'],
                'q': _0x186312['q'],
                's': _0x3b698a
            };
        }
        function _0x2a17cf(_0x4bdcb1, _0x4e0af4) {
            var _0x26a7cf = _0x29a25d(_0x4bdcb1 === undefined ? '*' : _0x4bdcb1 || '');
            if (!_0x4e0af4)
                return _0x26a7cf['filter'](_0x556a08)['sort'](_0x2ba70e)['map'](_0x245f33);
            var _0x3eb78b = _0x4e0af4['map'](function _0x5cde1d(_0x459120, _0x3d549b) {
                return _0x36092e(_0x459120, _0x26a7cf, _0x3d549b);
            });
            return _0x3eb78b['filter'](_0x556a08)['sort'](_0x2ba70e)['map'](function _0x174670(_0x622501) {
                return _0x4e0af4[_0x3eb78b['indexOf'](_0x622501)];
            });
        }
        function _0x2ba70e(_0x329def, _0x7c71aa) {
            return _0x7c71aa['q'] - _0x329def['q'] || _0x7c71aa['s'] - _0x329def['s'] || _0x329def['o'] - _0x7c71aa['o'] || _0x329def['i'] - _0x7c71aa['i'] || 0x0;
        }
        function _0x245f33(_0x4e635f) {
            return _0x4e635f['charset'];
        }
        function _0x556a08(_0x4303ff) {
            return _0x4303ff['q'] > 0x0;
        }
    },
    0xda4d: _0x4884da => {
        'use strict';
        _0x4884da['exports'] = _0xdd9640, _0x4884da['exports']['preferredEncodings'] = _0xdd9640;
        var _0x34e568 = /^\s*([^\s;]+)\s*(?:;(.*))?$/;
        function _0x35df0e(_0x47d74c) {
            var _0x2d9fd1 = _0x47d74c['split'](','), _0x48cc93 = ![], _0x376306 = 0x1;
            for (var _0x3669ce = 0x0, _0x173de1 = 0x0; _0x3669ce < _0x2d9fd1['length']; _0x3669ce++) {
                var _0x4ef794 = _0x515067(_0x2d9fd1[_0x3669ce]['trim'](), _0x3669ce);
                _0x4ef794 && (_0x2d9fd1[_0x173de1++] = _0x4ef794, _0x48cc93 = _0x48cc93 || _0x614f93('identity', _0x4ef794), _0x376306 = Math['min'](_0x376306, _0x4ef794['q'] || 0x1));
            }
            return !_0x48cc93 && (_0x2d9fd1[_0x173de1++] = {
                'encoding': 'identity',
                'q': _0x376306,
                'i': _0x3669ce
            }), _0x2d9fd1['length'] = _0x173de1, _0x2d9fd1;
        }
        function _0x515067(_0x32d7d9, _0xd9f69) {
            var _0x310de0 = _0x34e568['exec'](_0x32d7d9);
            if (!_0x310de0)
                return null;
            var _0x2778ae = _0x310de0[0x1], _0x953217 = 0x1;
            if (_0x310de0[0x2]) {
                var _0x5c4425 = _0x310de0[0x2]['split'](';');
                for (var _0x3ed5a4 = 0x0; _0x3ed5a4 < _0x5c4425['length']; _0x3ed5a4++) {
                    var _0x3d1a67 = _0x5c4425[_0x3ed5a4]['trim']()['split']('=');
                    if (_0x3d1a67[0x0] === 'q') {
                        _0x953217 = parseFloat(_0x3d1a67[0x1]);
                        break;
                    }
                }
            }
            return {
                'encoding': _0x2778ae,
                'q': _0x953217,
                'i': _0xd9f69
            };
        }
        function _0x104a09(_0x5b1d9b, _0x455e9f, _0x44d5d7) {
            var _0x203dab = {
                'o': -0x1,
                'q': 0x0,
                's': 0x0
            };
            for (var _0x29e136 = 0x0; _0x29e136 < _0x455e9f['length']; _0x29e136++) {
                var _0x522a60 = _0x614f93(_0x5b1d9b, _0x455e9f[_0x29e136], _0x44d5d7);
                _0x522a60 && (_0x203dab['s'] - _0x522a60['s'] || _0x203dab['q'] - _0x522a60['q'] || _0x203dab['o'] - _0x522a60['o']) < 0x0 && (_0x203dab = _0x522a60);
            }
            return _0x203dab;
        }
        function _0x614f93(_0xb48c25, _0x262a1c, _0x24ff41) {
            var _0x2898e0 = 0x0;
            if (_0x262a1c['encoding']['toLowerCase']() === _0xb48c25['toLowerCase']())
                _0x2898e0 |= 0x1;
            else {
                if (_0x262a1c['encoding'] !== '*')
                    return null;
            }
            return {
                'i': _0x24ff41,
                'o': _0x262a1c['i'],
                'q': _0x262a1c['q'],
                's': _0x2898e0
            };
        }
        ;
        function _0xdd9640(_0x38f86b, _0x24f603) {
            var _0x1d94f4 = _0x35df0e(_0x38f86b || '');
            if (!_0x24f603)
                return _0x1d94f4['filter'](_0x3775b0)['sort'](_0x4beb8d)['map'](_0x4e97c4);
            var _0x527628 = _0x24f603['map'](function _0x2638fe(_0x2ed1ce, _0x507ba2) {
                return _0x104a09(_0x2ed1ce, _0x1d94f4, _0x507ba2);
            });
            return _0x527628['filter'](_0x3775b0)['sort'](_0x4beb8d)['map'](function _0x5da969(_0x25c8af) {
                return _0x24f603[_0x527628['indexOf'](_0x25c8af)];
            });
        }
        function _0x4beb8d(_0x572e6b, _0x2c791f) {
            return _0x2c791f['q'] - _0x572e6b['q'] || _0x2c791f['s'] - _0x572e6b['s'] || _0x572e6b['o'] - _0x2c791f['o'] || _0x572e6b['i'] - _0x2c791f['i'] || 0x0;
        }
        function _0x4e97c4(_0x5f8953) {
            return _0x5f8953['encoding'];
        }
        function _0x3775b0(_0x2918e9) {
            return _0x2918e9['q'] > 0x0;
        }
    },
    0x17dce: _0x579b58 => {
        'use strict';
        _0x579b58['exports'] = _0x4a314b, _0x579b58['exports']['preferredLanguages'] = _0x4a314b;
        var _0x54376a = /^\s*([^\s\-;]+)(?:-([^\s;]+))?\s*(?:;(.*))?$/;
        function _0xe7528b(_0x32ec1a) {
            var _0x453557 = _0x32ec1a['split'](',');
            for (var _0x507fd7 = 0x0, _0x367fc7 = 0x0; _0x507fd7 < _0x453557['length']; _0x507fd7++) {
                var _0xb81aae = _0x443909(_0x453557[_0x507fd7]['trim'](), _0x507fd7);
                _0xb81aae && (_0x453557[_0x367fc7++] = _0xb81aae);
            }
            return _0x453557['length'] = _0x367fc7, _0x453557;
        }
        function _0x443909(_0x4fa849, _0x3f270d) {
            var _0x28417e = _0x54376a['exec'](_0x4fa849);
            if (!_0x28417e)
                return null;
            var _0x1f806a = _0x28417e[0x1], _0xe3adb8 = _0x28417e[0x2], _0x20b596 = _0x1f806a;
            if (_0xe3adb8)
                _0x20b596 += '-' + _0xe3adb8;
            var _0xa9b284 = 0x1;
            if (_0x28417e[0x3]) {
                var _0xbf26b8 = _0x28417e[0x3]['split'](';');
                for (var _0xd5f8d0 = 0x0; _0xd5f8d0 < _0xbf26b8['length']; _0xd5f8d0++) {
                    var _0x54d626 = _0xbf26b8[_0xd5f8d0]['split']('=');
                    if (_0x54d626[0x0] === 'q')
                        _0xa9b284 = parseFloat(_0x54d626[0x1]);
                }
            }
            return {
                'prefix': _0x1f806a,
                'suffix': _0xe3adb8,
                'q': _0xa9b284,
                'i': _0x3f270d,
                'full': _0x20b596
            };
        }
        function _0xf5d80a(_0x5210ac, _0x5e2fea, _0x1e6140) {
            var _0x25be46 = {
                'o': -0x1,
                'q': 0x0,
                's': 0x0
            };
            for (var _0xe4191f = 0x0; _0xe4191f < _0x5e2fea['length']; _0xe4191f++) {
                var _0x2025ec = _0x48781d(_0x5210ac, _0x5e2fea[_0xe4191f], _0x1e6140);
                _0x2025ec && (_0x25be46['s'] - _0x2025ec['s'] || _0x25be46['q'] - _0x2025ec['q'] || _0x25be46['o'] - _0x2025ec['o']) < 0x0 && (_0x25be46 = _0x2025ec);
            }
            return _0x25be46;
        }
        function _0x48781d(_0x57b330, _0x56e701, _0x2cc7c6) {
            var _0x4cf7e2 = _0x443909(_0x57b330);
            if (!_0x4cf7e2)
                return null;
            var _0x2cccc4 = 0x0;
            if (_0x56e701['full']['toLowerCase']() === _0x4cf7e2['full']['toLowerCase']())
                _0x2cccc4 |= 0x4;
            else {
                if (_0x56e701['prefix']['toLowerCase']() === _0x4cf7e2['full']['toLowerCase']())
                    _0x2cccc4 |= 0x2;
                else {
                    if (_0x56e701['full']['toLowerCase']() === _0x4cf7e2['prefix']['toLowerCase']())
                        _0x2cccc4 |= 0x1;
                    else {
                        if (_0x56e701['full'] !== '*')
                            return null;
                    }
                }
            }
            return {
                'i': _0x2cc7c6,
                'o': _0x56e701['i'],
                'q': _0x56e701['q'],
                's': _0x2cccc4
            };
        }
        ;
        function _0x4a314b(_0x2daab2, _0x51d5d8) {
            var _0x4655fd = _0xe7528b(_0x2daab2 === undefined ? '*' : _0x2daab2 || '');
            if (!_0x51d5d8)
                return _0x4655fd['filter'](_0x445047)['sort'](_0x4b5bc3)['map'](_0x4bd178);
            var _0x4bb6a5 = _0x51d5d8['map'](function _0x1c38a9(_0x46f817, _0x487f31) {
                return _0xf5d80a(_0x46f817, _0x4655fd, _0x487f31);
            });
            return _0x4bb6a5['filter'](_0x445047)['sort'](_0x4b5bc3)['map'](function _0x466dfd(_0x13dbee) {
                return _0x51d5d8[_0x4bb6a5['indexOf'](_0x13dbee)];
            });
        }
        function _0x4b5bc3(_0x1ed52e, _0x464d6b) {
            return _0x464d6b['q'] - _0x1ed52e['q'] || _0x464d6b['s'] - _0x1ed52e['s'] || _0x1ed52e['o'] - _0x464d6b['o'] || _0x1ed52e['i'] - _0x464d6b['i'] || 0x0;
        }
        function _0x4bd178(_0x1db9d1) {
            return _0x1db9d1['full'];
        }
        function _0x445047(_0x467892) {
            return _0x467892['q'] > 0x0;
        }
    },
    0x165ae: _0x1f1294 => {
        'use strict';
        _0x1f1294['exports'] = _0x3c134c, _0x1f1294['exports']['preferredMediaTypes'] = _0x3c134c;
        var _0x2b0996 = /^\s*([^\s\/;]+)\/([^;\s]+)\s*(?:;(.*))?$/;
        function _0x2d3d7a(_0x3fd16) {
            var _0x4006ec = _0xe60464(_0x3fd16);
            for (var _0xcc22e1 = 0x0, _0x5a49da = 0x0; _0xcc22e1 < _0x4006ec['length']; _0xcc22e1++) {
                var _0x258132 = _0x3ceed0(_0x4006ec[_0xcc22e1]['trim'](), _0xcc22e1);
                _0x258132 && (_0x4006ec[_0x5a49da++] = _0x258132);
            }
            return _0x4006ec['length'] = _0x5a49da, _0x4006ec;
        }
        function _0x3ceed0(_0x3a8fdc, _0xe74f8c) {
            var _0x5ba521 = _0x2b0996['exec'](_0x3a8fdc);
            if (!_0x5ba521)
                return null;
            var _0x50b9d6 = Object['create'](null), _0xb5a235 = 0x1, _0x46d1c2 = _0x5ba521[0x2], _0x1b0f16 = _0x5ba521[0x1];
            if (_0x5ba521[0x3]) {
                var _0x143514 = _0x231538(_0x5ba521[0x3])['map'](_0x256346);
                for (var _0x8bcb97 = 0x0; _0x8bcb97 < _0x143514['length']; _0x8bcb97++) {
                    var _0x5ea226 = _0x143514[_0x8bcb97], _0x1ae1b7 = _0x5ea226[0x0]['toLowerCase'](), _0x3321e7 = _0x5ea226[0x1], _0x1e2232 = _0x3321e7 && _0x3321e7[0x0] === '\x22' && _0x3321e7[_0x3321e7['length'] - 0x1] === '\x22' ? _0x3321e7['substr'](0x1, _0x3321e7['length'] - 0x2) : _0x3321e7;
                    if (_0x1ae1b7 === 'q') {
                        _0xb5a235 = parseFloat(_0x1e2232);
                        break;
                    }
                    _0x50b9d6[_0x1ae1b7] = _0x1e2232;
                }
            }
            return {
                'type': _0x1b0f16,
                'subtype': _0x46d1c2,
                'params': _0x50b9d6,
                'q': _0xb5a235,
                'i': _0xe74f8c
            };
        }
        function _0x43a503(_0x35e7a1, _0x20abd6, _0x4b121a) {
            var _0x7c7ffd = {
                'o': -0x1,
                'q': 0x0,
                's': 0x0
            };
            for (var _0x7b6ce1 = 0x0; _0x7b6ce1 < _0x20abd6['length']; _0x7b6ce1++) {
                var _0xdd7591 = _0x1856c5(_0x35e7a1, _0x20abd6[_0x7b6ce1], _0x4b121a);
                _0xdd7591 && (_0x7c7ffd['s'] - _0xdd7591['s'] || _0x7c7ffd['q'] - _0xdd7591['q'] || _0x7c7ffd['o'] - _0xdd7591['o']) < 0x0 && (_0x7c7ffd = _0xdd7591);
            }
            return _0x7c7ffd;
        }
        function _0x1856c5(_0x4dd0b5, _0x1868bd, _0x24acf2) {
            var _0x167b1d = _0x3ceed0(_0x4dd0b5), _0x5608f6 = 0x0;
            if (!_0x167b1d)
                return null;
            if (_0x1868bd['type']['toLowerCase']() == _0x167b1d['type']['toLowerCase']())
                _0x5608f6 |= 0x4;
            else {
                if (_0x1868bd['type'] != '*')
                    return null;
            }
            if (_0x1868bd['subtype']['toLowerCase']() == _0x167b1d['subtype']['toLowerCase']())
                _0x5608f6 |= 0x2;
            else {
                if (_0x1868bd['subtype'] != '*')
                    return null;
            }
            var _0x497c75 = Object['keys'](_0x1868bd['params']);
            if (_0x497c75['length'] > 0x0) {
                if (_0x497c75['every'](function (_0x411bcf) {
                        return _0x1868bd['params'][_0x411bcf] == '*' || (_0x1868bd['params'][_0x411bcf] || '')['toLowerCase']() == (_0x167b1d['params'][_0x411bcf] || '')['toLowerCase']();
                    }))
                    _0x5608f6 |= 0x1;
                else
                    return null;
            }
            return {
                'i': _0x24acf2,
                'o': _0x1868bd['i'],
                'q': _0x1868bd['q'],
                's': _0x5608f6
            };
        }
        function _0x3c134c(_0x576fbf, _0x582aaa) {
            var _0x23c4b6 = _0x2d3d7a(_0x576fbf === undefined ? '*/*' : _0x576fbf || '');
            if (!_0x582aaa)
                return _0x23c4b6['filter'](_0x5d747d)['sort'](_0x2ba446)['map'](_0x38d3eb);
            var _0x40296e = _0x582aaa['map'](function _0x5b9d12(_0x5bfc22, _0x514798) {
                return _0x43a503(_0x5bfc22, _0x23c4b6, _0x514798);
            });
            return _0x40296e['filter'](_0x5d747d)['sort'](_0x2ba446)['map'](function _0x310f53(_0x1657c9) {
                return _0x582aaa[_0x40296e['indexOf'](_0x1657c9)];
            });
        }
        function _0x2ba446(_0xcdaa44, _0x1d21b8) {
            return _0x1d21b8['q'] - _0xcdaa44['q'] || _0x1d21b8['s'] - _0xcdaa44['s'] || _0xcdaa44['o'] - _0x1d21b8['o'] || _0xcdaa44['i'] - _0x1d21b8['i'] || 0x0;
        }
        function _0x38d3eb(_0x312e1a) {
            return _0x312e1a['type'] + '/' + _0x312e1a['subtype'];
        }
        function _0x5d747d(_0x49de9a) {
            return _0x49de9a['q'] > 0x0;
        }
        function _0x396231(_0x41cb7e) {
            var _0x4f0c3d = 0x0, _0x306cb0 = 0x0;
            while ((_0x306cb0 = _0x41cb7e['indexOf']('\x22', _0x306cb0)) !== -0x1) {
                _0x4f0c3d++, _0x306cb0++;
            }
            return _0x4f0c3d;
        }
        function _0x256346(_0x30c4e1) {
            var _0x3dec0d = _0x30c4e1['indexOf']('='), _0x4c5c47, _0x3e9b4b;
            return _0x3dec0d === -0x1 ? _0x4c5c47 = _0x30c4e1 : (_0x4c5c47 = _0x30c4e1['substr'](0x0, _0x3dec0d), _0x3e9b4b = _0x30c4e1['substr'](_0x3dec0d + 0x1)), [
                _0x4c5c47,
                _0x3e9b4b
            ];
        }
        function _0xe60464(_0x121b18) {
            var _0x395046 = _0x121b18['split'](',');
            for (var _0x3b6dbc = 0x1, _0x177b10 = 0x0; _0x3b6dbc < _0x395046['length']; _0x3b6dbc++) {
                _0x396231(_0x395046[_0x177b10]) % 0x2 == 0x0 ? _0x395046[++_0x177b10] = _0x395046[_0x3b6dbc] : _0x395046[_0x177b10] += ',' + _0x395046[_0x3b6dbc];
            }
            return _0x395046['length'] = _0x177b10 + 0x1, _0x395046;
        }
        function _0x231538(_0x42b0d5) {
            var _0x2b0183 = _0x42b0d5['split'](';');
            for (var _0x2bee18 = 0x1, _0x152a1e = 0x0; _0x2bee18 < _0x2b0183['length']; _0x2bee18++) {
                _0x396231(_0x2b0183[_0x152a1e]) % 0x2 == 0x0 ? _0x2b0183[++_0x152a1e] = _0x2b0183[_0x2bee18] : _0x2b0183[_0x152a1e] += ';' + _0x2b0183[_0x2bee18];
            }
            _0x2b0183['length'] = _0x152a1e + 0x1;
            for (var _0x2bee18 = 0x0; _0x2bee18 < _0x2b0183['length']; _0x2bee18++) {
                _0x2b0183[_0x2bee18] = _0x2b0183[_0x2bee18]['trim']();
            }
            return _0x2b0183;
        }
    },
    0xd41b: (_0x2bac6b, _0x2ccfa8, _0x1708c7) => {
        var _0x36be76 = _0x1708c7(0xdf3b), _0x16d39c = _0x1708c7(0x11569), _0x53c6e3 = _0x1708c7(0x5615), _0x158648 = !![] ? require : 0x0, _0xbfafd1 = process['config'] && process['config']['variables'] || {}, _0x154e8e = !!process['env']['PREBUILDS_ONLY'], _0x4e278b = process['versions']['modules'], _0x371b07 = _0x545875() ? 'electron' : _0x120041() ? 'node-webkit' : 'node', _0x5a9c4f = process['env']['npm_config_arch'] || _0x53c6e3['arch'](), _0x311855 = process['env']['npm_config_platform'] || _0x53c6e3['platform'](), _0x4f658f = process['env']['LIBC'] || (_0x10294f(_0x311855) ? 'musl' : 'glibc'), _0x494e7f = process['env']['ARM_VERSION'] || (_0x5a9c4f === 'arm64' ? '8' : _0xbfafd1['arm_version']) || '', _0x29fe9e = (process['versions']['uv'] || '')['split']('.')[0x0];
        _0x2bac6b['exports'] = _0x1f0e81;
        function _0x1f0e81(_0x47d7e8) {
            return _0x158648(_0x1f0e81['path'](_0x47d7e8));
        }
        _0x1f0e81['path'] = function (_0x369396) {
            _0x369396 = _0x16d39c['resolve'](_0x369396 || '.');
            try {
                var _0x2300b3 = _0x158648(_0x16d39c['join'](_0x369396, 'package.json'))['name']['toUpperCase']()['replace'](/-/g, '_');
                if (process['env'][_0x2300b3 + '_PREBUILD'])
                    _0x369396 = process['env'][_0x2300b3 + '_PREBUILD'];
            } catch (_0x463b7f) {
            }
            if (!_0x154e8e) {
                var _0x55c40b = _0x5ada72(_0x16d39c['join'](_0x369396, 'build/Release'), _0x580f4c);
                if (_0x55c40b)
                    return _0x55c40b;
                var _0x2dafb4 = _0x5ada72(_0x16d39c['join'](_0x369396, 'build/Debug'), _0x580f4c);
                if (_0x2dafb4)
                    return _0x2dafb4;
            }
            var _0x347943 = _0x4f03d2(_0x369396);
            if (_0x347943)
                return _0x347943;
            var _0x296574 = _0x4f03d2(_0x16d39c['dirname'](process['execPath']));
            if (_0x296574)
                return _0x296574;
            var _0x3343d0 = [
                'platform=' + _0x311855,
                'arch=' + _0x5a9c4f,
                'runtime=' + _0x371b07,
                'abi=' + _0x4e278b,
                'uv=' + _0x29fe9e,
                _0x494e7f ? 'armv=' + _0x494e7f : '',
                'libc=' + _0x4f658f,
                'node=' + process['versions']['node'],
                process['versions']['electron'] ? 'electron=' + process['versions']['electron'] : '',
                !![] ? 'webpack=true' : 0x0
            ]['filter'](Boolean)['join']('\x20');
            throw new Error('No\x20native\x20build\x20was\x20found\x20for\x20' + _0x3343d0 + '\x0a\x20\x20\x20\x20loaded\x20from:\x20' + _0x369396 + '\x0a');
            function _0x4f03d2(_0xccc8d5) {
                var _0x4e7654 = _0x75e2f8(_0x16d39c['join'](_0xccc8d5, 'prebuilds'))['map'](_0x5402f7), _0x2872df = _0x4e7654['filter'](_0x2115a0(_0x311855, _0x5a9c4f))['sort'](_0x373c23)[0x0];
                if (!_0x2872df)
                    return;
                var _0x44c9a4 = _0x16d39c['join'](_0xccc8d5, 'prebuilds', _0x2872df['name']), _0x3a170c = _0x75e2f8(_0x44c9a4)['map'](_0x48b8f7), _0x291dcb = _0x3a170c['filter'](_0xd2d3b5(_0x371b07, _0x4e278b)), _0x579077 = _0x291dcb['sort'](_0x359fc5(_0x371b07))[0x0];
                if (_0x579077)
                    return _0x16d39c['join'](_0x44c9a4, _0x579077['file']);
            }
        };
        function _0x75e2f8(_0x4e7c8a) {
            try {
                return _0x36be76['readdirSync'](_0x4e7c8a);
            } catch (_0x5f155e) {
                return [];
            }
        }
        function _0x5ada72(_0x5d8357, _0x56c639) {
            var _0x360944 = _0x75e2f8(_0x5d8357)['filter'](_0x56c639);
            return _0x360944[0x0] && _0x16d39c['join'](_0x5d8357, _0x360944[0x0]);
        }
        function _0x580f4c(_0x26b1e8) {
            return /\.node$/['test'](_0x26b1e8);
        }
        function _0x5402f7(_0x248a32) {
            var _0x3e984e = _0x248a32['split']('-');
            if (_0x3e984e['length'] !== 0x2)
                return;
            var _0x20baf4 = _0x3e984e[0x0], _0x5d3aa6 = _0x3e984e[0x1]['split']('+');
            if (!_0x20baf4)
                return;
            if (!_0x5d3aa6['length'])
                return;
            if (!_0x5d3aa6['every'](Boolean))
                return;
            return {
                'name': _0x248a32,
                'platform': _0x20baf4,
                'architectures': _0x5d3aa6
            };
        }
        function _0x2115a0(_0x516768, _0x4f3a9c) {
            return function (_0x105f8e) {
                if (_0x105f8e == null)
                    return ![];
                if (_0x105f8e['platform'] !== _0x516768)
                    return ![];
                return _0x105f8e['architectures']['includes'](_0x4f3a9c);
            };
        }
        function _0x373c23(_0x18950b, _0x43b090) {
            return _0x18950b['architectures']['length'] - _0x43b090['architectures']['length'];
        }
        function _0x48b8f7(_0x3d34a3) {
            var _0x6ca88d = _0x3d34a3['split']('.'), _0x9fb7f7 = _0x6ca88d['pop'](), _0x4ff958 = {
                    'file': _0x3d34a3,
                    'specificity': 0x0
                };
            if (_0x9fb7f7 !== 'node')
                return;
            for (var _0x5ce896 = 0x0; _0x5ce896 < _0x6ca88d['length']; _0x5ce896++) {
                var _0x295b0f = _0x6ca88d[_0x5ce896];
                if (_0x295b0f === 'node' || _0x295b0f === 'electron' || _0x295b0f === 'node-webkit')
                    _0x4ff958['runtime'] = _0x295b0f;
                else {
                    if (_0x295b0f === 'napi')
                        _0x4ff958['napi'] = !![];
                    else {
                        if (_0x295b0f['slice'](0x0, 0x3) === 'abi')
                            _0x4ff958['abi'] = _0x295b0f['slice'](0x3);
                        else {
                            if (_0x295b0f['slice'](0x0, 0x2) === 'uv')
                                _0x4ff958['uv'] = _0x295b0f['slice'](0x2);
                            else {
                                if (_0x295b0f['slice'](0x0, 0x4) === 'armv')
                                    _0x4ff958['armv'] = _0x295b0f['slice'](0x4);
                                else {
                                    if (_0x295b0f === 'glibc' || _0x295b0f === 'musl')
                                        _0x4ff958['libc'] = _0x295b0f;
                                    else
                                        continue;
                                }
                            }
                        }
                    }
                }
                _0x4ff958['specificity']++;
            }
            return _0x4ff958;
        }
        function _0xd2d3b5(_0x82e746, _0x82d7d0) {
            return function (_0x1e4728) {
                if (_0x1e4728 == null)
                    return ![];
                if (_0x1e4728['runtime'] !== _0x82e746 && !_0x281f08(_0x1e4728))
                    return ![];
                if (_0x1e4728['abi'] !== _0x82d7d0 && !_0x1e4728['napi'])
                    return ![];
                if (_0x1e4728['uv'] && _0x1e4728['uv'] !== _0x29fe9e)
                    return ![];
                if (_0x1e4728['armv'] && _0x1e4728['armv'] !== _0x494e7f)
                    return ![];
                if (_0x1e4728['libc'] && _0x1e4728['libc'] !== _0x4f658f)
                    return ![];
                return !![];
            };
        }
        function _0x281f08(_0x3b3bd4) {
            return _0x3b3bd4['runtime'] === 'node' && _0x3b3bd4['napi'];
        }
        function _0x359fc5(_0x4b0743) {
            return function (_0x322665, _0x14ae64) {
                if (_0x322665['runtime'] !== _0x14ae64['runtime'])
                    return _0x322665['runtime'] === _0x4b0743 ? -0x1 : 0x1;
                else {
                    if (_0x322665['abi'] !== _0x14ae64['abi'])
                        return _0x322665['abi'] ? -0x1 : 0x1;
                    else
                        return _0x322665['specificity'] !== _0x14ae64['specificity'] ? _0x322665['specificity'] > _0x14ae64['specificity'] ? -0x1 : 0x1 : 0x0;
                }
            };
        }
        function _0x120041() {
            return !!(process['versions'] && process['versions']['nw']);
        }
        function _0x545875() {
            if (process['versions'] && process['versions']['electron'])
                return !![];
            if (process['env']['ELECTRON_RUN_AS_NODE'])
                return !![];
            return typeof window !== 'undefined' && window['process'] && window['process']['type'] === 'renderer';
        }
        function _0x10294f(_0x5caf51) {
            return _0x5caf51 === 'linux' && _0x36be76['existsSync']('/etc/alpine-release');
        }
        _0x1f0e81['parseTags'] = _0x48b8f7, _0x1f0e81['matchTags'] = _0xd2d3b5, _0x1f0e81['compareTags'] = _0x359fc5, _0x1f0e81['parseTuple'] = _0x5402f7, _0x1f0e81['matchTuple'] = _0x2115a0, _0x1f0e81['compareTuples'] = _0x373c23;
    },
    0x58ef: _0x5daf0f => {
        'use strict';
        /*
object-assign
(c) Sindre Sorhus
@license MIT
*/
        var _0x2ce2b4 = Object['getOwnPropertySymbols'], _0x2ab4fc = Object['prototype']['hasOwnProperty'], _0x5da1c7 = Object['prototype']['propertyIsEnumerable'];
        function _0x3f6503(_0x2d7056) {
            if (_0x2d7056 === null || _0x2d7056 === undefined)
                throw new TypeError('Object.assign\x20cannot\x20be\x20called\x20with\x20null\x20or\x20undefined');
            return Object(_0x2d7056);
        }
        function _0x185d8e() {
            try {
                if (!Object['assign'])
                    return ![];
                var _0x5518a5 = new String('abc');
                _0x5518a5[0x5] = 'de';
                if (Object['getOwnPropertyNames'](_0x5518a5)[0x0] === '5')
                    return ![];
                var _0x317722 = {};
                for (var _0x1a25bb = 0x0; _0x1a25bb < 0xa; _0x1a25bb++) {
                    _0x317722['_' + String['fromCharCode'](_0x1a25bb)] = _0x1a25bb;
                }
                var _0x13ea34 = Object['getOwnPropertyNames'](_0x317722)['map'](function (_0x1b6b06) {
                    return _0x317722[_0x1b6b06];
                });
                if (_0x13ea34['join']('') !== '0123456789')
                    return ![];
                var _0x26d379 = {};
                'abcdefghijklmnopqrst'['split']('')['forEach'](function (_0xb4ba9e) {
                    _0x26d379[_0xb4ba9e] = _0xb4ba9e;
                });
                if (Object['keys'](Object['assign']({}, _0x26d379))['join']('') !== 'abcdefghijklmnopqrst')
                    return ![];
                return !![];
            } catch (_0x333857) {
                return ![];
            }
        }
        _0x5daf0f['exports'] = _0x185d8e() ? Object['assign'] : function (_0x51527b, _0x5954d2) {
            var _0x20cb17, _0x15f17e = _0x3f6503(_0x51527b), _0x3dd6f4;
            for (var _0x526886 = 0x1; _0x526886 < arguments['length']; _0x526886++) {
                _0x20cb17 = Object(arguments[_0x526886]);
                for (var _0x3d0c4c in _0x20cb17) {
                    _0x2ab4fc['call'](_0x20cb17, _0x3d0c4c) && (_0x15f17e[_0x3d0c4c] = _0x20cb17[_0x3d0c4c]);
                }
                if (_0x2ce2b4) {
                    _0x3dd6f4 = _0x2ce2b4(_0x20cb17);
                    for (var _0x325000 = 0x0; _0x325000 < _0x3dd6f4['length']; _0x325000++) {
                        _0x5da1c7['call'](_0x20cb17, _0x3dd6f4[_0x325000]) && (_0x15f17e[_0x3dd6f4[_0x325000]] = _0x20cb17[_0x3dd6f4[_0x325000]]);
                    }
                }
            }
            return _0x15f17e;
        };
    },
    0xa6fa: _0x9529d8 => {
        let _0x2f8da9;
        _0x9529d8['exports'] = typeof queueMicrotask === 'function' ? queueMicrotask['bind'](typeof window !== 'undefined' ? window : global) : _0x2e24b0 => (_0x2f8da9 || (_0x2f8da9 = Promise['resolve']()))['then'](_0x2e24b0)['catch'](_0x9a923e => setTimeout(() => {
            throw _0x9a923e;
        }, 0x0));
    },
    0x13377: _0x5ed4d2 => {
        'use strict';
        function _0x28f311(_0x5b4abf) {
            var _0x51cf40 = new _0x5b4abf(), _0x2b2d67 = _0x51cf40;
            function _0x22ecd1() {
                var _0x115c70 = _0x51cf40;
                return _0x115c70['next'] ? _0x51cf40 = _0x115c70['next'] : (_0x51cf40 = new _0x5b4abf(), _0x2b2d67 = _0x51cf40), _0x115c70['next'] = null, _0x115c70;
            }
            function _0x3537d9(_0x5568c6) {
                _0x2b2d67['next'] = _0x5568c6, _0x2b2d67 = _0x5568c6;
            }
            return {
                'get': _0x22ecd1,
                'release': _0x3537d9
            };
        }
        _0x5ed4d2['exports'] = _0x28f311;
    },
    0xb509: (_0x4553c7, _0xab95a9, _0x3b1c63) => {
        'use strict';
        Object['defineProperty'](_0xab95a9, '__esModule', { 'value': !![] }), _0xab95a9['Adapter'] = void 0x0;
        const _0xe23f9d = _0x3b1c63(0x141b9);
        class _0x1210d6 extends _0xe23f9d['EventEmitter'] {
            constructor(_0x294654) {
                super(), this['nsp'] = _0x294654, this['rooms'] = new Map(), this['sids'] = new Map(), this['encoder'] = _0x294654['server']['encoder'];
            }
            ['init']() {
            }
            ['close']() {
            }
            ['serverCount']() {
                return Promise['resolve'](0x1);
            }
            ['addAll'](_0x32e6b5, _0x16b4bf) {
                !this['sids']['has'](_0x32e6b5) && this['sids']['set'](_0x32e6b5, new Set());
                for (const _0x39cabc of _0x16b4bf) {
                    this['sids']['get'](_0x32e6b5)['add'](_0x39cabc), !this['rooms']['has'](_0x39cabc) && (this['rooms']['set'](_0x39cabc, new Set()), this['emit']('create-room', _0x39cabc)), !this['rooms']['get'](_0x39cabc)['has'](_0x32e6b5) && (this['rooms']['get'](_0x39cabc)['add'](_0x32e6b5), this['emit']('join-room', _0x39cabc, _0x32e6b5));
                }
            }
            ['del'](_0x4e002a, _0x2dea83) {
                this['sids']['has'](_0x4e002a) && this['sids']['get'](_0x4e002a)['delete'](_0x2dea83), this['_del'](_0x2dea83, _0x4e002a);
            }
            ['_del'](_0x428e54, _0x1fd2ce) {
                const _0x333054 = this['rooms']['get'](_0x428e54);
                if (_0x333054 != null) {
                    const _0x5cacf6 = _0x333054['delete'](_0x1fd2ce);
                    _0x5cacf6 && this['emit']('leave-room', _0x428e54, _0x1fd2ce), _0x333054['size'] === 0x0 && this['rooms']['delete'](_0x428e54) && this['emit']('delete-room', _0x428e54);
                }
            }
            ['delAll'](_0xdbf0cc) {
                if (!this['sids']['has'](_0xdbf0cc))
                    return;
                for (const _0x23a3b4 of this['sids']['get'](_0xdbf0cc)) {
                    this['_del'](_0x23a3b4, _0xdbf0cc);
                }
                this['sids']['delete'](_0xdbf0cc);
            }
            ['broadcast'](_0x1a5b68, _0x461100) {
                const _0x13dc49 = _0x461100['flags'] || {}, _0x5a23c7 = {
                        'preEncoded': !![],
                        'volatile': _0x13dc49['volatile'],
                        'compress': _0x13dc49['compress']
                    };
                _0x1a5b68['nsp'] = this['nsp']['name'];
                const _0xdb00b5 = this['encoder']['encode'](_0x1a5b68);
                this['apply'](_0x461100, _0x1595b2 => {
                    typeof _0x1595b2['notifyOutgoingListeners'] === 'function' && _0x1595b2['notifyOutgoingListeners'](_0x1a5b68), _0x1595b2['client']['writeToEngine'](_0xdb00b5, _0x5a23c7);
                });
            }
            ['broadcastWithAck'](_0x4f5e70, _0x406a61, _0x4b63df, _0x1ee414) {
                const _0x531117 = _0x406a61['flags'] || {}, _0x156dd8 = {
                        'preEncoded': !![],
                        'volatile': _0x531117['volatile'],
                        'compress': _0x531117['compress']
                    };
                _0x4f5e70['nsp'] = this['nsp']['name'], _0x4f5e70['id'] = this['nsp']['_ids']++;
                const _0x287e8b = this['encoder']['encode'](_0x4f5e70);
                let _0x86ef09 = 0x0;
                this['apply'](_0x406a61, _0x568905 => {
                    _0x86ef09++, _0x568905['acks']['set'](_0x4f5e70['id'], _0x1ee414), typeof _0x568905['notifyOutgoingListeners'] === 'function' && _0x568905['notifyOutgoingListeners'](_0x4f5e70), _0x568905['client']['writeToEngine'](_0x287e8b, _0x156dd8);
                }), _0x4b63df(_0x86ef09);
            }
            ['sockets'](_0x5e6b79) {
                const _0xf01659 = new Set();
                return this['apply']({ 'rooms': _0x5e6b79 }, _0x995a9d => {
                    _0xf01659['add'](_0x995a9d['id']);
                }), Promise['resolve'](_0xf01659);
            }
            ['socketRooms'](_0x3f6658) {
                return this['sids']['get'](_0x3f6658);
            }
            ['fetchSockets'](_0x11fb4d) {
                const _0x103327 = [];
                return this['apply'](_0x11fb4d, _0x4502ad => {
                    _0x103327['push'](_0x4502ad);
                }), Promise['resolve'](_0x103327);
            }
            ['addSockets'](_0x164767, _0x460f9e) {
                this['apply'](_0x164767, _0x5cef51 => {
                    _0x5cef51['join'](_0x460f9e);
                });
            }
            ['delSockets'](_0x56f3e0, _0x35fd22) {
                this['apply'](_0x56f3e0, _0x4dffe7 => {
                    _0x35fd22['forEach'](_0x448272 => _0x4dffe7['leave'](_0x448272));
                });
            }
            ['disconnectSockets'](_0x14531d, _0x4ce092) {
                this['apply'](_0x14531d, _0x549af0 => {
                    _0x549af0['disconnect'](_0x4ce092);
                });
            }
            ['apply'](_0x3f2aff, _0x3732bd) {
                const _0x54589f = _0x3f2aff['rooms'], _0x5d43d5 = this['computeExceptSids'](_0x3f2aff['except']);
                if (_0x54589f['size']) {
                    const _0x4e3ab4 = new Set();
                    for (const _0x1eb3a4 of _0x54589f) {
                        if (!this['rooms']['has'](_0x1eb3a4))
                            continue;
                        for (const _0x27a41a of this['rooms']['get'](_0x1eb3a4)) {
                            if (_0x4e3ab4['has'](_0x27a41a) || _0x5d43d5['has'](_0x27a41a))
                                continue;
                            const _0x24977b = this['nsp']['sockets']['get'](_0x27a41a);
                            _0x24977b && (_0x3732bd(_0x24977b), _0x4e3ab4['add'](_0x27a41a));
                        }
                    }
                } else
                    for (const [_0x5f2b84] of this['sids']) {
                        if (_0x5d43d5['has'](_0x5f2b84))
                            continue;
                        const _0x23da09 = this['nsp']['sockets']['get'](_0x5f2b84);
                        if (_0x23da09)
                            _0x3732bd(_0x23da09);
                    }
            }
            ['computeExceptSids'](_0xd4bbb5) {
                const _0x418979 = new Set();
                if (_0xd4bbb5 && _0xd4bbb5['size'] > 0x0)
                    for (const _0x5c7a16 of _0xd4bbb5) {
                        this['rooms']['has'](_0x5c7a16) && this['rooms']['get'](_0x5c7a16)['forEach'](_0x1a0b79 => _0x418979['add'](_0x1a0b79));
                    }
                return _0x418979;
            }
            ['serverSideEmit'](_0x1e77f8) {
                console['warn']('this\x20adapter\x20does\x20not\x20support\x20the\x20serverSideEmit()\x20functionality');
            }
        }
        _0xab95a9['Adapter'] = _0x1210d6;
    },
    0x156f9: _0x207330 => {
        'use strict';
        function _0x68a995(_0x38ff45) {
            const _0xfb94b8 = _0x38ff45['length'];
            let _0x719091 = 0x0;
            while (_0x719091 < _0xfb94b8) {
                if ((_0x38ff45[_0x719091] & 0x80) === 0x0)
                    _0x719091++;
                else {
                    if ((_0x38ff45[_0x719091] & 0xe0) === 0xc0) {
                        if (_0x719091 + 0x1 === _0xfb94b8 || (_0x38ff45[_0x719091 + 0x1] & 0xc0) !== 0x80 || (_0x38ff45[_0x719091] & 0xfe) === 0xc0)
                            return ![];
                        _0x719091 += 0x2;
                    } else {
                        if ((_0x38ff45[_0x719091] & 0xf0) === 0xe0) {
                            if (_0x719091 + 0x2 >= _0xfb94b8 || (_0x38ff45[_0x719091 + 0x1] & 0xc0) !== 0x80 || (_0x38ff45[_0x719091 + 0x2] & 0xc0) !== 0x80 || _0x38ff45[_0x719091] === 0xe0 && (_0x38ff45[_0x719091 + 0x1] & 0xe0) === 0x80 || _0x38ff45[_0x719091] === 0xed && (_0x38ff45[_0x719091 + 0x1] & 0xe0) === 0xa0)
                                return ![];
                            _0x719091 += 0x3;
                        } else {
                            if ((_0x38ff45[_0x719091] & 0xf8) === 0xf0) {
                                if (_0x719091 + 0x3 >= _0xfb94b8 || (_0x38ff45[_0x719091 + 0x1] & 0xc0) !== 0x80 || (_0x38ff45[_0x719091 + 0x2] & 0xc0) !== 0x80 || (_0x38ff45[_0x719091 + 0x3] & 0xc0) !== 0x80 || _0x38ff45[_0x719091] === 0xf0 && (_0x38ff45[_0x719091 + 0x1] & 0xf0) === 0x80 || _0x38ff45[_0x719091] === 0xf4 && _0x38ff45[_0x719091 + 0x1] > 0x8f || _0x38ff45[_0x719091] > 0xf4)
                                    return ![];
                                _0x719091 += 0x4;
                            } else
                                return ![];
                        }
                    }
                }
            }
            return !![];
        }
        _0x207330['exports'] = _0x68a995;
    },
    0xf6df: (_0x22b07b, _0xf5a0ef, _0x89cd93) => {
        'use strict';
        try {
            _0x22b07b['exports'] = _0x89cd93(0xd41b)(__dirname);
        } catch (_0x5c7109) {
            _0x22b07b['exports'] = _0x89cd93(0x156f9);
        }
    },
    0x56ef: _0x34878c => {
        'use strict';
        _0x34878c['exports'] = _0x15dd9d, _0x34878c['exports']['append'] = _0x5f218b;
        var _0x15653d = /^[!#$%&'*+\-.^_`|~0-9A-Za-z]+$/;
        function _0x5f218b(_0x393ed6, _0x838741) {
            if (typeof _0x393ed6 !== 'string')
                throw new TypeError('header\x20argument\x20is\x20required');
            if (!_0x838741)
                throw new TypeError('field\x20argument\x20is\x20required');
            var _0x57ef65 = !Array['isArray'](_0x838741) ? _0x5dcd86(String(_0x838741)) : _0x838741;
            for (var _0x1dedc5 = 0x0; _0x1dedc5 < _0x57ef65['length']; _0x1dedc5++) {
                if (!_0x15653d['test'](_0x57ef65[_0x1dedc5]))
                    throw new TypeError('field\x20argument\x20contains\x20an\x20invalid\x20header\x20name');
            }
            if (_0x393ed6 === '*')
                return _0x393ed6;
            var _0x188a66 = _0x393ed6, _0x35997d = _0x5dcd86(_0x393ed6['toLowerCase']());
            if (_0x57ef65['indexOf']('*') !== -0x1 || _0x35997d['indexOf']('*') !== -0x1)
                return '*';
            for (var _0x30425e = 0x0; _0x30425e < _0x57ef65['length']; _0x30425e++) {
                var _0x31949c = _0x57ef65[_0x30425e]['toLowerCase']();
                _0x35997d['indexOf'](_0x31949c) === -0x1 && (_0x35997d['push'](_0x31949c), _0x188a66 = _0x188a66 ? _0x188a66 + ',\x20' + _0x57ef65[_0x30425e] : _0x57ef65[_0x30425e]);
            }
            return _0x188a66;
        }
        function _0x5dcd86(_0x4acf90) {
            var _0x37e21c = 0x0, _0x554123 = [], _0x35207b = 0x0;
            for (var _0x14b339 = 0x0, _0x1f192d = _0x4acf90['length']; _0x14b339 < _0x1f192d; _0x14b339++) {
                switch (_0x4acf90['charCodeAt'](_0x14b339)) {
                case 0x20:
                    _0x35207b === _0x37e21c && (_0x35207b = _0x37e21c = _0x14b339 + 0x1);
                    break;
                case 0x2c:
                    _0x554123['push'](_0x4acf90['substring'](_0x35207b, _0x37e21c)), _0x35207b = _0x37e21c = _0x14b339 + 0x1;
                    break;
                default:
                    _0x37e21c = _0x14b339 + 0x1;
                    break;
                }
            }
            return _0x554123['push'](_0x4acf90['substring'](_0x35207b, _0x37e21c)), _0x554123;
        }
        function _0x15dd9d(_0x3d628b, _0x182f17) {
            if (!_0x3d628b || !_0x3d628b['getHeader'] || !_0x3d628b['setHeader'])
                throw new TypeError('res\x20argument\x20is\x20required');
            var _0x3dc252 = _0x3d628b['getHeader']('Vary') || '', _0x410cf7 = Array['isArray'](_0x3dc252) ? _0x3dc252['join'](',\x20') : String(_0x3dc252);
            (_0x3dc252 = _0x5f218b(_0x410cf7, _0x182f17)) && _0x3d628b['setHeader']('Vary', _0x3dc252);
        }
    },
    0xe61c: (_0x5e10a8, _0x453716, _0x3c0108) => {
        'use strict';
        const _0x5408b5 = _0x3c0108(0x1088f);
        _0x5408b5['createWebSocketStream'] = _0x3c0108(0x166ed), _0x5408b5['Server'] = _0x3c0108(0xd5e0), _0x5408b5['Receiver'] = _0x3c0108(0xf0a3), _0x5408b5['Sender'] = _0x3c0108(0x11ed9), _0x5408b5['WebSocket'] = _0x5408b5, _0x5408b5['WebSocketServer'] = _0x5408b5['Server'], _0x5e10a8['exports'] = _0x5408b5;
    },
    0x1206a: (_0x5af2a4, _0x5d2507, _0x44a21a) => {
        'use strict';
        const {EMPTY_BUFFER: _0x5bfc5e} = _0x44a21a(0x9d6d);
        function _0x1995aa(_0x27269f, _0x125c77) {
            if (_0x27269f['length'] === 0x0)
                return _0x5bfc5e;
            if (_0x27269f['length'] === 0x1)
                return _0x27269f[0x0];
            const _0x4ebfc2 = Buffer['allocUnsafe'](_0x125c77);
            let _0x3d02c2 = 0x0;
            for (let _0x81663a = 0x0; _0x81663a < _0x27269f['length']; _0x81663a++) {
                const _0x25e924 = _0x27269f[_0x81663a];
                _0x4ebfc2['set'](_0x25e924, _0x3d02c2), _0x3d02c2 += _0x25e924['length'];
            }
            if (_0x3d02c2 < _0x125c77)
                return _0x4ebfc2['slice'](0x0, _0x3d02c2);
            return _0x4ebfc2;
        }
        function _0x1da5a9(_0x3bd38b, _0x1366ef, _0x51dfa1, _0x5a3ed7, _0x1102cb) {
            for (let _0x5aa413 = 0x0; _0x5aa413 < _0x1102cb; _0x5aa413++) {
                _0x51dfa1[_0x5a3ed7 + _0x5aa413] = _0x3bd38b[_0x5aa413] ^ _0x1366ef[_0x5aa413 & 0x3];
            }
        }
        function _0x32dcf5(_0x24cc3d, _0x325d47) {
            for (let _0x4790cf = 0x0; _0x4790cf < _0x24cc3d['length']; _0x4790cf++) {
                _0x24cc3d[_0x4790cf] ^= _0x325d47[_0x4790cf & 0x3];
            }
        }
        function _0x116c26(_0x12e44f) {
            if (_0x12e44f['byteLength'] === _0x12e44f['buffer']['byteLength'])
                return _0x12e44f['buffer'];
            return _0x12e44f['buffer']['slice'](_0x12e44f['byteOffset'], _0x12e44f['byteOffset'] + _0x12e44f['byteLength']);
        }
        function _0x2922f4(_0x40724b) {
            _0x2922f4['readOnly'] = !![];
            if (Buffer['isBuffer'](_0x40724b))
                return _0x40724b;
            let _0x483cad;
            if (_0x40724b instanceof ArrayBuffer)
                _0x483cad = Buffer['from'](_0x40724b);
            else
                ArrayBuffer['isView'](_0x40724b) ? _0x483cad = Buffer['from'](_0x40724b['buffer'], _0x40724b['byteOffset'], _0x40724b['byteLength']) : (_0x483cad = Buffer['from'](_0x40724b), _0x2922f4['readOnly'] = ![]);
            return _0x483cad;
        }
        try {
            const _0x2f00ff = _0x44a21a(0x4033);
            _0x5af2a4['exports'] = {
                'concat': _0x1995aa,
                'mask'(_0x48f1a7, _0x7a9fcd, _0x190a97, _0x48a896, _0x5ca054) {
                    if (_0x5ca054 < 0x30)
                        _0x1da5a9(_0x48f1a7, _0x7a9fcd, _0x190a97, _0x48a896, _0x5ca054);
                    else
                        _0x2f00ff['mask'](_0x48f1a7, _0x7a9fcd, _0x190a97, _0x48a896, _0x5ca054);
                },
                'toArrayBuffer': _0x116c26,
                'toBuffer': _0x2922f4,
                'unmask'(_0x1f1d51, _0x455d7d) {
                    if (_0x1f1d51['length'] < 0x20)
                        _0x32dcf5(_0x1f1d51, _0x455d7d);
                    else
                        _0x2f00ff['unmask'](_0x1f1d51, _0x455d7d);
                }
            };
        } catch (_0x55ddf4) {
            _0x5af2a4['exports'] = {
                'concat': _0x1995aa,
                'mask': _0x1da5a9,
                'toArrayBuffer': _0x116c26,
                'toBuffer': _0x2922f4,
                'unmask': _0x32dcf5
            };
        }
    },
    0x9d6d: _0x25927d => {
        'use strict';
        _0x25927d['exports'] = {
            'BINARY_TYPES': [
                'nodebuffer',
                'arraybuffer',
                'fragments'
            ],
            'EMPTY_BUFFER': Buffer['alloc'](0x0),
            'GUID': '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
            'kForOnEventAttribute': Symbol('kIsForOnEventAttribute'),
            'kListener': Symbol('kListener'),
            'kStatusCode': Symbol('status-code'),
            'kWebSocket': Symbol('websocket'),
            'NOOP': () => {
            }
        };
    },
    0x9695: (_0x2b9703, _0xf7b568, _0x16783e) => {
        'use strict';
        const {
                kForOnEventAttribute: _0x4664d9,
                kListener: _0x346c2b
            } = _0x16783e(0x9d6d), _0x10ac13 = Symbol('kCode'), _0x3a5454 = Symbol('kData'), _0x15b2c9 = Symbol('kError'), _0x24a2c0 = Symbol('kMessage'), _0x16a8a4 = Symbol('kReason'), _0x3af169 = Symbol('kTarget'), _0x4979a5 = Symbol('kType'), _0x32f55d = Symbol('kWasClean');
        class _0x4e51b5 {
            constructor(_0x5c3910) {
                this[_0x3af169] = null, this[_0x4979a5] = _0x5c3910;
            }
            get ['target']() {
                return this[_0x3af169];
            }
            get ['type']() {
                return this[_0x4979a5];
            }
        }
        Object['defineProperty'](_0x4e51b5['prototype'], 'target', { 'enumerable': !![] }), Object['defineProperty'](_0x4e51b5['prototype'], 'type', { 'enumerable': !![] });
        class _0x48372c extends _0x4e51b5 {
            constructor(_0x13dd86, _0x4d3d54 = {}) {
                super(_0x13dd86), this[_0x10ac13] = _0x4d3d54['code'] === undefined ? 0x0 : _0x4d3d54['code'], this[_0x16a8a4] = _0x4d3d54['reason'] === undefined ? '' : _0x4d3d54['reason'], this[_0x32f55d] = _0x4d3d54['wasClean'] === undefined ? ![] : _0x4d3d54['wasClean'];
            }
            get ['code']() {
                return this[_0x10ac13];
            }
            get ['reason']() {
                return this[_0x16a8a4];
            }
            get ['wasClean']() {
                return this[_0x32f55d];
            }
        }
        Object['defineProperty'](_0x48372c['prototype'], 'code', { 'enumerable': !![] }), Object['defineProperty'](_0x48372c['prototype'], 'reason', { 'enumerable': !![] }), Object['defineProperty'](_0x48372c['prototype'], 'wasClean', { 'enumerable': !![] });
        class _0x1166f7 extends _0x4e51b5 {
            constructor(_0x57604f, _0x3d547a = {}) {
                super(_0x57604f), this[_0x15b2c9] = _0x3d547a['error'] === undefined ? null : _0x3d547a['error'], this[_0x24a2c0] = _0x3d547a['message'] === undefined ? '' : _0x3d547a['message'];
            }
            get ['error']() {
                return this[_0x15b2c9];
            }
            get ['message']() {
                return this[_0x24a2c0];
            }
        }
        Object['defineProperty'](_0x1166f7['prototype'], 'error', { 'enumerable': !![] }), Object['defineProperty'](_0x1166f7['prototype'], 'message', { 'enumerable': !![] });
        class _0x4167d7 extends _0x4e51b5 {
            constructor(_0x590c8f, _0x30fc82 = {}) {
                super(_0x590c8f), this[_0x3a5454] = _0x30fc82['data'] === undefined ? null : _0x30fc82['data'];
            }
            get ['data']() {
                return this[_0x3a5454];
            }
        }
        Object['defineProperty'](_0x4167d7['prototype'], 'data', { 'enumerable': !![] });
        const _0x282700 = {
            'addEventListener'(_0x9a5107, _0x401973, _0x390b76 = {}) {
                let _0x2e5433;
                if (_0x9a5107 === 'message')
                    _0x2e5433 = function _0x44d423(_0x55ff90, _0x9059c0) {
                        const _0x4d3977 = new _0x4167d7('message', { 'data': _0x9059c0 ? _0x55ff90 : _0x55ff90['toString']() });
                        _0x4d3977[_0x3af169] = this, _0x401973['call'](this, _0x4d3977);
                    };
                else {
                    if (_0x9a5107 === 'close')
                        _0x2e5433 = function _0x42f103(_0x3eef26, _0x239a41) {
                            const _0x544d7f = new _0x48372c('close', {
                                'code': _0x3eef26,
                                'reason': _0x239a41['toString'](),
                                'wasClean': this['_closeFrameReceived'] && this['_closeFrameSent']
                            });
                            _0x544d7f[_0x3af169] = this, _0x401973['call'](this, _0x544d7f);
                        };
                    else {
                        if (_0x9a5107 === 'error')
                            _0x2e5433 = function _0x37e87f(_0x2b75ca) {
                                const _0x5ed985 = new _0x1166f7('error', {
                                    'error': _0x2b75ca,
                                    'message': _0x2b75ca['message']
                                });
                                _0x5ed985[_0x3af169] = this, _0x401973['call'](this, _0x5ed985);
                            };
                        else {
                            if (_0x9a5107 === 'open')
                                _0x2e5433 = function _0x148aa4() {
                                    const _0x148df8 = new _0x4e51b5('open');
                                    _0x148df8[_0x3af169] = this, _0x401973['call'](this, _0x148df8);
                                };
                            else
                                return;
                        }
                    }
                }
                _0x2e5433[_0x4664d9] = !!_0x390b76[_0x4664d9], _0x2e5433[_0x346c2b] = _0x401973, _0x390b76['once'] ? this['once'](_0x9a5107, _0x2e5433) : this['on'](_0x9a5107, _0x2e5433);
            },
            'removeEventListener'(_0x183bf4, _0x49eb89) {
                for (const _0xb9d547 of this['listeners'](_0x183bf4)) {
                    if (_0xb9d547[_0x346c2b] === _0x49eb89 && !_0xb9d547[_0x4664d9]) {
                        this['removeListener'](_0x183bf4, _0xb9d547);
                        break;
                    }
                }
            }
        };
        _0x2b9703['exports'] = {
            'CloseEvent': _0x48372c,
            'ErrorEvent': _0x1166f7,
            'Event': _0x4e51b5,
            'EventTarget': _0x282700,
            'MessageEvent': _0x4167d7
        };
    },
    0x11319: (_0x245618, _0x362eaf, _0x3e4a4e) => {
        'use strict';
        const {tokenChars: _0x243888} = _0x3e4a4e(0x1845);
        function _0x12f1d0(_0x524549, _0x10cdbb, _0x409235) {
            if (_0x524549[_0x10cdbb] === undefined)
                _0x524549[_0x10cdbb] = [_0x409235];
            else
                _0x524549[_0x10cdbb]['push'](_0x409235);
        }
        function _0x3593b0(_0x236bf5) {
            const _0x55f514 = Object['create'](null);
            let _0x198cb2 = Object['create'](null), _0x5eb3e6 = ![], _0x13253d = ![], _0x603030 = ![], _0xd443eb, _0x551449, _0x337d50 = -0x1, _0x500453 = -0x1, _0x353fee = -0x1, _0x5c579c = 0x0;
            for (; _0x5c579c < _0x236bf5['length']; _0x5c579c++) {
                _0x500453 = _0x236bf5['charCodeAt'](_0x5c579c);
                if (_0xd443eb === undefined) {
                    if (_0x353fee === -0x1 && _0x243888[_0x500453] === 0x1) {
                        if (_0x337d50 === -0x1)
                            _0x337d50 = _0x5c579c;
                    } else {
                        if (_0x5c579c !== 0x0 && (_0x500453 === 0x20 || _0x500453 === 0x9)) {
                            if (_0x353fee === -0x1 && _0x337d50 !== -0x1)
                                _0x353fee = _0x5c579c;
                        } else {
                            if (_0x500453 === 0x3b || _0x500453 === 0x2c) {
                                if (_0x337d50 === -0x1)
                                    throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x5c579c);
                                if (_0x353fee === -0x1)
                                    _0x353fee = _0x5c579c;
                                const _0x448497 = _0x236bf5['slice'](_0x337d50, _0x353fee);
                                _0x500453 === 0x2c ? (_0x12f1d0(_0x55f514, _0x448497, _0x198cb2), _0x198cb2 = Object['create'](null)) : _0xd443eb = _0x448497, _0x337d50 = _0x353fee = -0x1;
                            } else
                                throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x5c579c);
                        }
                    }
                } else {
                    if (_0x551449 === undefined) {
                        if (_0x353fee === -0x1 && _0x243888[_0x500453] === 0x1) {
                            if (_0x337d50 === -0x1)
                                _0x337d50 = _0x5c579c;
                        } else {
                            if (_0x500453 === 0x20 || _0x500453 === 0x9) {
                                if (_0x353fee === -0x1 && _0x337d50 !== -0x1)
                                    _0x353fee = _0x5c579c;
                            } else {
                                if (_0x500453 === 0x3b || _0x500453 === 0x2c) {
                                    if (_0x337d50 === -0x1)
                                        throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x5c579c);
                                    if (_0x353fee === -0x1)
                                        _0x353fee = _0x5c579c;
                                    _0x12f1d0(_0x198cb2, _0x236bf5['slice'](_0x337d50, _0x353fee), !![]), _0x500453 === 0x2c && (_0x12f1d0(_0x55f514, _0xd443eb, _0x198cb2), _0x198cb2 = Object['create'](null), _0xd443eb = undefined), _0x337d50 = _0x353fee = -0x1;
                                } else {
                                    if (_0x500453 === 0x3d && _0x337d50 !== -0x1 && _0x353fee === -0x1)
                                        _0x551449 = _0x236bf5['slice'](_0x337d50, _0x5c579c), _0x337d50 = _0x353fee = -0x1;
                                    else
                                        throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x5c579c);
                                }
                            }
                        }
                    } else {
                        if (_0x13253d) {
                            if (_0x243888[_0x500453] !== 0x1)
                                throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x5c579c);
                            if (_0x337d50 === -0x1)
                                _0x337d50 = _0x5c579c;
                            else {
                                if (!_0x5eb3e6)
                                    _0x5eb3e6 = !![];
                            }
                            _0x13253d = ![];
                        } else {
                            if (_0x603030) {
                                if (_0x243888[_0x500453] === 0x1) {
                                    if (_0x337d50 === -0x1)
                                        _0x337d50 = _0x5c579c;
                                } else {
                                    if (_0x500453 === 0x22 && _0x337d50 !== -0x1)
                                        _0x603030 = ![], _0x353fee = _0x5c579c;
                                    else {
                                        if (_0x500453 === 0x5c)
                                            _0x13253d = !![];
                                        else
                                            throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x5c579c);
                                    }
                                }
                            } else {
                                if (_0x500453 === 0x22 && _0x236bf5['charCodeAt'](_0x5c579c - 0x1) === 0x3d)
                                    _0x603030 = !![];
                                else {
                                    if (_0x353fee === -0x1 && _0x243888[_0x500453] === 0x1) {
                                        if (_0x337d50 === -0x1)
                                            _0x337d50 = _0x5c579c;
                                    } else {
                                        if (_0x337d50 !== -0x1 && (_0x500453 === 0x20 || _0x500453 === 0x9)) {
                                            if (_0x353fee === -0x1)
                                                _0x353fee = _0x5c579c;
                                        } else {
                                            if (_0x500453 === 0x3b || _0x500453 === 0x2c) {
                                                if (_0x337d50 === -0x1)
                                                    throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x5c579c);
                                                if (_0x353fee === -0x1)
                                                    _0x353fee = _0x5c579c;
                                                let _0x925df1 = _0x236bf5['slice'](_0x337d50, _0x353fee);
                                                _0x5eb3e6 && (_0x925df1 = _0x925df1['replace'](/\\/g, ''), _0x5eb3e6 = ![]), _0x12f1d0(_0x198cb2, _0x551449, _0x925df1), _0x500453 === 0x2c && (_0x12f1d0(_0x55f514, _0xd443eb, _0x198cb2), _0x198cb2 = Object['create'](null), _0xd443eb = undefined), _0x551449 = undefined, _0x337d50 = _0x353fee = -0x1;
                                            } else
                                                throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x5c579c);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (_0x337d50 === -0x1 || _0x603030 || _0x500453 === 0x20 || _0x500453 === 0x9)
                throw new SyntaxError('Unexpected\x20end\x20of\x20input');
            if (_0x353fee === -0x1)
                _0x353fee = _0x5c579c;
            const _0x5bcb07 = _0x236bf5['slice'](_0x337d50, _0x353fee);
            if (_0xd443eb === undefined)
                _0x12f1d0(_0x55f514, _0x5bcb07, _0x198cb2);
            else {
                if (_0x551449 === undefined)
                    _0x12f1d0(_0x198cb2, _0x5bcb07, !![]);
                else
                    _0x5eb3e6 ? _0x12f1d0(_0x198cb2, _0x551449, _0x5bcb07['replace'](/\\/g, '')) : _0x12f1d0(_0x198cb2, _0x551449, _0x5bcb07);
                _0x12f1d0(_0x55f514, _0xd443eb, _0x198cb2);
            }
            return _0x55f514;
        }
        function _0x559b2e(_0x5e3e9d) {
            return Object['keys'](_0x5e3e9d)['map'](_0x1f3cac => {
                let _0x2e45ee = _0x5e3e9d[_0x1f3cac];
                if (!Array['isArray'](_0x2e45ee))
                    _0x2e45ee = [_0x2e45ee];
                return _0x2e45ee['map'](_0x10a3a0 => {
                    return [_0x1f3cac]['concat'](Object['keys'](_0x10a3a0)['map'](_0x3c38f4 => {
                        let _0x273048 = _0x10a3a0[_0x3c38f4];
                        if (!Array['isArray'](_0x273048))
                            _0x273048 = [_0x273048];
                        return _0x273048['map'](_0x1cdf57 => _0x1cdf57 === !![] ? _0x3c38f4 : _0x3c38f4 + '=' + _0x1cdf57)['join'](';\x20');
                    }))['join'](';\x20');
                })['join'](',\x20');
            })['join'](',\x20');
        }
        _0x245618['exports'] = {
            'format': _0x559b2e,
            'parse': _0x3593b0
        };
    },
    0x869e: _0x563890 => {
        'use strict';
        const _0x310bbf = Symbol('kDone'), _0x39490a = Symbol('kRun');
        class _0x12aa9c {
            constructor(_0x2e88d5) {
                this[_0x310bbf] = () => {
                    this['pending']--, this[_0x39490a]();
                }, this['concurrency'] = _0x2e88d5 || Infinity, this['jobs'] = [], this['pending'] = 0x0;
            }
            ['add'](_0x5e2a7d) {
                this['jobs']['push'](_0x5e2a7d), this[_0x39490a]();
            }
            [_0x39490a]() {
                if (this['pending'] === this['concurrency'])
                    return;
                if (this['jobs']['length']) {
                    const _0x45819c = this['jobs']['shift']();
                    this['pending']++, _0x45819c(this[_0x310bbf]);
                }
            }
        }
        _0x563890['exports'] = _0x12aa9c;
    },
    0x9141: (_0x4eff80, _0x3e6668, _0x1851c0) => {
        'use strict';
        const _0x43fa1a = _0x1851c0(0xe994), _0x3a2f35 = _0x1851c0(0x1206a), _0x1a89c7 = _0x1851c0(0x869e), {kStatusCode: _0x4219cf} = _0x1851c0(0x9d6d), _0xc3cd28 = Buffer['from']([
                0x0,
                0x0,
                0xff,
                0xff
            ]), _0x52c69c = Symbol('permessage-deflate'), _0x140c6b = Symbol('total-length'), _0x3b801e = Symbol('callback'), _0xe33432 = Symbol('buffers'), _0x5e3186 = Symbol('error');
        let _0x3280b2;
        class _0x275705 {
            constructor(_0xf3434a, _0x48b39f, _0x4d1a29) {
                this['_maxPayload'] = _0x4d1a29 | 0x0, this['_options'] = _0xf3434a || {}, this['_threshold'] = this['_options']['threshold'] !== undefined ? this['_options']['threshold'] : 0x400, this['_isServer'] = !!_0x48b39f, this['_deflate'] = null, this['_inflate'] = null, this['params'] = null;
                if (!_0x3280b2) {
                    const _0x53fbc2 = this['_options']['concurrencyLimit'] !== undefined ? this['_options']['concurrencyLimit'] : 0xa;
                    _0x3280b2 = new _0x1a89c7(_0x53fbc2);
                }
            }
            static get ['extensionName']() {
                return 'permessage-deflate';
            }
            ['offer']() {
                const _0x30d967 = {};
                this['_options']['serverNoContextTakeover'] && (_0x30d967['server_no_context_takeover'] = !![]);
                this['_options']['clientNoContextTakeover'] && (_0x30d967['client_no_context_takeover'] = !![]);
                this['_options']['serverMaxWindowBits'] && (_0x30d967['server_max_window_bits'] = this['_options']['serverMaxWindowBits']);
                if (this['_options']['clientMaxWindowBits'])
                    _0x30d967['client_max_window_bits'] = this['_options']['clientMaxWindowBits'];
                else
                    this['_options']['clientMaxWindowBits'] == null && (_0x30d967['client_max_window_bits'] = !![]);
                return _0x30d967;
            }
            ['accept'](_0x33991a) {
                return _0x33991a = this['normalizeParams'](_0x33991a), this['params'] = this['_isServer'] ? this['acceptAsServer'](_0x33991a) : this['acceptAsClient'](_0x33991a), this['params'];
            }
            ['cleanup']() {
                this['_inflate'] && (this['_inflate']['close'](), this['_inflate'] = null);
                if (this['_deflate']) {
                    const _0x5ee533 = this['_deflate'][_0x3b801e];
                    this['_deflate']['close'](), this['_deflate'] = null, _0x5ee533 && _0x5ee533(new Error('The\x20deflate\x20stream\x20was\x20closed\x20while\x20data\x20was\x20being\x20processed'));
                }
            }
            ['acceptAsServer'](_0x38c354) {
                const _0x645768 = this['_options'], _0x152668 = _0x38c354['find'](_0x22eccb => {
                        if (_0x645768['serverNoContextTakeover'] === ![] && _0x22eccb['server_no_context_takeover'] || _0x22eccb['server_max_window_bits'] && (_0x645768['serverMaxWindowBits'] === ![] || typeof _0x645768['serverMaxWindowBits'] === 'number' && _0x645768['serverMaxWindowBits'] > _0x22eccb['server_max_window_bits']) || typeof _0x645768['clientMaxWindowBits'] === 'number' && !_0x22eccb['client_max_window_bits'])
                            return ![];
                        return !![];
                    });
                if (!_0x152668)
                    throw new Error('None\x20of\x20the\x20extension\x20offers\x20can\x20be\x20accepted');
                _0x645768['serverNoContextTakeover'] && (_0x152668['server_no_context_takeover'] = !![]);
                _0x645768['clientNoContextTakeover'] && (_0x152668['client_no_context_takeover'] = !![]);
                typeof _0x645768['serverMaxWindowBits'] === 'number' && (_0x152668['server_max_window_bits'] = _0x645768['serverMaxWindowBits']);
                if (typeof _0x645768['clientMaxWindowBits'] === 'number')
                    _0x152668['client_max_window_bits'] = _0x645768['clientMaxWindowBits'];
                else
                    (_0x152668['client_max_window_bits'] === !![] || _0x645768['clientMaxWindowBits'] === ![]) && delete _0x152668['client_max_window_bits'];
                return _0x152668;
            }
            ['acceptAsClient'](_0x435b67) {
                const _0xb5fd2d = _0x435b67[0x0];
                if (this['_options']['clientNoContextTakeover'] === ![] && _0xb5fd2d['client_no_context_takeover'])
                    throw new Error('Unexpected\x20parameter\x20\x22client_no_context_takeover\x22');
                if (!_0xb5fd2d['client_max_window_bits'])
                    typeof this['_options']['clientMaxWindowBits'] === 'number' && (_0xb5fd2d['client_max_window_bits'] = this['_options']['clientMaxWindowBits']);
                else {
                    if (this['_options']['clientMaxWindowBits'] === ![] || typeof this['_options']['clientMaxWindowBits'] === 'number' && _0xb5fd2d['client_max_window_bits'] > this['_options']['clientMaxWindowBits'])
                        throw new Error('Unexpected\x20or\x20invalid\x20parameter\x20\x22client_max_window_bits\x22');
                }
                return _0xb5fd2d;
            }
            ['normalizeParams'](_0x26d610) {
                return _0x26d610['forEach'](_0x339701 => {
                    Object['keys'](_0x339701)['forEach'](_0x4e76c0 => {
                        let _0x52739a = _0x339701[_0x4e76c0];
                        if (_0x52739a['length'] > 0x1)
                            throw new Error('Parameter\x20\x22' + _0x4e76c0 + '\x22\x20must\x20have\x20only\x20a\x20single\x20value');
                        _0x52739a = _0x52739a[0x0];
                        if (_0x4e76c0 === 'client_max_window_bits') {
                            if (_0x52739a !== !![]) {
                                const _0x3083f6 = +_0x52739a;
                                if (!Number['isInteger'](_0x3083f6) || _0x3083f6 < 0x8 || _0x3083f6 > 0xf)
                                    throw new TypeError('Invalid\x20value\x20for\x20parameter\x20\x22' + _0x4e76c0 + '\x22:\x20' + _0x52739a);
                                _0x52739a = _0x3083f6;
                            } else {
                                if (!this['_isServer'])
                                    throw new TypeError('Invalid\x20value\x20for\x20parameter\x20\x22' + _0x4e76c0 + '\x22:\x20' + _0x52739a);
                            }
                        } else {
                            if (_0x4e76c0 === 'server_max_window_bits') {
                                const _0x110f0f = +_0x52739a;
                                if (!Number['isInteger'](_0x110f0f) || _0x110f0f < 0x8 || _0x110f0f > 0xf)
                                    throw new TypeError('Invalid\x20value\x20for\x20parameter\x20\x22' + _0x4e76c0 + '\x22:\x20' + _0x52739a);
                                _0x52739a = _0x110f0f;
                            } else {
                                if (_0x4e76c0 === 'client_no_context_takeover' || _0x4e76c0 === 'server_no_context_takeover') {
                                    if (_0x52739a !== !![])
                                        throw new TypeError('Invalid\x20value\x20for\x20parameter\x20\x22' + _0x4e76c0 + '\x22:\x20' + _0x52739a);
                                } else
                                    throw new Error('Unknown\x20parameter\x20\x22' + _0x4e76c0 + '\x22');
                            }
                        }
                        _0x339701[_0x4e76c0] = _0x52739a;
                    });
                }), _0x26d610;
            }
            ['decompress'](_0x4407a9, _0x5c0442, _0x2a8ba8) {
                _0x3280b2['add'](_0x26ccf0 => {
                    this['_decompress'](_0x4407a9, _0x5c0442, (_0x47aa1c, _0x12256a) => {
                        _0x26ccf0(), _0x2a8ba8(_0x47aa1c, _0x12256a);
                    });
                });
            }
            ['compress'](_0x46b801, _0x106fbe, _0x244d63) {
                _0x3280b2['add'](_0x31d5c9 => {
                    this['_compress'](_0x46b801, _0x106fbe, (_0x2b2196, _0x253169) => {
                        _0x31d5c9(), _0x244d63(_0x2b2196, _0x253169);
                    });
                });
            }
            ['_decompress'](_0x2c6ff5, _0x4e8f61, _0xa96ed5) {
                const _0x41932d = this['_isServer'] ? 'client' : 'server';
                if (!this['_inflate']) {
                    const _0x1cedef = _0x41932d + '_max_window_bits', _0x3742f6 = typeof this['params'][_0x1cedef] !== 'number' ? _0x43fa1a['Z_DEFAULT_WINDOWBITS'] : this['params'][_0x1cedef];
                    this['_inflate'] = _0x43fa1a['createInflateRaw']({
                        ...this['_options']['zlibInflateOptions'],
                        'windowBits': _0x3742f6
                    }), this['_inflate'][_0x52c69c] = this, this['_inflate'][_0x140c6b] = 0x0, this['_inflate'][_0xe33432] = [], this['_inflate']['on']('error', _0x4cbeba), this['_inflate']['on']('data', _0x58b187);
                }
                this['_inflate'][_0x3b801e] = _0xa96ed5, this['_inflate']['write'](_0x2c6ff5);
                if (_0x4e8f61)
                    this['_inflate']['write'](_0xc3cd28);
                this['_inflate']['flush'](() => {
                    const _0x29f700 = this['_inflate'][_0x5e3186];
                    if (_0x29f700) {
                        this['_inflate']['close'](), this['_inflate'] = null, _0xa96ed5(_0x29f700);
                        return;
                    }
                    const _0x297a17 = _0x3a2f35['concat'](this['_inflate'][_0xe33432], this['_inflate'][_0x140c6b]);
                    this['_inflate']['_readableState']['endEmitted'] ? (this['_inflate']['close'](), this['_inflate'] = null) : (this['_inflate'][_0x140c6b] = 0x0, this['_inflate'][_0xe33432] = [], _0x4e8f61 && this['params'][_0x41932d + '_no_context_takeover'] && this['_inflate']['reset']()), _0xa96ed5(null, _0x297a17);
                });
            }
            ['_compress'](_0x4590b2, _0x2a1f28, _0xd339d5) {
                const _0x10c5dc = this['_isServer'] ? 'server' : 'client';
                if (!this['_deflate']) {
                    const _0x420759 = _0x10c5dc + '_max_window_bits', _0x2a7d73 = typeof this['params'][_0x420759] !== 'number' ? _0x43fa1a['Z_DEFAULT_WINDOWBITS'] : this['params'][_0x420759];
                    this['_deflate'] = _0x43fa1a['createDeflateRaw']({
                        ...this['_options']['zlibDeflateOptions'],
                        'windowBits': _0x2a7d73
                    }), this['_deflate'][_0x140c6b] = 0x0, this['_deflate'][_0xe33432] = [], this['_deflate']['on']('data', _0x2bd60e);
                }
                this['_deflate'][_0x3b801e] = _0xd339d5, this['_deflate']['write'](_0x4590b2), this['_deflate']['flush'](_0x43fa1a['Z_SYNC_FLUSH'], () => {
                    if (!this['_deflate'])
                        return;
                    let _0x52e872 = _0x3a2f35['concat'](this['_deflate'][_0xe33432], this['_deflate'][_0x140c6b]);
                    if (_0x2a1f28)
                        _0x52e872 = _0x52e872['slice'](0x0, _0x52e872['length'] - 0x4);
                    this['_deflate'][_0x3b801e] = null, this['_deflate'][_0x140c6b] = 0x0, this['_deflate'][_0xe33432] = [], _0x2a1f28 && this['params'][_0x10c5dc + '_no_context_takeover'] && this['_deflate']['reset'](), _0xd339d5(null, _0x52e872);
                });
            }
        }
        _0x4eff80['exports'] = _0x275705;
        function _0x2bd60e(_0x20f84f) {
            this[_0xe33432]['push'](_0x20f84f), this[_0x140c6b] += _0x20f84f['length'];
        }
        function _0x58b187(_0x4fd343) {
            this[_0x140c6b] += _0x4fd343['length'];
            if (this[_0x52c69c]['_maxPayload'] < 0x1 || this[_0x140c6b] <= this[_0x52c69c]['_maxPayload']) {
                this[_0xe33432]['push'](_0x4fd343);
                return;
            }
            this[_0x5e3186] = new RangeError('Max\x20payload\x20size\x20exceeded'), this[_0x5e3186]['code'] = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH', this[_0x5e3186][_0x4219cf] = 0x3f1, this['removeListener']('data', _0x58b187), this['reset']();
        }
        function _0x4cbeba(_0x3179f1) {
            this[_0x52c69c]['_inflate'] = null, _0x3179f1[_0x4219cf] = 0x3ef, this[_0x3b801e](_0x3179f1);
        }
    },
    0xf0a3: (_0x1e3648, _0x56f565, _0x7350a) => {
        'use strict';
        const {Writable: _0x164008} = _0x7350a(0x31ed), _0x569f49 = _0x7350a(0x9141), {
                BINARY_TYPES: _0x4af4ac,
                EMPTY_BUFFER: _0x573c10,
                kStatusCode: _0x4008ec,
                kWebSocket: _0xea33c9
            } = _0x7350a(0x9d6d), {
                concat: _0x2e99f2,
                toArrayBuffer: _0x43c9ec,
                unmask: _0x54ed69
            } = _0x7350a(0x1206a), {
                isValidStatusCode: _0x1de122,
                isValidUTF8: _0x4ede5f
            } = _0x7350a(0x1845), _0x10534b = 0x0, _0x16110e = 0x1, _0x917776 = 0x2, _0x380422 = 0x3, _0x3ff9fc = 0x4, _0x386a32 = 0x5;
        class _0x19f7d5 extends _0x164008 {
            constructor(_0x1f3a32 = {}) {
                super(), this['_binaryType'] = _0x1f3a32['binaryType'] || _0x4af4ac[0x0], this['_extensions'] = _0x1f3a32['extensions'] || {}, this['_isServer'] = !!_0x1f3a32['isServer'], this['_maxPayload'] = _0x1f3a32['maxPayload'] | 0x0, this['_skipUTF8Validation'] = !!_0x1f3a32['skipUTF8Validation'], this[_0xea33c9] = undefined, this['_bufferedBytes'] = 0x0, this['_buffers'] = [], this['_compressed'] = ![], this['_payloadLength'] = 0x0, this['_mask'] = undefined, this['_fragmented'] = 0x0, this['_masked'] = ![], this['_fin'] = ![], this['_opcode'] = 0x0, this['_totalPayloadLength'] = 0x0, this['_messageLength'] = 0x0, this['_fragments'] = [], this['_state'] = _0x10534b, this['_loop'] = ![];
            }
            ['_write'](_0x10023a, _0x371f71, _0x52b69f) {
                if (this['_opcode'] === 0x8 && this['_state'] == _0x10534b)
                    return _0x52b69f();
                this['_bufferedBytes'] += _0x10023a['length'], this['_buffers']['push'](_0x10023a), this['startLoop'](_0x52b69f);
            }
            ['consume'](_0x24e414) {
                this['_bufferedBytes'] -= _0x24e414;
                if (_0x24e414 === this['_buffers'][0x0]['length'])
                    return this['_buffers']['shift']();
                if (_0x24e414 < this['_buffers'][0x0]['length']) {
                    const _0x436b4f = this['_buffers'][0x0];
                    return this['_buffers'][0x0] = _0x436b4f['slice'](_0x24e414), _0x436b4f['slice'](0x0, _0x24e414);
                }
                const _0x35a368 = Buffer['allocUnsafe'](_0x24e414);
                do {
                    const _0x4a0271 = this['_buffers'][0x0], _0xf79112 = _0x35a368['length'] - _0x24e414;
                    _0x24e414 >= _0x4a0271['length'] ? _0x35a368['set'](this['_buffers']['shift'](), _0xf79112) : (_0x35a368['set'](new Uint8Array(_0x4a0271['buffer'], _0x4a0271['byteOffset'], _0x24e414), _0xf79112), this['_buffers'][0x0] = _0x4a0271['slice'](_0x24e414)), _0x24e414 -= _0x4a0271['length'];
                } while (_0x24e414 > 0x0);
                return _0x35a368;
            }
            ['startLoop'](_0x54952d) {
                let _0x4d9501;
                this['_loop'] = !![];
                do {
                    switch (this['_state']) {
                    case _0x10534b:
                        _0x4d9501 = this['getInfo']();
                        break;
                    case _0x16110e:
                        _0x4d9501 = this['getPayloadLength16']();
                        break;
                    case _0x917776:
                        _0x4d9501 = this['getPayloadLength64']();
                        break;
                    case _0x380422:
                        this['getMask']();
                        break;
                    case _0x3ff9fc:
                        _0x4d9501 = this['getData'](_0x54952d);
                        break;
                    default:
                        this['_loop'] = ![];
                        return;
                    }
                } while (this['_loop']);
                _0x54952d(_0x4d9501);
            }
            ['getInfo']() {
                if (this['_bufferedBytes'] < 0x2) {
                    this['_loop'] = ![];
                    return;
                }
                const _0x27388f = this['consume'](0x2);
                if ((_0x27388f[0x0] & 0x30) !== 0x0)
                    return this['_loop'] = ![], _0x52ba9b(RangeError, 'RSV2\x20and\x20RSV3\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_RSV_2_3');
                const _0x398298 = (_0x27388f[0x0] & 0x40) === 0x40;
                if (_0x398298 && !this['_extensions'][_0x569f49['extensionName']])
                    return this['_loop'] = ![], _0x52ba9b(RangeError, 'RSV1\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_RSV_1');
                this['_fin'] = (_0x27388f[0x0] & 0x80) === 0x80, this['_opcode'] = _0x27388f[0x0] & 0xf, this['_payloadLength'] = _0x27388f[0x1] & 0x7f;
                if (this['_opcode'] === 0x0) {
                    if (_0x398298)
                        return this['_loop'] = ![], _0x52ba9b(RangeError, 'RSV1\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_RSV_1');
                    if (!this['_fragmented'])
                        return this['_loop'] = ![], _0x52ba9b(RangeError, 'invalid\x20opcode\x200', !![], 0x3ea, 'WS_ERR_INVALID_OPCODE');
                    this['_opcode'] = this['_fragmented'];
                } else {
                    if (this['_opcode'] === 0x1 || this['_opcode'] === 0x2) {
                        if (this['_fragmented'])
                            return this['_loop'] = ![], _0x52ba9b(RangeError, 'invalid\x20opcode\x20' + this['_opcode'], !![], 0x3ea, 'WS_ERR_INVALID_OPCODE');
                        this['_compressed'] = _0x398298;
                    } else {
                        if (this['_opcode'] > 0x7 && this['_opcode'] < 0xb) {
                            if (!this['_fin'])
                                return this['_loop'] = ![], _0x52ba9b(RangeError, 'FIN\x20must\x20be\x20set', !![], 0x3ea, 'WS_ERR_EXPECTED_FIN');
                            if (_0x398298)
                                return this['_loop'] = ![], _0x52ba9b(RangeError, 'RSV1\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_RSV_1');
                            if (this['_payloadLength'] > 0x7d)
                                return this['_loop'] = ![], _0x52ba9b(RangeError, 'invalid\x20payload\x20length\x20' + this['_payloadLength'], !![], 0x3ea, 'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH');
                        } else
                            return this['_loop'] = ![], _0x52ba9b(RangeError, 'invalid\x20opcode\x20' + this['_opcode'], !![], 0x3ea, 'WS_ERR_INVALID_OPCODE');
                    }
                }
                if (!this['_fin'] && !this['_fragmented'])
                    this['_fragmented'] = this['_opcode'];
                this['_masked'] = (_0x27388f[0x1] & 0x80) === 0x80;
                if (this['_isServer']) {
                    if (!this['_masked'])
                        return this['_loop'] = ![], _0x52ba9b(RangeError, 'MASK\x20must\x20be\x20set', !![], 0x3ea, 'WS_ERR_EXPECTED_MASK');
                } else {
                    if (this['_masked'])
                        return this['_loop'] = ![], _0x52ba9b(RangeError, 'MASK\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_MASK');
                }
                if (this['_payloadLength'] === 0x7e)
                    this['_state'] = _0x16110e;
                else {
                    if (this['_payloadLength'] === 0x7f)
                        this['_state'] = _0x917776;
                    else
                        return this['haveLength']();
                }
            }
            ['getPayloadLength16']() {
                if (this['_bufferedBytes'] < 0x2) {
                    this['_loop'] = ![];
                    return;
                }
                return this['_payloadLength'] = this['consume'](0x2)['readUInt16BE'](0x0), this['haveLength']();
            }
            ['getPayloadLength64']() {
                if (this['_bufferedBytes'] < 0x8) {
                    this['_loop'] = ![];
                    return;
                }
                const _0x30ee20 = this['consume'](0x8), _0x44e0bd = _0x30ee20['readUInt32BE'](0x0);
                if (_0x44e0bd > Math['pow'](0x2, 0x35 - 0x20) - 0x1)
                    return this['_loop'] = ![], _0x52ba9b(RangeError, 'Unsupported\x20WebSocket\x20frame:\x20payload\x20length\x20>\x202^53\x20-\x201', ![], 0x3f1, 'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH');
                return this['_payloadLength'] = _0x44e0bd * Math['pow'](0x2, 0x20) + _0x30ee20['readUInt32BE'](0x4), this['haveLength']();
            }
            ['haveLength']() {
                if (this['_payloadLength'] && this['_opcode'] < 0x8) {
                    this['_totalPayloadLength'] += this['_payloadLength'];
                    if (this['_totalPayloadLength'] > this['_maxPayload'] && this['_maxPayload'] > 0x0)
                        return this['_loop'] = ![], _0x52ba9b(RangeError, 'Max\x20payload\x20size\x20exceeded', ![], 0x3f1, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH');
                }
                if (this['_masked'])
                    this['_state'] = _0x380422;
                else
                    this['_state'] = _0x3ff9fc;
            }
            ['getMask']() {
                if (this['_bufferedBytes'] < 0x4) {
                    this['_loop'] = ![];
                    return;
                }
                this['_mask'] = this['consume'](0x4), this['_state'] = _0x3ff9fc;
            }
            ['getData'](_0x3c14d4) {
                let _0x1b031d = _0x573c10;
                if (this['_payloadLength']) {
                    if (this['_bufferedBytes'] < this['_payloadLength']) {
                        this['_loop'] = ![];
                        return;
                    }
                    _0x1b031d = this['consume'](this['_payloadLength']);
                    if (this['_masked'])
                        _0x54ed69(_0x1b031d, this['_mask']);
                }
                if (this['_opcode'] > 0x7)
                    return this['controlMessage'](_0x1b031d);
                if (this['_compressed']) {
                    this['_state'] = _0x386a32, this['decompress'](_0x1b031d, _0x3c14d4);
                    return;
                }
                return _0x1b031d['length'] && (this['_messageLength'] = this['_totalPayloadLength'], this['_fragments']['push'](_0x1b031d)), this['dataMessage']();
            }
            ['decompress'](_0x527e9c, _0xaa5378) {
                const _0x156112 = this['_extensions'][_0x569f49['extensionName']];
                _0x156112['decompress'](_0x527e9c, this['_fin'], (_0x744af6, _0x5e549e) => {
                    if (_0x744af6)
                        return _0xaa5378(_0x744af6);
                    if (_0x5e549e['length']) {
                        this['_messageLength'] += _0x5e549e['length'];
                        if (this['_messageLength'] > this['_maxPayload'] && this['_maxPayload'] > 0x0)
                            return _0xaa5378(_0x52ba9b(RangeError, 'Max\x20payload\x20size\x20exceeded', ![], 0x3f1, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'));
                        this['_fragments']['push'](_0x5e549e);
                    }
                    const _0x275a7e = this['dataMessage']();
                    if (_0x275a7e)
                        return _0xaa5378(_0x275a7e);
                    this['startLoop'](_0xaa5378);
                });
            }
            ['dataMessage']() {
                if (this['_fin']) {
                    const _0x421c0d = this['_messageLength'], _0x18c3ed = this['_fragments'];
                    this['_totalPayloadLength'] = 0x0, this['_messageLength'] = 0x0, this['_fragmented'] = 0x0, this['_fragments'] = [];
                    if (this['_opcode'] === 0x2) {
                        let _0x4d521a;
                        if (this['_binaryType'] === 'nodebuffer')
                            _0x4d521a = _0x2e99f2(_0x18c3ed, _0x421c0d);
                        else
                            this['_binaryType'] === 'arraybuffer' ? _0x4d521a = _0x43c9ec(_0x2e99f2(_0x18c3ed, _0x421c0d)) : _0x4d521a = _0x18c3ed;
                        this['emit']('message', _0x4d521a, !![]);
                    } else {
                        const _0x557261 = _0x2e99f2(_0x18c3ed, _0x421c0d);
                        if (!this['_skipUTF8Validation'] && !_0x4ede5f(_0x557261))
                            return this['_loop'] = ![], _0x52ba9b(Error, 'invalid\x20UTF-8\x20sequence', !![], 0x3ef, 'WS_ERR_INVALID_UTF8');
                        this['emit']('message', _0x557261, ![]);
                    }
                }
                this['_state'] = _0x10534b;
            }
            ['controlMessage'](_0x17eacc) {
                if (this['_opcode'] === 0x8) {
                    this['_loop'] = ![];
                    if (_0x17eacc['length'] === 0x0)
                        this['emit']('conclude', 0x3ed, _0x573c10), this['end']();
                    else {
                        if (_0x17eacc['length'] === 0x1)
                            return _0x52ba9b(RangeError, 'invalid\x20payload\x20length\x201', !![], 0x3ea, 'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH');
                        else {
                            const _0x3a0537 = _0x17eacc['readUInt16BE'](0x0);
                            if (!_0x1de122(_0x3a0537))
                                return _0x52ba9b(RangeError, 'invalid\x20status\x20code\x20' + _0x3a0537, !![], 0x3ea, 'WS_ERR_INVALID_CLOSE_CODE');
                            const _0x447a8c = _0x17eacc['slice'](0x2);
                            if (!this['_skipUTF8Validation'] && !_0x4ede5f(_0x447a8c))
                                return _0x52ba9b(Error, 'invalid\x20UTF-8\x20sequence', !![], 0x3ef, 'WS_ERR_INVALID_UTF8');
                            this['emit']('conclude', _0x3a0537, _0x447a8c), this['end']();
                        }
                    }
                } else
                    this['_opcode'] === 0x9 ? this['emit']('ping', _0x17eacc) : this['emit']('pong', _0x17eacc);
                this['_state'] = _0x10534b;
            }
        }
        _0x1e3648['exports'] = _0x19f7d5;
        function _0x52ba9b(_0x99bb2d, _0x5170fb, _0x238491, _0x293283, _0x8de2e4) {
            const _0x12054b = new _0x99bb2d(_0x238491 ? 'Invalid\x20WebSocket\x20frame:\x20' + _0x5170fb : _0x5170fb);
            return Error['captureStackTrace'](_0x12054b, _0x52ba9b), _0x12054b['code'] = _0x8de2e4, _0x12054b[_0x4008ec] = _0x293283, _0x12054b;
        }
    },
    0x11ed9: (_0x186c62, _0x5751da, _0x3ab432) => {
        'use strict';
        const _0x4158d3 = _0x3ab432(0xa350), _0x386dad = _0x3ab432(0x5f54), {randomFillSync: _0x9016b6} = _0x3ab432(0x17e1), _0x31f13f = _0x3ab432(0x9141), {EMPTY_BUFFER: _0x2dd0a1} = _0x3ab432(0x9d6d), {isValidStatusCode: _0x250247} = _0x3ab432(0x1845), {
                mask: _0x2ca83d,
                toBuffer: _0x23096c
            } = _0x3ab432(0x1206a), _0x3f896f = Buffer['alloc'](0x4);
        class _0x6272ce {
            constructor(_0x1ce0e6, _0x3a179c) {
                this['_extensions'] = _0x3a179c || {}, this['_socket'] = _0x1ce0e6, this['_firstFragment'] = !![], this['_compress'] = ![], this['_bufferedBytes'] = 0x0, this['_deflating'] = ![], this['_queue'] = [];
            }
            static ['frame'](_0x577622, _0x156901) {
                const _0x5a7948 = _0x156901['mask'] && _0x156901['readOnly'];
                let _0x53e093 = _0x156901['mask'] ? 0x6 : 0x2, _0x147013 = _0x577622['length'];
                if (_0x577622['length'] >= 0x10000)
                    _0x53e093 += 0x8, _0x147013 = 0x7f;
                else
                    _0x577622['length'] > 0x7d && (_0x53e093 += 0x2, _0x147013 = 0x7e);
                const _0x15511c = Buffer['allocUnsafe'](_0x5a7948 ? _0x577622['length'] + _0x53e093 : _0x53e093);
                _0x15511c[0x0] = _0x156901['fin'] ? _0x156901['opcode'] | 0x80 : _0x156901['opcode'];
                if (_0x156901['rsv1'])
                    _0x15511c[0x0] |= 0x40;
                _0x15511c[0x1] = _0x147013;
                if (_0x147013 === 0x7e)
                    _0x15511c['writeUInt16BE'](_0x577622['length'], 0x2);
                else
                    _0x147013 === 0x7f && (_0x15511c['writeUInt32BE'](0x0, 0x2), _0x15511c['writeUInt32BE'](_0x577622['length'], 0x6));
                if (!_0x156901['mask'])
                    return [
                        _0x15511c,
                        _0x577622
                    ];
                _0x9016b6(_0x3f896f, 0x0, 0x4), _0x15511c[0x1] |= 0x80, _0x15511c[_0x53e093 - 0x4] = _0x3f896f[0x0], _0x15511c[_0x53e093 - 0x3] = _0x3f896f[0x1], _0x15511c[_0x53e093 - 0x2] = _0x3f896f[0x2], _0x15511c[_0x53e093 - 0x1] = _0x3f896f[0x3];
                if (_0x5a7948)
                    return _0x2ca83d(_0x577622, _0x3f896f, _0x15511c, _0x53e093, _0x577622['length']), [_0x15511c];
                return _0x2ca83d(_0x577622, _0x3f896f, _0x577622, 0x0, _0x577622['length']), [
                    _0x15511c,
                    _0x577622
                ];
            }
            ['close'](_0x31b549, _0x28fec2, _0x78846b, _0x246039) {
                let _0x3fda5d;
                if (_0x31b549 === undefined)
                    _0x3fda5d = _0x2dd0a1;
                else {
                    if (typeof _0x31b549 !== 'number' || !_0x250247(_0x31b549))
                        throw new TypeError('First\x20argument\x20must\x20be\x20a\x20valid\x20error\x20code\x20number');
                    else {
                        if (_0x28fec2 === undefined || !_0x28fec2['length'])
                            _0x3fda5d = Buffer['allocUnsafe'](0x2), _0x3fda5d['writeUInt16BE'](_0x31b549, 0x0);
                        else {
                            const _0x23fd7a = Buffer['byteLength'](_0x28fec2);
                            if (_0x23fd7a > 0x7b)
                                throw new RangeError('The\x20message\x20must\x20not\x20be\x20greater\x20than\x20123\x20bytes');
                            _0x3fda5d = Buffer['allocUnsafe'](0x2 + _0x23fd7a), _0x3fda5d['writeUInt16BE'](_0x31b549, 0x0), typeof _0x28fec2 === 'string' ? _0x3fda5d['write'](_0x28fec2, 0x2) : _0x3fda5d['set'](_0x28fec2, 0x2);
                        }
                    }
                }
                this['_deflating'] ? this['enqueue']([
                    this['doClose'],
                    _0x3fda5d,
                    _0x78846b,
                    _0x246039
                ]) : this['doClose'](_0x3fda5d, _0x78846b, _0x246039);
            }
            ['doClose'](_0xa0f480, _0x624dfa, _0x1107f3) {
                this['sendFrame'](_0x6272ce['frame'](_0xa0f480, {
                    'fin': !![],
                    'rsv1': ![],
                    'opcode': 0x8,
                    'mask': _0x624dfa,
                    'readOnly': ![]
                }), _0x1107f3);
            }
            ['ping'](_0x5e0c6f, _0x174b8c, _0x3780fa) {
                const _0x1a03b7 = _0x23096c(_0x5e0c6f);
                if (_0x1a03b7['length'] > 0x7d)
                    throw new RangeError('The\x20data\x20size\x20must\x20not\x20be\x20greater\x20than\x20125\x20bytes');
                this['_deflating'] ? this['enqueue']([
                    this['doPing'],
                    _0x1a03b7,
                    _0x174b8c,
                    _0x23096c['readOnly'],
                    _0x3780fa
                ]) : this['doPing'](_0x1a03b7, _0x174b8c, _0x23096c['readOnly'], _0x3780fa);
            }
            ['doPing'](_0x434878, _0x403657, _0x488256, _0x4de8e1) {
                this['sendFrame'](_0x6272ce['frame'](_0x434878, {
                    'fin': !![],
                    'rsv1': ![],
                    'opcode': 0x9,
                    'mask': _0x403657,
                    'readOnly': _0x488256
                }), _0x4de8e1);
            }
            ['pong'](_0x168afd, _0x574e6e, _0x2dea61) {
                const _0x5bbf56 = _0x23096c(_0x168afd);
                if (_0x5bbf56['length'] > 0x7d)
                    throw new RangeError('The\x20data\x20size\x20must\x20not\x20be\x20greater\x20than\x20125\x20bytes');
                this['_deflating'] ? this['enqueue']([
                    this['doPong'],
                    _0x5bbf56,
                    _0x574e6e,
                    _0x23096c['readOnly'],
                    _0x2dea61
                ]) : this['doPong'](_0x5bbf56, _0x574e6e, _0x23096c['readOnly'], _0x2dea61);
            }
            ['doPong'](_0x435306, _0x47a796, _0xecf8e5, _0x730a83) {
                this['sendFrame'](_0x6272ce['frame'](_0x435306, {
                    'fin': !![],
                    'rsv1': ![],
                    'opcode': 0xa,
                    'mask': _0x47a796,
                    'readOnly': _0xecf8e5
                }), _0x730a83);
            }
            ['send'](_0x39f6bb, _0x561ba0, _0x10428a) {
                const _0x1782a9 = _0x23096c(_0x39f6bb), _0x2b5177 = this['_extensions'][_0x31f13f['extensionName']];
                let _0x2a7b80 = _0x561ba0['binary'] ? 0x2 : 0x1, _0x80998a = _0x561ba0['compress'];
                this['_firstFragment'] ? (this['_firstFragment'] = ![], _0x80998a && _0x2b5177 && _0x2b5177['params'][_0x2b5177['_isServer'] ? 'server_no_context_takeover' : 'client_no_context_takeover'] && (_0x80998a = _0x1782a9['length'] >= _0x2b5177['_threshold']), this['_compress'] = _0x80998a) : (_0x80998a = ![], _0x2a7b80 = 0x0);
                if (_0x561ba0['fin'])
                    this['_firstFragment'] = !![];
                if (_0x2b5177) {
                    const _0x3b530f = {
                        'fin': _0x561ba0['fin'],
                        'rsv1': _0x80998a,
                        'opcode': _0x2a7b80,
                        'mask': _0x561ba0['mask'],
                        'readOnly': _0x23096c['readOnly']
                    };
                    this['_deflating'] ? this['enqueue']([
                        this['dispatch'],
                        _0x1782a9,
                        this['_compress'],
                        _0x3b530f,
                        _0x10428a
                    ]) : this['dispatch'](_0x1782a9, this['_compress'], _0x3b530f, _0x10428a);
                } else
                    this['sendFrame'](_0x6272ce['frame'](_0x1782a9, {
                        'fin': _0x561ba0['fin'],
                        'rsv1': ![],
                        'opcode': _0x2a7b80,
                        'mask': _0x561ba0['mask'],
                        'readOnly': _0x23096c['readOnly']
                    }), _0x10428a);
            }
            ['dispatch'](_0x1f82f5, _0xb53882, _0x1d0b92, _0x12a0b0) {
                if (!_0xb53882) {
                    this['sendFrame'](_0x6272ce['frame'](_0x1f82f5, _0x1d0b92), _0x12a0b0);
                    return;
                }
                const _0x5919e7 = this['_extensions'][_0x31f13f['extensionName']];
                this['_bufferedBytes'] += _0x1f82f5['length'], this['_deflating'] = !![], _0x5919e7['compress'](_0x1f82f5, _0x1d0b92['fin'], (_0x1f4ff4, _0x219e08) => {
                    if (this['_socket']['destroyed']) {
                        const _0xeb9d8e = new Error('The\x20socket\x20was\x20closed\x20while\x20data\x20was\x20being\x20compressed');
                        if (typeof _0x12a0b0 === 'function')
                            _0x12a0b0(_0xeb9d8e);
                        for (let _0x2886d0 = 0x0; _0x2886d0 < this['_queue']['length']; _0x2886d0++) {
                            const _0x4b7732 = this['_queue'][_0x2886d0][0x4];
                            if (typeof _0x4b7732 === 'function')
                                _0x4b7732(_0xeb9d8e);
                        }
                        return;
                    }
                    this['_bufferedBytes'] -= _0x1f82f5['length'], this['_deflating'] = ![], _0x1d0b92['readOnly'] = ![], this['sendFrame'](_0x6272ce['frame'](_0x219e08, _0x1d0b92), _0x12a0b0), this['dequeue']();
                });
            }
            ['dequeue']() {
                while (!this['_deflating'] && this['_queue']['length']) {
                    const _0x170bca = this['_queue']['shift']();
                    this['_bufferedBytes'] -= _0x170bca[0x1]['length'], Reflect['apply'](_0x170bca[0x0], this, _0x170bca['slice'](0x1));
                }
            }
            ['enqueue'](_0x56cf34) {
                this['_bufferedBytes'] += _0x56cf34[0x1]['length'], this['_queue']['push'](_0x56cf34);
            }
            ['sendFrame'](_0x3fd335, _0x3f7591) {
                _0x3fd335['length'] === 0x2 ? (this['_socket']['cork'](), this['_socket']['write'](_0x3fd335[0x0]), this['_socket']['write'](_0x3fd335[0x1], _0x3f7591), this['_socket']['uncork']()) : this['_socket']['write'](_0x3fd335[0x0], _0x3f7591);
            }
        }
        _0x186c62['exports'] = _0x6272ce;
    },
    0x166ed: (_0x2e8b7d, _0x4c04e6, _0x516971) => {
        'use strict';
        const {Duplex: _0x568dbe} = _0x516971(0x31ed);
        function _0x32e71e(_0x2ce331) {
            _0x2ce331['emit']('close');
        }
        function _0x2c3c7c() {
            !this['destroyed'] && this['_writableState']['finished'] && this['destroy']();
        }
        function _0x523927(_0xc07922) {
            this['removeListener']('error', _0x523927), this['destroy'](), this['listenerCount']('error') === 0x0 && this['emit']('error', _0xc07922);
        }
        function _0x4ab268(_0x587eec, _0x241c8e) {
            let _0x833884 = !![], _0x22fdc0 = !![];
            function _0x4e6d65() {
                if (_0x833884)
                    _0x587eec['_socket']['resume']();
            }
            _0x587eec['readyState'] === _0x587eec['CONNECTING'] ? _0x587eec['once']('open', function _0x5970fd() {
                _0x587eec['_receiver']['removeAllListeners']('drain'), _0x587eec['_receiver']['on']('drain', _0x4e6d65);
            }) : (_0x587eec['_receiver']['removeAllListeners']('drain'), _0x587eec['_receiver']['on']('drain', _0x4e6d65));
            const _0x456360 = new _0x568dbe({
                ..._0x241c8e,
                'autoDestroy': ![],
                'emitClose': ![],
                'objectMode': ![],
                'writableObjectMode': ![]
            });
            return _0x587eec['on']('message', function _0x1e1cf3(_0xdf3a25, _0x2b2817) {
                const _0x1176a3 = !_0x2b2817 && _0x456360['_readableState']['objectMode'] ? _0xdf3a25['toString']() : _0xdf3a25;
                !_0x456360['push'](_0x1176a3) && (_0x833884 = ![], _0x587eec['_socket']['pause']());
            }), _0x587eec['once']('error', function _0x258515(_0x164f9a) {
                if (_0x456360['destroyed'])
                    return;
                _0x22fdc0 = ![], _0x456360['destroy'](_0x164f9a);
            }), _0x587eec['once']('close', function _0x48548e() {
                if (_0x456360['destroyed'])
                    return;
                _0x456360['push'](null);
            }), _0x456360['_destroy'] = function (_0xda60a5, _0x5b29bb) {
                if (_0x587eec['readyState'] === _0x587eec['CLOSED']) {
                    _0x5b29bb(_0xda60a5), process['nextTick'](_0x32e71e, _0x456360);
                    return;
                }
                let _0x1e774e = ![];
                _0x587eec['once']('error', function _0x16f2d2(_0x4686b5) {
                    _0x1e774e = !![], _0x5b29bb(_0x4686b5);
                }), _0x587eec['once']('close', function _0x5df51b() {
                    if (!_0x1e774e)
                        _0x5b29bb(_0xda60a5);
                    process['nextTick'](_0x32e71e, _0x456360);
                });
                if (_0x22fdc0)
                    _0x587eec['terminate']();
            }, _0x456360['_final'] = function (_0xc87a2d) {
                if (_0x587eec['readyState'] === _0x587eec['CONNECTING']) {
                    _0x587eec['once']('open', function _0x236fab() {
                        _0x456360['_final'](_0xc87a2d);
                    });
                    return;
                }
                if (_0x587eec['_socket'] === null)
                    return;
                if (_0x587eec['_socket']['_writableState']['finished']) {
                    _0xc87a2d();
                    if (_0x456360['_readableState']['endEmitted'])
                        _0x456360['destroy']();
                } else
                    _0x587eec['_socket']['once']('finish', function _0x478c11() {
                        _0xc87a2d();
                    }), _0x587eec['close']();
            }, _0x456360['_read'] = function () {
                if (_0x587eec['readyState'] === _0x587eec['OPEN'] && !_0x833884) {
                    _0x833884 = !![];
                    if (!_0x587eec['_receiver']['_writableState']['needDrain'])
                        _0x587eec['_socket']['resume']();
                }
            }, _0x456360['_write'] = function (_0x55688f, _0x369721, _0x2db7fc) {
                if (_0x587eec['readyState'] === _0x587eec['CONNECTING']) {
                    _0x587eec['once']('open', function _0x370d94() {
                        _0x456360['_write'](_0x55688f, _0x369721, _0x2db7fc);
                    });
                    return;
                }
                _0x587eec['send'](_0x55688f, _0x2db7fc);
            }, _0x456360['on']('end', _0x2c3c7c), _0x456360['on']('error', _0x523927), _0x456360;
        }
        _0x2e8b7d['exports'] = _0x4ab268;
    },
    0xd3df: (_0xdef74c, _0x2a8675, _0x4bd4c8) => {
        'use strict';
        const {tokenChars: _0x3cc899} = _0x4bd4c8(0x1845);
        function _0x1872f5(_0x229b5b) {
            const _0x90ccd1 = new Set();
            let _0x2e0393 = -0x1, _0x53b82c = -0x1, _0x565895 = 0x0;
            for (_0x565895; _0x565895 < _0x229b5b['length']; _0x565895++) {
                const _0x106bc8 = _0x229b5b['charCodeAt'](_0x565895);
                if (_0x53b82c === -0x1 && _0x3cc899[_0x106bc8] === 0x1) {
                    if (_0x2e0393 === -0x1)
                        _0x2e0393 = _0x565895;
                } else {
                    if (_0x565895 !== 0x0 && (_0x106bc8 === 0x20 || _0x106bc8 === 0x9)) {
                        if (_0x53b82c === -0x1 && _0x2e0393 !== -0x1)
                            _0x53b82c = _0x565895;
                    } else {
                        if (_0x106bc8 === 0x2c) {
                            if (_0x2e0393 === -0x1)
                                throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x565895);
                            if (_0x53b82c === -0x1)
                                _0x53b82c = _0x565895;
                            const _0x35ba = _0x229b5b['slice'](_0x2e0393, _0x53b82c);
                            if (_0x90ccd1['has'](_0x35ba))
                                throw new SyntaxError('The\x20\x22' + _0x35ba + '\x22\x20subprotocol\x20is\x20duplicated');
                            _0x90ccd1['add'](_0x35ba), _0x2e0393 = _0x53b82c = -0x1;
                        } else
                            throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x565895);
                    }
                }
            }
            if (_0x2e0393 === -0x1 || _0x53b82c !== -0x1)
                throw new SyntaxError('Unexpected\x20end\x20of\x20input');
            const _0xdf8783 = _0x229b5b['slice'](_0x2e0393, _0x565895);
            if (_0x90ccd1['has'](_0xdf8783))
                throw new SyntaxError('The\x20\x22' + _0xdf8783 + '\x22\x20subprotocol\x20is\x20duplicated');
            return _0x90ccd1['add'](_0xdf8783), _0x90ccd1;
        }
        _0xdef74c['exports'] = { 'parse': _0x1872f5 };
    },
    0x1845: (_0x1a43aa, _0x17dc27, _0x16277b) => {
        'use strict';
        const _0x3df464 = [
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x1,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x0,
            0x1,
            0x1,
            0x0,
            0x1,
            0x1,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x0,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x1,
            0x0,
            0x1,
            0x0
        ];
        function _0x4ac5a9(_0x1dc33d) {
            return _0x1dc33d >= 0x3e8 && _0x1dc33d <= 0x3f6 && _0x1dc33d !== 0x3ec && _0x1dc33d !== 0x3ed && _0x1dc33d !== 0x3ee || _0x1dc33d >= 0xbb8 && _0x1dc33d <= 0x1387;
        }
        function _0x54d1c7(_0x20ac05) {
            const _0x425204 = _0x20ac05['length'];
            let _0x2cce7c = 0x0;
            while (_0x2cce7c < _0x425204) {
                if ((_0x20ac05[_0x2cce7c] & 0x80) === 0x0)
                    _0x2cce7c++;
                else {
                    if ((_0x20ac05[_0x2cce7c] & 0xe0) === 0xc0) {
                        if (_0x2cce7c + 0x1 === _0x425204 || (_0x20ac05[_0x2cce7c + 0x1] & 0xc0) !== 0x80 || (_0x20ac05[_0x2cce7c] & 0xfe) === 0xc0)
                            return ![];
                        _0x2cce7c += 0x2;
                    } else {
                        if ((_0x20ac05[_0x2cce7c] & 0xf0) === 0xe0) {
                            if (_0x2cce7c + 0x2 >= _0x425204 || (_0x20ac05[_0x2cce7c + 0x1] & 0xc0) !== 0x80 || (_0x20ac05[_0x2cce7c + 0x2] & 0xc0) !== 0x80 || _0x20ac05[_0x2cce7c] === 0xe0 && (_0x20ac05[_0x2cce7c + 0x1] & 0xe0) === 0x80 || _0x20ac05[_0x2cce7c] === 0xed && (_0x20ac05[_0x2cce7c + 0x1] & 0xe0) === 0xa0)
                                return ![];
                            _0x2cce7c += 0x3;
                        } else {
                            if ((_0x20ac05[_0x2cce7c] & 0xf8) === 0xf0) {
                                if (_0x2cce7c + 0x3 >= _0x425204 || (_0x20ac05[_0x2cce7c + 0x1] & 0xc0) !== 0x80 || (_0x20ac05[_0x2cce7c + 0x2] & 0xc0) !== 0x80 || (_0x20ac05[_0x2cce7c + 0x3] & 0xc0) !== 0x80 || _0x20ac05[_0x2cce7c] === 0xf0 && (_0x20ac05[_0x2cce7c + 0x1] & 0xf0) === 0x80 || _0x20ac05[_0x2cce7c] === 0xf4 && _0x20ac05[_0x2cce7c + 0x1] > 0x8f || _0x20ac05[_0x2cce7c] > 0xf4)
                                    return ![];
                                _0x2cce7c += 0x4;
                            } else
                                return ![];
                        }
                    }
                }
            }
            return !![];
        }
        try {
            const _0x338e58 = _0x16277b(0xf6df);
            _0x1a43aa['exports'] = {
                'isValidStatusCode': _0x4ac5a9,
                'isValidUTF8'(_0xaba404) {
                    return _0xaba404['length'] < 0x96 ? _0x54d1c7(_0xaba404) : _0x338e58(_0xaba404);
                },
                'tokenChars': _0x3df464
            };
        } catch (_0x319c08) {
            _0x1a43aa['exports'] = {
                'isValidStatusCode': _0x4ac5a9,
                'isValidUTF8': _0x54d1c7,
                'tokenChars': _0x3df464
            };
        }
    },
    0xd5e0: (_0x166560, _0x125251, _0x4d0832) => {
        'use strict';
        const _0x1a2c97 = _0x4d0832(0x141b9), _0x4be90b = _0x4d0832(0x3575), _0x537306 = _0x4d0832(0x175c7), _0x4785c7 = _0x4d0832(0xa350), _0xcfddcf = _0x4d0832(0x5f54), {createHash: _0x5921e0} = _0x4d0832(0x17e1), _0x1f4ad6 = _0x4d0832(0x11319), _0x1d1b28 = _0x4d0832(0x9141), _0x1d6c11 = _0x4d0832(0xd3df), _0x2edc86 = _0x4d0832(0x1088f), {
                GUID: _0x4e8415,
                kWebSocket: _0x2f3b58
            } = _0x4d0832(0x9d6d), _0x10700 = /^[+/0-9A-Za-z]{22}==$/, _0x39bf67 = 0x0, _0x323a38 = 0x1, _0x2206e2 = 0x2;
        class _0x25e21c extends _0x1a2c97 {
            constructor(_0x42d3ea, _0x48f220) {
                super(), _0x42d3ea = {
                    'maxPayload': 0x64 * 0x400 * 0x400,
                    'skipUTF8Validation': ![],
                    'perMessageDeflate': ![],
                    'handleProtocols': null,
                    'clientTracking': !![],
                    'verifyClient': null,
                    'noServer': ![],
                    'backlog': null,
                    'server': null,
                    'host': null,
                    'path': null,
                    'port': null,
                    ..._0x42d3ea
                };
                if (_0x42d3ea['port'] == null && !_0x42d3ea['server'] && !_0x42d3ea['noServer'] || _0x42d3ea['port'] != null && (_0x42d3ea['server'] || _0x42d3ea['noServer']) || _0x42d3ea['server'] && _0x42d3ea['noServer'])
                    throw new TypeError('One\x20and\x20only\x20one\x20of\x20the\x20\x22port\x22,\x20\x22server\x22,\x20or\x20\x22noServer\x22\x20options\x20' + 'must\x20be\x20specified');
                if (_0x42d3ea['port'] != null)
                    this['_server'] = _0x4be90b['createServer']((_0x2a4606, _0x4cb462) => {
                        const _0x4e95fc = _0x4be90b['STATUS_CODES'][0x1aa];
                        _0x4cb462['writeHead'](0x1aa, {
                            'Content-Length': _0x4e95fc['length'],
                            'Content-Type': 'text/plain'
                        }), _0x4cb462['end'](_0x4e95fc);
                    }), this['_server']['listen'](_0x42d3ea['port'], _0x42d3ea['host'], _0x42d3ea['backlog'], _0x48f220);
                else
                    _0x42d3ea['server'] && (this['_server'] = _0x42d3ea['server']);
                if (this['_server']) {
                    const _0x49645a = this['emit']['bind'](this, 'connection');
                    this['_removeListeners'] = _0x2bf821(this['_server'], {
                        'listening': this['emit']['bind'](this, 'listening'),
                        'error': this['emit']['bind'](this, 'error'),
                        'upgrade': (_0x30c22b, _0x34db58, _0xfacb6d) => {
                            this['handleUpgrade'](_0x30c22b, _0x34db58, _0xfacb6d, _0x49645a);
                        }
                    });
                }
                if (_0x42d3ea['perMessageDeflate'] === !![])
                    _0x42d3ea['perMessageDeflate'] = {};
                _0x42d3ea['clientTracking'] && (this['clients'] = new Set(), this['_shouldEmitClose'] = ![]), this['options'] = _0x42d3ea, this['_state'] = _0x39bf67;
            }
            ['address']() {
                if (this['options']['noServer'])
                    throw new Error('The\x20server\x20is\x20operating\x20in\x20\x22noServer\x22\x20mode');
                if (!this['_server'])
                    return null;
                return this['_server']['address']();
            }
            ['close'](_0xf215e7) {
                if (this['_state'] === _0x2206e2) {
                    _0xf215e7 && this['once']('close', () => {
                        _0xf215e7(new Error('The\x20server\x20is\x20not\x20running'));
                    });
                    process['nextTick'](_0x31f271, this);
                    return;
                }
                if (_0xf215e7)
                    this['once']('close', _0xf215e7);
                if (this['_state'] === _0x323a38)
                    return;
                this['_state'] = _0x323a38;
                if (this['options']['noServer'] || this['options']['server'])
                    this['_server'] && (this['_removeListeners'](), this['_removeListeners'] = this['_server'] = null), this['clients'] ? !this['clients']['size'] ? process['nextTick'](_0x31f271, this) : this['_shouldEmitClose'] = !![] : process['nextTick'](_0x31f271, this);
                else {
                    const _0x3badae = this['_server'];
                    this['_removeListeners'](), this['_removeListeners'] = this['_server'] = null, _0x3badae['close'](() => {
                        _0x31f271(this);
                    });
                }
            }
            ['shouldHandle'](_0x2d134f) {
                if (this['options']['path']) {
                    const _0x2f467a = _0x2d134f['url']['indexOf']('?'), _0x2dcd01 = _0x2f467a !== -0x1 ? _0x2d134f['url']['slice'](0x0, _0x2f467a) : _0x2d134f['url'];
                    if (_0x2dcd01 !== this['options']['path'])
                        return ![];
                }
                return !![];
            }
            ['handleUpgrade'](_0xca22b8, _0x5bf171, _0x2806d6, _0x4cec56) {
                _0x5bf171['on']('error', _0x4c9d6c);
                const _0x25d078 = _0xca22b8['headers']['sec-websocket-key'] !== undefined ? _0xca22b8['headers']['sec-websocket-key'] : ![], _0x1718de = +_0xca22b8['headers']['sec-websocket-version'];
                if (_0xca22b8['method'] !== 'GET' || _0xca22b8['headers']['upgrade']['toLowerCase']() !== 'websocket' || !_0x25d078 || !_0x10700['test'](_0x25d078) || _0x1718de !== 0x8 && _0x1718de !== 0xd || !this['shouldHandle'](_0xca22b8))
                    return _0x42ac69(_0x5bf171, 0x190);
                const _0x1243ae = _0xca22b8['headers']['sec-websocket-protocol'];
                let _0x4b7313 = new Set();
                if (_0x1243ae !== undefined)
                    try {
                        _0x4b7313 = _0x1d6c11['parse'](_0x1243ae);
                    } catch (_0x4156b1) {
                        return _0x42ac69(_0x5bf171, 0x190);
                    }
                const _0x315fea = _0xca22b8['headers']['sec-websocket-extensions'], _0x12e6d8 = {};
                if (this['options']['perMessageDeflate'] && _0x315fea !== undefined) {
                    const _0x216654 = new _0x1d1b28(this['options']['perMessageDeflate'], !![], this['options']['maxPayload']);
                    try {
                        const _0xc6e6de = _0x1f4ad6['parse'](_0x315fea);
                        _0xc6e6de[_0x1d1b28['extensionName']] && (_0x216654['accept'](_0xc6e6de[_0x1d1b28['extensionName']]), _0x12e6d8[_0x1d1b28['extensionName']] = _0x216654);
                    } catch (_0x4282b2) {
                        return _0x42ac69(_0x5bf171, 0x190);
                    }
                }
                if (this['options']['verifyClient']) {
                    const _0x515dc5 = {
                        'origin': _0xca22b8['headers']['' + (_0x1718de === 0x8 ? 'sec-websocket-origin' : 'origin')],
                        'secure': !!(_0xca22b8['socket']['authorized'] || _0xca22b8['socket']['encrypted']),
                        'req': _0xca22b8
                    };
                    if (this['options']['verifyClient']['length'] === 0x2) {
                        this['options']['verifyClient'](_0x515dc5, (_0x23f435, _0x5d479b, _0x508410, _0x166dad) => {
                            if (!_0x23f435)
                                return _0x42ac69(_0x5bf171, _0x5d479b || 0x191, _0x508410, _0x166dad);
                            this['completeUpgrade'](_0x12e6d8, _0x25d078, _0x4b7313, _0xca22b8, _0x5bf171, _0x2806d6, _0x4cec56);
                        });
                        return;
                    }
                    if (!this['options']['verifyClient'](_0x515dc5))
                        return _0x42ac69(_0x5bf171, 0x191);
                }
                this['completeUpgrade'](_0x12e6d8, _0x25d078, _0x4b7313, _0xca22b8, _0x5bf171, _0x2806d6, _0x4cec56);
            }
            ['completeUpgrade'](_0x31636d, _0x1e1307, _0x46afe5, _0x4546fd, _0x17ce7a, _0x45e3b2, _0x12efef) {
                if (!_0x17ce7a['readable'] || !_0x17ce7a['writable'])
                    return _0x17ce7a['destroy']();
                if (_0x17ce7a[_0x2f3b58])
                    throw new Error('server.handleUpgrade()\x20was\x20called\x20more\x20than\x20once\x20with\x20the\x20same\x20' + 'socket,\x20possibly\x20due\x20to\x20a\x20misconfiguration');
                if (this['_state'] > _0x39bf67)
                    return _0x42ac69(_0x17ce7a, 0x1f7);
                const _0x12d956 = _0x5921e0('sha1')['update'](_0x1e1307 + _0x4e8415)['digest']('base64'), _0x2c9ee6 = [
                        'HTTP/1.1\x20101\x20Switching\x20Protocols',
                        'Upgrade:\x20websocket',
                        'Connection:\x20Upgrade',
                        'Sec-WebSocket-Accept:\x20' + _0x12d956
                    ], _0x44c967 = new _0x2edc86(null);
                if (_0x46afe5['size']) {
                    const _0x43ac7f = this['options']['handleProtocols'] ? this['options']['handleProtocols'](_0x46afe5, _0x4546fd) : _0x46afe5['values']()['next']()['value'];
                    _0x43ac7f && (_0x2c9ee6['push']('Sec-WebSocket-Protocol:\x20' + _0x43ac7f), _0x44c967['_protocol'] = _0x43ac7f);
                }
                if (_0x31636d[_0x1d1b28['extensionName']]) {
                    const _0x30c58c = _0x31636d[_0x1d1b28['extensionName']]['params'], _0x2f348c = _0x1f4ad6['format']({ [_0x1d1b28['extensionName']]: [_0x30c58c] });
                    _0x2c9ee6['push']('Sec-WebSocket-Extensions:\x20' + _0x2f348c), _0x44c967['_extensions'] = _0x31636d;
                }
                this['emit']('headers', _0x2c9ee6, _0x4546fd), _0x17ce7a['write'](_0x2c9ee6['concat']('\x0d\x0a')['join']('\x0d\x0a')), _0x17ce7a['removeListener']('error', _0x4c9d6c), _0x44c967['setSocket'](_0x17ce7a, _0x45e3b2, {
                    'maxPayload': this['options']['maxPayload'],
                    'skipUTF8Validation': this['options']['skipUTF8Validation']
                }), this['clients'] && (this['clients']['add'](_0x44c967), _0x44c967['on']('close', () => {
                    this['clients']['delete'](_0x44c967), this['_shouldEmitClose'] && !this['clients']['size'] && process['nextTick'](_0x31f271, this);
                })), _0x12efef(_0x44c967, _0x4546fd);
            }
        }
        _0x166560['exports'] = _0x25e21c;
        function _0x2bf821(_0x24ef39, _0x3302d5) {
            for (const _0x3e9f0d of Object['keys'](_0x3302d5))
                _0x24ef39['on'](_0x3e9f0d, _0x3302d5[_0x3e9f0d]);
            return function _0x4dac6e() {
                for (const _0x409375 of Object['keys'](_0x3302d5)) {
                    _0x24ef39['removeListener'](_0x409375, _0x3302d5[_0x409375]);
                }
            };
        }
        function _0x31f271(_0x7b9835) {
            _0x7b9835['_state'] = _0x2206e2, _0x7b9835['emit']('close');
        }
        function _0x4c9d6c() {
            this['destroy']();
        }
        function _0x42ac69(_0x3e4b9b, _0x422c29, _0x92b65e, _0x9474e2) {
            _0x3e4b9b['writable'] && (_0x92b65e = _0x92b65e || _0x4be90b['STATUS_CODES'][_0x422c29], _0x9474e2 = {
                'Connection': 'close',
                'Content-Type': 'text/html',
                'Content-Length': Buffer['byteLength'](_0x92b65e),
                ..._0x9474e2
            }, _0x3e4b9b['write']('HTTP/1.1\x20' + _0x422c29 + '\x20' + _0x4be90b['STATUS_CODES'][_0x422c29] + '\x0d\x0a' + Object['keys'](_0x9474e2)['map'](_0x325024 => _0x325024 + ':\x20' + _0x9474e2[_0x325024])['join']('\x0d\x0a') + '\x0d\x0a\x0d\x0a' + _0x92b65e)), _0x3e4b9b['removeListener']('error', _0x4c9d6c), _0x3e4b9b['destroy']();
        }
    },
    0x1088f: (_0x289b68, _0x290e46, _0x5aec1c) => {
        'use strict';
        const _0x3e3e16 = _0x5aec1c(0x141b9), _0x7054a6 = _0x5aec1c(0x175c7), _0x3d491 = _0x5aec1c(0x3575), _0x320ce7 = _0x5aec1c(0xa350), _0x540d18 = _0x5aec1c(0x5f54), {
                randomBytes: _0x4fe20a,
                createHash: _0x49d7a3
            } = _0x5aec1c(0x17e1), {Readable: _0x187f16} = _0x5aec1c(0x31ed), {URL: _0x341dac} = _0x5aec1c(0xdfde), _0x437bc2 = _0x5aec1c(0x9141), _0x23e4a4 = _0x5aec1c(0xf0a3), _0x582a37 = _0x5aec1c(0x11ed9), {
                BINARY_TYPES: _0x11e28a,
                EMPTY_BUFFER: _0x2c91fc,
                GUID: _0xbf0ffd,
                kForOnEventAttribute: _0x148e67,
                kListener: _0x200914,
                kStatusCode: _0x1da929,
                kWebSocket: _0x578793,
                NOOP: _0x1d6ae9
            } = _0x5aec1c(0x9d6d), {
                EventTarget: {
                    addEventListener: _0x15d19b,
                    removeEventListener: _0x16306e
                }
            } = _0x5aec1c(0x9695), {
                format: _0x323653,
                parse: _0x380a88
            } = _0x5aec1c(0x11319), {toBuffer: _0x3e2585} = _0x5aec1c(0x1206a), _0x3612e1 = [
                'CONNECTING',
                'OPEN',
                'CLOSING',
                'CLOSED'
            ], _0x2f8776 = /^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/, _0x303d6b = [
                0x8,
                0xd
            ], _0x16e12a = 0x1e * 0x3e8;
        class _0x3b01cc extends _0x3e3e16 {
            constructor(_0x1ba058, _0x26759d, _0x3e961a) {
                super(), this['_binaryType'] = _0x11e28a[0x0], this['_closeCode'] = 0x3ee, this['_closeFrameReceived'] = ![], this['_closeFrameSent'] = ![], this['_closeMessage'] = _0x2c91fc, this['_closeTimer'] = null, this['_extensions'] = {}, this['_protocol'] = '', this['_readyState'] = _0x3b01cc['CONNECTING'], this['_receiver'] = null, this['_sender'] = null, this['_socket'] = null;
                if (_0x1ba058 !== null) {
                    this['_bufferedAmount'] = 0x0, this['_isServer'] = ![], this['_redirects'] = 0x0;
                    if (_0x26759d === undefined)
                        _0x26759d = [];
                    else
                        !Array['isArray'](_0x26759d) && (typeof _0x26759d === 'object' && _0x26759d !== null ? (_0x3e961a = _0x26759d, _0x26759d = []) : _0x26759d = [_0x26759d]);
                    _0x2475c7(this, _0x1ba058, _0x26759d, _0x3e961a);
                } else
                    this['_isServer'] = !![];
            }
            get ['binaryType']() {
                return this['_binaryType'];
            }
            set ['binaryType'](_0x2fccd5) {
                if (!_0x11e28a['includes'](_0x2fccd5))
                    return;
                this['_binaryType'] = _0x2fccd5;
                if (this['_receiver'])
                    this['_receiver']['_binaryType'] = _0x2fccd5;
            }
            get ['bufferedAmount']() {
                if (!this['_socket'])
                    return this['_bufferedAmount'];
                return this['_socket']['_writableState']['length'] + this['_sender']['_bufferedBytes'];
            }
            get ['extensions']() {
                return Object['keys'](this['_extensions'])['join']();
            }
            get ['onclose']() {
                return null;
            }
            get ['onerror']() {
                return null;
            }
            get ['onopen']() {
                return null;
            }
            get ['onmessage']() {
                return null;
            }
            get ['protocol']() {
                return this['_protocol'];
            }
            get ['readyState']() {
                return this['_readyState'];
            }
            get ['url']() {
                return this['_url'];
            }
            ['setSocket'](_0x5ae6b4, _0x1f88ae, _0x4dbb61) {
                const _0x2dbe09 = new _0x23e4a4({
                    'binaryType': this['binaryType'],
                    'extensions': this['_extensions'],
                    'isServer': this['_isServer'],
                    'maxPayload': _0x4dbb61['maxPayload'],
                    'skipUTF8Validation': _0x4dbb61['skipUTF8Validation']
                });
                this['_sender'] = new _0x582a37(_0x5ae6b4, this['_extensions']), this['_receiver'] = _0x2dbe09, this['_socket'] = _0x5ae6b4, _0x2dbe09[_0x578793] = this, _0x5ae6b4[_0x578793] = this, _0x2dbe09['on']('conclude', _0x54ad89), _0x2dbe09['on']('drain', _0x3be08b), _0x2dbe09['on']('error', _0x1325ad), _0x2dbe09['on']('message', _0x42e18b), _0x2dbe09['on']('ping', _0x305bc1), _0x2dbe09['on']('pong', _0x179338), _0x5ae6b4['setTimeout'](0x0), _0x5ae6b4['setNoDelay']();
                if (_0x1f88ae['length'] > 0x0)
                    _0x5ae6b4['unshift'](_0x1f88ae);
                _0x5ae6b4['on']('close', _0x4ef71c), _0x5ae6b4['on']('data', _0x35da55), _0x5ae6b4['on']('end', _0x328821), _0x5ae6b4['on']('error', _0x622d0f), this['_readyState'] = _0x3b01cc['OPEN'], this['emit']('open');
            }
            ['emitClose']() {
                if (!this['_socket']) {
                    this['_readyState'] = _0x3b01cc['CLOSED'], this['emit']('close', this['_closeCode'], this['_closeMessage']);
                    return;
                }
                this['_extensions'][_0x437bc2['extensionName']] && this['_extensions'][_0x437bc2['extensionName']]['cleanup'](), this['_receiver']['removeAllListeners'](), this['_readyState'] = _0x3b01cc['CLOSED'], this['emit']('close', this['_closeCode'], this['_closeMessage']);
            }
            ['close'](_0x571b22, _0x144892) {
                if (this['readyState'] === _0x3b01cc['CLOSED'])
                    return;
                if (this['readyState'] === _0x3b01cc['CONNECTING']) {
                    const _0xf7b02d = 'WebSocket\x20was\x20closed\x20before\x20the\x20connection\x20was\x20established';
                    return _0x45e2c7(this, this['_req'], _0xf7b02d);
                }
                if (this['readyState'] === _0x3b01cc['CLOSING']) {
                    this['_closeFrameSent'] && (this['_closeFrameReceived'] || this['_receiver']['_writableState']['errorEmitted']) && this['_socket']['end']();
                    return;
                }
                this['_readyState'] = _0x3b01cc['CLOSING'], this['_sender']['close'](_0x571b22, _0x144892, !this['_isServer'], _0x53c5c7 => {
                    if (_0x53c5c7)
                        return;
                    this['_closeFrameSent'] = !![], (this['_closeFrameReceived'] || this['_receiver']['_writableState']['errorEmitted']) && this['_socket']['end']();
                }), this['_closeTimer'] = setTimeout(this['_socket']['destroy']['bind'](this['_socket']), _0x16e12a);
            }
            ['ping'](_0x2c8d80, _0x32e2d2, _0x573c78) {
                if (this['readyState'] === _0x3b01cc['CONNECTING'])
                    throw new Error('WebSocket\x20is\x20not\x20open:\x20readyState\x200\x20(CONNECTING)');
                if (typeof _0x2c8d80 === 'function')
                    _0x573c78 = _0x2c8d80, _0x2c8d80 = _0x32e2d2 = undefined;
                else
                    typeof _0x32e2d2 === 'function' && (_0x573c78 = _0x32e2d2, _0x32e2d2 = undefined);
                if (typeof _0x2c8d80 === 'number')
                    _0x2c8d80 = _0x2c8d80['toString']();
                if (this['readyState'] !== _0x3b01cc['OPEN']) {
                    _0x2173ff(this, _0x2c8d80, _0x573c78);
                    return;
                }
                if (_0x32e2d2 === undefined)
                    _0x32e2d2 = !this['_isServer'];
                this['_sender']['ping'](_0x2c8d80 || _0x2c91fc, _0x32e2d2, _0x573c78);
            }
            ['pong'](_0x39ad55, _0x1c7934, _0x1be5f2) {
                if (this['readyState'] === _0x3b01cc['CONNECTING'])
                    throw new Error('WebSocket\x20is\x20not\x20open:\x20readyState\x200\x20(CONNECTING)');
                if (typeof _0x39ad55 === 'function')
                    _0x1be5f2 = _0x39ad55, _0x39ad55 = _0x1c7934 = undefined;
                else
                    typeof _0x1c7934 === 'function' && (_0x1be5f2 = _0x1c7934, _0x1c7934 = undefined);
                if (typeof _0x39ad55 === 'number')
                    _0x39ad55 = _0x39ad55['toString']();
                if (this['readyState'] !== _0x3b01cc['OPEN']) {
                    _0x2173ff(this, _0x39ad55, _0x1be5f2);
                    return;
                }
                if (_0x1c7934 === undefined)
                    _0x1c7934 = !this['_isServer'];
                this['_sender']['pong'](_0x39ad55 || _0x2c91fc, _0x1c7934, _0x1be5f2);
            }
            ['send'](_0x4f06af, _0x3e1b44, _0x1ed391) {
                if (this['readyState'] === _0x3b01cc['CONNECTING'])
                    throw new Error('WebSocket\x20is\x20not\x20open:\x20readyState\x200\x20(CONNECTING)');
                typeof _0x3e1b44 === 'function' && (_0x1ed391 = _0x3e1b44, _0x3e1b44 = {});
                if (typeof _0x4f06af === 'number')
                    _0x4f06af = _0x4f06af['toString']();
                if (this['readyState'] !== _0x3b01cc['OPEN']) {
                    _0x2173ff(this, _0x4f06af, _0x1ed391);
                    return;
                }
                const _0x236c7c = {
                    'binary': typeof _0x4f06af !== 'string',
                    'mask': !this['_isServer'],
                    'compress': !![],
                    'fin': !![],
                    ..._0x3e1b44
                };
                !this['_extensions'][_0x437bc2['extensionName']] && (_0x236c7c['compress'] = ![]), this['_sender']['send'](_0x4f06af || _0x2c91fc, _0x236c7c, _0x1ed391);
            }
            ['terminate']() {
                if (this['readyState'] === _0x3b01cc['CLOSED'])
                    return;
                if (this['readyState'] === _0x3b01cc['CONNECTING']) {
                    const _0x2713e9 = 'WebSocket\x20was\x20closed\x20before\x20the\x20connection\x20was\x20established';
                    return _0x45e2c7(this, this['_req'], _0x2713e9);
                }
                this['_socket'] && (this['_readyState'] = _0x3b01cc['CLOSING'], this['_socket']['destroy']());
            }
        }
        Object['defineProperty'](_0x3b01cc, 'CONNECTING', {
            'enumerable': !![],
            'value': _0x3612e1['indexOf']('CONNECTING')
        }), Object['defineProperty'](_0x3b01cc['prototype'], 'CONNECTING', {
            'enumerable': !![],
            'value': _0x3612e1['indexOf']('CONNECTING')
        }), Object['defineProperty'](_0x3b01cc, 'OPEN', {
            'enumerable': !![],
            'value': _0x3612e1['indexOf']('OPEN')
        }), Object['defineProperty'](_0x3b01cc['prototype'], 'OPEN', {
            'enumerable': !![],
            'value': _0x3612e1['indexOf']('OPEN')
        }), Object['defineProperty'](_0x3b01cc, 'CLOSING', {
            'enumerable': !![],
            'value': _0x3612e1['indexOf']('CLOSING')
        }), Object['defineProperty'](_0x3b01cc['prototype'], 'CLOSING', {
            'enumerable': !![],
            'value': _0x3612e1['indexOf']('CLOSING')
        }), Object['defineProperty'](_0x3b01cc, 'CLOSED', {
            'enumerable': !![],
            'value': _0x3612e1['indexOf']('CLOSED')
        }), Object['defineProperty'](_0x3b01cc['prototype'], 'CLOSED', {
            'enumerable': !![],
            'value': _0x3612e1['indexOf']('CLOSED')
        }), [
            'binaryType',
            'bufferedAmount',
            'extensions',
            'protocol',
            'readyState',
            'url'
        ]['forEach'](_0x3d23c4 => {
            Object['defineProperty'](_0x3b01cc['prototype'], _0x3d23c4, { 'enumerable': !![] });
        }), [
            'open',
            'error',
            'close',
            'message'
        ]['forEach'](_0x36a82b => {
            Object['defineProperty'](_0x3b01cc['prototype'], 'on' + _0x36a82b, {
                'enumerable': !![],
                'get'() {
                    for (const _0x3b940e of this['listeners'](_0x36a82b)) {
                        if (_0x3b940e[_0x148e67])
                            return _0x3b940e[_0x200914];
                    }
                    return null;
                },
                'set'(_0x598a69) {
                    for (const _0x51d23 of this['listeners'](_0x36a82b)) {
                        if (_0x51d23[_0x148e67]) {
                            this['removeListener'](_0x36a82b, _0x51d23);
                            break;
                        }
                    }
                    if (typeof _0x598a69 !== 'function')
                        return;
                    this['addEventListener'](_0x36a82b, _0x598a69, { [_0x148e67]: !![] });
                }
            });
        }), _0x3b01cc['prototype']['addEventListener'] = _0x15d19b, _0x3b01cc['prototype']['removeEventListener'] = _0x16306e, _0x289b68['exports'] = _0x3b01cc;
        function _0x2475c7(_0x2db6d1, _0x3971d9, _0x4c26ab, _0x3763ba) {
            const _0x46192f = {
                'protocolVersion': _0x303d6b[0x1],
                'maxPayload': 0x64 * 0x400 * 0x400,
                'skipUTF8Validation': ![],
                'perMessageDeflate': !![],
                'followRedirects': ![],
                'maxRedirects': 0xa,
                ..._0x3763ba,
                'createConnection': undefined,
                'socketPath': undefined,
                'hostname': undefined,
                'protocol': undefined,
                'timeout': undefined,
                'method': undefined,
                'host': undefined,
                'path': undefined,
                'port': undefined
            };
            if (!_0x303d6b['includes'](_0x46192f['protocolVersion']))
                throw new RangeError('Unsupported\x20protocol\x20version:\x20' + _0x46192f['protocolVersion'] + '\x20' + ('(supported\x20versions:\x20' + _0x303d6b['join'](',\x20') + ')'));
            let _0x502847;
            if (_0x3971d9 instanceof _0x341dac)
                _0x502847 = _0x3971d9, _0x2db6d1['_url'] = _0x3971d9['href'];
            else {
                try {
                    _0x502847 = new _0x341dac(_0x3971d9);
                } catch (_0x49bcb0) {
                    throw new SyntaxError('Invalid\x20URL:\x20' + _0x3971d9);
                }
                _0x2db6d1['_url'] = _0x3971d9;
            }
            const _0x1928b9 = _0x502847['protocol'] === 'wss:', _0x38fbc5 = _0x502847['protocol'] === 'ws+unix:';
            if (_0x502847['protocol'] !== 'ws:' && !_0x1928b9 && !_0x38fbc5)
                throw new SyntaxError('The\x20URL\x27s\x20protocol\x20must\x20be\x20one\x20of\x20\x22ws:\x22,\x20\x22wss:\x22,\x20or\x20\x22ws+unix:\x22');
            if (_0x38fbc5 && !_0x502847['pathname'])
                throw new SyntaxError('The\x20URL\x27s\x20pathname\x20is\x20empty');
            if (_0x502847['hash'])
                throw new SyntaxError('The\x20URL\x20contains\x20a\x20fragment\x20identifier');
            const _0x5c90d6 = _0x1928b9 ? 0x1bb : 0x50, _0x41d338 = _0x4fe20a(0x10)['toString']('base64'), _0x57cad7 = _0x1928b9 ? _0x7054a6['get'] : _0x3d491['get'], _0x4002a5 = new Set();
            let _0x5c9f44;
            _0x46192f['createConnection'] = _0x1928b9 ? _0x4d77d8 : _0xdd2e79, _0x46192f['defaultPort'] = _0x46192f['defaultPort'] || _0x5c90d6, _0x46192f['port'] = _0x502847['port'] || _0x5c90d6, _0x46192f['host'] = _0x502847['hostname']['startsWith']('[') ? _0x502847['hostname']['slice'](0x1, -0x1) : _0x502847['hostname'], _0x46192f['headers'] = {
                'Sec-WebSocket-Version': _0x46192f['protocolVersion'],
                'Sec-WebSocket-Key': _0x41d338,
                'Connection': 'Upgrade',
                'Upgrade': 'websocket',
                ..._0x46192f['headers']
            }, _0x46192f['path'] = _0x502847['pathname'] + _0x502847['search'], _0x46192f['timeout'] = _0x46192f['handshakeTimeout'];
            _0x46192f['perMessageDeflate'] && (_0x5c9f44 = new _0x437bc2(_0x46192f['perMessageDeflate'] !== !![] ? _0x46192f['perMessageDeflate'] : {}, ![], _0x46192f['maxPayload']), _0x46192f['headers']['Sec-WebSocket-Extensions'] = _0x323653({ [_0x437bc2['extensionName']]: _0x5c9f44['offer']() }));
            if (_0x4c26ab['length']) {
                for (const _0x29db5e of _0x4c26ab) {
                    if (typeof _0x29db5e !== 'string' || !_0x2f8776['test'](_0x29db5e) || _0x4002a5['has'](_0x29db5e))
                        throw new SyntaxError('An\x20invalid\x20or\x20duplicated\x20subprotocol\x20was\x20specified');
                    _0x4002a5['add'](_0x29db5e);
                }
                _0x46192f['headers']['Sec-WebSocket-Protocol'] = _0x4c26ab['join'](',');
            }
            _0x46192f['origin'] && (_0x46192f['protocolVersion'] < 0xd ? _0x46192f['headers']['Sec-WebSocket-Origin'] = _0x46192f['origin'] : _0x46192f['headers']['Origin'] = _0x46192f['origin']);
            (_0x502847['username'] || _0x502847['password']) && (_0x46192f['auth'] = _0x502847['username'] + ':' + _0x502847['password']);
            if (_0x38fbc5) {
                const _0x41439e = _0x46192f['path']['split'](':');
                _0x46192f['socketPath'] = _0x41439e[0x0], _0x46192f['path'] = _0x41439e[0x1];
            }
            let _0x559598 = _0x2db6d1['_req'] = _0x57cad7(_0x46192f);
            _0x46192f['timeout'] && _0x559598['on']('timeout', () => {
                _0x45e2c7(_0x2db6d1, _0x559598, 'Opening\x20handshake\x20has\x20timed\x20out');
            }), _0x559598['on']('error', _0x52d973 => {
                if (_0x559598 === null || _0x559598['aborted'])
                    return;
                _0x559598 = _0x2db6d1['_req'] = null, _0x2db6d1['_readyState'] = _0x3b01cc['CLOSING'], _0x2db6d1['emit']('error', _0x52d973), _0x2db6d1['emitClose']();
            }), _0x559598['on']('response', _0x57acfc => {
                const _0x345ba7 = _0x57acfc['headers']['location'], _0x35328e = _0x57acfc['statusCode'];
                if (_0x345ba7 && _0x46192f['followRedirects'] && _0x35328e >= 0x12c && _0x35328e < 0x190) {
                    if (++_0x2db6d1['_redirects'] > _0x46192f['maxRedirects']) {
                        _0x45e2c7(_0x2db6d1, _0x559598, 'Maximum\x20redirects\x20exceeded');
                        return;
                    }
                    _0x559598['abort']();
                    const _0xc7aa16 = new _0x341dac(_0x345ba7, _0x3971d9);
                    _0x2475c7(_0x2db6d1, _0xc7aa16, _0x4c26ab, _0x3763ba);
                } else
                    !_0x2db6d1['emit']('unexpected-response', _0x559598, _0x57acfc) && _0x45e2c7(_0x2db6d1, _0x559598, 'Unexpected\x20server\x20response:\x20' + _0x57acfc['statusCode']);
            }), _0x559598['on']('upgrade', (_0x338e6d, _0x37aa93, _0x20e3f3) => {
                _0x2db6d1['emit']('upgrade', _0x338e6d);
                if (_0x2db6d1['readyState'] !== _0x3b01cc['CONNECTING'])
                    return;
                _0x559598 = _0x2db6d1['_req'] = null;
                const _0x18c7e4 = _0x49d7a3('sha1')['update'](_0x41d338 + _0xbf0ffd)['digest']('base64');
                if (_0x338e6d['headers']['sec-websocket-accept'] !== _0x18c7e4) {
                    _0x45e2c7(_0x2db6d1, _0x37aa93, 'Invalid\x20Sec-WebSocket-Accept\x20header');
                    return;
                }
                const _0x38c607 = _0x338e6d['headers']['sec-websocket-protocol'];
                let _0xf8a3f2;
                if (_0x38c607 !== undefined) {
                    if (!_0x4002a5['size'])
                        _0xf8a3f2 = 'Server\x20sent\x20a\x20subprotocol\x20but\x20none\x20was\x20requested';
                    else
                        !_0x4002a5['has'](_0x38c607) && (_0xf8a3f2 = 'Server\x20sent\x20an\x20invalid\x20subprotocol');
                } else
                    _0x4002a5['size'] && (_0xf8a3f2 = 'Server\x20sent\x20no\x20subprotocol');
                if (_0xf8a3f2) {
                    _0x45e2c7(_0x2db6d1, _0x37aa93, _0xf8a3f2);
                    return;
                }
                if (_0x38c607)
                    _0x2db6d1['_protocol'] = _0x38c607;
                const _0x402340 = _0x338e6d['headers']['sec-websocket-extensions'];
                if (_0x402340 !== undefined) {
                    if (!_0x5c9f44) {
                        const _0x52f1bb = 'Server\x20sent\x20a\x20Sec-WebSocket-Extensions\x20header\x20but\x20no\x20extension\x20' + 'was\x20requested';
                        _0x45e2c7(_0x2db6d1, _0x37aa93, _0x52f1bb);
                        return;
                    }
                    let _0x6783b4;
                    try {
                        _0x6783b4 = _0x380a88(_0x402340);
                    } catch (_0xb7a260) {
                        const _0x312b47 = 'Invalid\x20Sec-WebSocket-Extensions\x20header';
                        _0x45e2c7(_0x2db6d1, _0x37aa93, _0x312b47);
                        return;
                    }
                    const _0x4d8837 = Object['keys'](_0x6783b4);
                    if (_0x4d8837['length'] !== 0x1 || _0x4d8837[0x0] !== _0x437bc2['extensionName']) {
                        const _0xeba9d5 = 'Server\x20indicated\x20an\x20extension\x20that\x20was\x20not\x20requested';
                        _0x45e2c7(_0x2db6d1, _0x37aa93, _0xeba9d5);
                        return;
                    }
                    try {
                        _0x5c9f44['accept'](_0x6783b4[_0x437bc2['extensionName']]);
                    } catch (_0xc784e5) {
                        const _0x17488a = 'Invalid\x20Sec-WebSocket-Extensions\x20header';
                        _0x45e2c7(_0x2db6d1, _0x37aa93, _0x17488a);
                        return;
                    }
                    _0x2db6d1['_extensions'][_0x437bc2['extensionName']] = _0x5c9f44;
                }
                _0x2db6d1['setSocket'](_0x37aa93, _0x20e3f3, {
                    'maxPayload': _0x46192f['maxPayload'],
                    'skipUTF8Validation': _0x46192f['skipUTF8Validation']
                });
            });
        }
        function _0xdd2e79(_0x3695ec) {
            return _0x3695ec['path'] = _0x3695ec['socketPath'], _0x320ce7['connect'](_0x3695ec);
        }
        function _0x4d77d8(_0x337562) {
            return _0x337562['path'] = undefined, !_0x337562['servername'] && _0x337562['servername'] !== '' && (_0x337562['servername'] = _0x320ce7['isIP'](_0x337562['host']) ? '' : _0x337562['host']), _0x540d18['connect'](_0x337562);
        }
        function _0x45e2c7(_0x181cc9, _0x4e9f01, _0x29fb94) {
            _0x181cc9['_readyState'] = _0x3b01cc['CLOSING'];
            const _0x1415b2 = new Error(_0x29fb94);
            Error['captureStackTrace'](_0x1415b2, _0x45e2c7), _0x4e9f01['setHeader'] ? (_0x4e9f01['abort'](), _0x4e9f01['socket'] && !_0x4e9f01['socket']['destroyed'] && _0x4e9f01['socket']['destroy'](), _0x4e9f01['once']('abort', _0x181cc9['emitClose']['bind'](_0x181cc9)), _0x181cc9['emit']('error', _0x1415b2)) : (_0x4e9f01['destroy'](_0x1415b2), _0x4e9f01['once']('error', _0x181cc9['emit']['bind'](_0x181cc9, 'error')), _0x4e9f01['once']('close', _0x181cc9['emitClose']['bind'](_0x181cc9)));
        }
        function _0x2173ff(_0x4c5a08, _0xc582a9, _0x516c03) {
            if (_0xc582a9) {
                const _0x414b18 = _0x3e2585(_0xc582a9)['length'];
                if (_0x4c5a08['_socket'])
                    _0x4c5a08['_sender']['_bufferedBytes'] += _0x414b18;
                else
                    _0x4c5a08['_bufferedAmount'] += _0x414b18;
            }
            if (_0x516c03) {
                const _0x31216a = new Error('WebSocket\x20is\x20not\x20open:\x20readyState\x20' + _0x4c5a08['readyState'] + '\x20' + ('(' + _0x3612e1[_0x4c5a08['readyState']] + ')'));
                _0x516c03(_0x31216a);
            }
        }
        function _0x54ad89(_0x196904, _0x416b9a) {
            const _0x13d190 = this[_0x578793];
            _0x13d190['_closeFrameReceived'] = !![], _0x13d190['_closeMessage'] = _0x416b9a, _0x13d190['_closeCode'] = _0x196904;
            if (_0x13d190['_socket'][_0x578793] === undefined)
                return;
            _0x13d190['_socket']['removeListener']('data', _0x35da55), process['nextTick'](_0x22701a, _0x13d190['_socket']);
            if (_0x196904 === 0x3ed)
                _0x13d190['close']();
            else
                _0x13d190['close'](_0x196904, _0x416b9a);
        }
        function _0x3be08b() {
            this[_0x578793]['_socket']['resume']();
        }
        function _0x1325ad(_0x4e8281) {
            const _0x45df0b = this[_0x578793];
            _0x45df0b['_socket'][_0x578793] !== undefined && (_0x45df0b['_socket']['removeListener']('data', _0x35da55), process['nextTick'](_0x22701a, _0x45df0b['_socket']), _0x45df0b['close'](_0x4e8281[_0x1da929])), _0x45df0b['emit']('error', _0x4e8281);
        }
        function _0x376da2() {
            this[_0x578793]['emitClose']();
        }
        function _0x42e18b(_0x3d868e, _0xe2cd54) {
            this[_0x578793]['emit']('message', _0x3d868e, _0xe2cd54);
        }
        function _0x305bc1(_0x588fe6) {
            const _0x1ddf0a = this[_0x578793];
            _0x1ddf0a['pong'](_0x588fe6, !_0x1ddf0a['_isServer'], _0x1d6ae9), _0x1ddf0a['emit']('ping', _0x588fe6);
        }
        function _0x179338(_0x1e17e4) {
            this[_0x578793]['emit']('pong', _0x1e17e4);
        }
        function _0x22701a(_0x2398b5) {
            _0x2398b5['resume']();
        }
        function _0x4ef71c() {
            const _0x5073d4 = this[_0x578793];
            this['removeListener']('close', _0x4ef71c), this['removeListener']('data', _0x35da55), this['removeListener']('end', _0x328821), _0x5073d4['_readyState'] = _0x3b01cc['CLOSING'];
            let _0x34793e;
            !this['_readableState']['endEmitted'] && !_0x5073d4['_closeFrameReceived'] && !_0x5073d4['_receiver']['_writableState']['errorEmitted'] && (_0x34793e = _0x5073d4['_socket']['read']()) !== null && _0x5073d4['_receiver']['write'](_0x34793e), _0x5073d4['_receiver']['end'](), this[_0x578793] = undefined, clearTimeout(_0x5073d4['_closeTimer']), _0x5073d4['_receiver']['_writableState']['finished'] || _0x5073d4['_receiver']['_writableState']['errorEmitted'] ? _0x5073d4['emitClose']() : (_0x5073d4['_receiver']['on']('error', _0x376da2), _0x5073d4['_receiver']['on']('finish', _0x376da2));
        }
        function _0x35da55(_0x51a331) {
            !this[_0x578793]['_receiver']['write'](_0x51a331) && this['pause']();
        }
        function _0x328821() {
            const _0x5c900f = this[_0x578793];
            _0x5c900f['_readyState'] = _0x3b01cc['CLOSING'], _0x5c900f['_receiver']['end'](), this['end']();
        }
        function _0x622d0f() {
            const _0x4a77b2 = this[_0x578793];
            this['removeListener']('error', _0x622d0f), this['on']('error', _0x1d6ae9), _0x4a77b2 && (_0x4a77b2['_readyState'] = _0x3b01cc['CLOSING'], this['destroy']());
        }
    },
    0x48e1: (_0x573a3e, _0x81f764) => {
        'use strict';
        Object['defineProperty'](_0x81f764, '__esModule', { 'value': !![] }), _0x81f764['ERROR_PACKET'] = _0x81f764['PACKET_TYPES_REVERSE'] = _0x81f764['PACKET_TYPES'] = void 0x0;
        const _0x21e332 = Object['create'](null);
        _0x81f764['PACKET_TYPES'] = _0x21e332, _0x21e332['open'] = '0', _0x21e332['close'] = '1', _0x21e332['ping'] = '2', _0x21e332['pong'] = '3', _0x21e332['message'] = '4', _0x21e332['upgrade'] = '5', _0x21e332['noop'] = '6';
        const _0x4c0391 = Object['create'](null);
        _0x81f764['PACKET_TYPES_REVERSE'] = _0x4c0391, Object['keys'](_0x21e332)['forEach'](_0x9491e0 => {
            _0x4c0391[_0x21e332[_0x9491e0]] = _0x9491e0;
        });
        const _0x238218 = {
            'type': 'error',
            'data': 'parser\x20error'
        };
        _0x81f764['ERROR_PACKET'] = _0x238218;
    },
    0xb378: (_0x3b4eaa, _0x543f14, _0x28edba) => {
        'use strict';
        Object['defineProperty'](_0x543f14, '__esModule', { 'value': !![] });
        const _0x35ab6e = _0x28edba(0x48e1), _0x46c1f5 = (_0x3488a2, _0x57cf70) => {
                if (typeof _0x3488a2 !== 'string')
                    return {
                        'type': 'message',
                        'data': _0x41f90b(_0x3488a2, _0x57cf70)
                    };
                const _0x571b5e = _0x3488a2['charAt'](0x0);
                if (_0x571b5e === 'b') {
                    const _0x43ac3b = Buffer['from'](_0x3488a2['substring'](0x1), 'base64');
                    return {
                        'type': 'message',
                        'data': _0x41f90b(_0x43ac3b, _0x57cf70)
                    };
                }
                if (!_0x35ab6e['PACKET_TYPES_REVERSE'][_0x571b5e])
                    return _0x35ab6e['ERROR_PACKET'];
                return _0x3488a2['length'] > 0x1 ? {
                    'type': _0x35ab6e['PACKET_TYPES_REVERSE'][_0x571b5e],
                    'data': _0x3488a2['substring'](0x1)
                } : { 'type': _0x35ab6e['PACKET_TYPES_REVERSE'][_0x571b5e] };
            }, _0x41f90b = (_0x46bdf5, _0x152bab) => {
                const _0x4a9e31 = Buffer['isBuffer'](_0x46bdf5);
                switch (_0x152bab) {
                case 'arraybuffer':
                    return _0x4a9e31 ? _0x3981fc(_0x46bdf5) : _0x46bdf5;
                case 'nodebuffer':
                default:
                    return _0x46bdf5;
                }
            }, _0x3981fc = _0x3b3ef8 => {
                const _0x46bcfb = new ArrayBuffer(_0x3b3ef8['length']), _0x299f56 = new Uint8Array(_0x46bcfb);
                for (let _0x464760 = 0x0; _0x464760 < _0x3b3ef8['length']; _0x464760++) {
                    _0x299f56[_0x464760] = _0x3b3ef8[_0x464760];
                }
                return _0x46bcfb;
            };
        _0x543f14['default'] = _0x46c1f5;
    },
    0x12b07: (_0x5dea8f, _0x2acaae, _0x535aca) => {
        'use strict';
        Object['defineProperty'](_0x2acaae, '__esModule', { 'value': !![] });
        const _0x41fb4c = _0x535aca(0x48e1), _0x2e9dc0 = ({
                type: _0x1fa373,
                data: _0x5d4a5a
            }, _0x5bc005, _0xb369c1) => {
                if (_0x5d4a5a instanceof ArrayBuffer || ArrayBuffer['isView'](_0x5d4a5a)) {
                    const _0x5ba9c2 = _0x333e80(_0x5d4a5a);
                    return _0xb369c1(_0xf573f9(_0x5ba9c2, _0x5bc005));
                }
                return _0xb369c1(_0x41fb4c['PACKET_TYPES'][_0x1fa373] + (_0x5d4a5a || ''));
            }, _0x333e80 = _0x3a74bd => {
                if (Buffer['isBuffer'](_0x3a74bd))
                    return _0x3a74bd;
                else
                    return _0x3a74bd instanceof ArrayBuffer ? Buffer['from'](_0x3a74bd) : Buffer['from'](_0x3a74bd['buffer'], _0x3a74bd['byteOffset'], _0x3a74bd['byteLength']);
            }, _0xf573f9 = (_0x370207, _0xbbec25) => {
                return _0xbbec25 ? _0x370207 : 'b' + _0x370207['toString']('base64');
            };
        _0x2acaae['default'] = _0x2e9dc0;
    },
    0xd949: (_0x586f1f, _0x5409f2, _0x252d3f) => {
        'use strict';
        Object['defineProperty'](_0x5409f2, '__esModule', { 'value': !![] }), _0x5409f2['decodePayload'] = _0x5409f2['decodePacket'] = _0x5409f2['encodePayload'] = _0x5409f2['encodePacket'] = _0x5409f2['protocol'] = void 0x0;
        const _0xe76f2f = _0x252d3f(0x12b07);
        _0x5409f2['encodePacket'] = _0xe76f2f['default'];
        const _0x301472 = _0x252d3f(0xb378);
        _0x5409f2['decodePacket'] = _0x301472['default'];
        const _0x2b3478 = String['fromCharCode'](0x1e), _0x5ccac7 = (_0x4373d, _0x2aef20) => {
                const _0xf455df = _0x4373d['length'], _0x563f5b = new Array(_0xf455df);
                let _0x16f29f = 0x0;
                _0x4373d['forEach']((_0x541010, _0x3dd9b2) => {
                    (0x0, _0xe76f2f['default'])(_0x541010, ![], _0x3597b1 => {
                        _0x563f5b[_0x3dd9b2] = _0x3597b1, ++_0x16f29f === _0xf455df && _0x2aef20(_0x563f5b['join'](_0x2b3478));
                    });
                });
            };
        _0x5409f2['encodePayload'] = _0x5ccac7;
        const _0x55c30a = (_0x3828c7, _0x4b4c9a) => {
            const _0x264a6a = _0x3828c7['split'](_0x2b3478), _0x491c5c = [];
            for (let _0x2a1778 = 0x0; _0x2a1778 < _0x264a6a['length']; _0x2a1778++) {
                const _0x33140c = (0x0, _0x301472['default'])(_0x264a6a[_0x2a1778], _0x4b4c9a);
                _0x491c5c['push'](_0x33140c);
                if (_0x33140c['type'] === 'error')
                    break;
            }
            return _0x491c5c;
        };
        _0x5409f2['decodePayload'] = _0x55c30a, _0x5409f2['protocol'] = 0x4;
    },
    0xde23: (_0x572ec2, _0x4bf416, _0x45a2a6) => {
        'use strict';
        Object['defineProperty'](_0x4bf416, '__esModule', { 'value': !![] }), _0x4bf416['protocol'] = _0x4bf416['Transport'] = _0x4bf416['Socket'] = _0x4bf416['uServer'] = _0x4bf416['parser'] = _0x4bf416['attach'] = _0x4bf416['listen'] = _0x4bf416['transports'] = _0x4bf416['Server'] = void 0x0;
        const _0x68f432 = _0x45a2a6(0x3575), _0x2fc893 = _0x45a2a6(0x4c03);
        Object['defineProperty'](_0x4bf416, 'Server', {
            'enumerable': !![],
            'get': function () {
                return _0x2fc893['Server'];
            }
        });
        const _0x5bb59c = _0x45a2a6(0x2205);
        _0x4bf416['transports'] = _0x5bb59c['default'];
        const _0x3b34e4 = _0x45a2a6(0xd949);
        _0x4bf416['parser'] = _0x3b34e4;
        var _0x4aeca6 = _0x45a2a6(0xfbdd);
        Object['defineProperty'](_0x4bf416, 'uServer', {
            'enumerable': !![],
            'get': function () {
                return _0x4aeca6['uServer'];
            }
        });
        var _0x3e66fe = _0x45a2a6(0xc263);
        Object['defineProperty'](_0x4bf416, 'Socket', {
            'enumerable': !![],
            'get': function () {
                return _0x3e66fe['Socket'];
            }
        });
        var _0x17c3bd = _0x45a2a6(0x2f5a);
        Object['defineProperty'](_0x4bf416, 'Transport', {
            'enumerable': !![],
            'get': function () {
                return _0x17c3bd['Transport'];
            }
        }), _0x4bf416['protocol'] = _0x3b34e4['protocol'];
        function _0x5b78ff(_0x555e50, _0x12a763, _0x5920df) {
            'function' === typeof _0x12a763 && (_0x5920df = _0x12a763, _0x12a763 = {});
            const _0x5d61f6 = (0x0, _0x68f432['createServer'])(function (_0x4f9b8b, _0x33bee1) {
                    _0x33bee1['writeHead'](0x1f5), _0x33bee1['end']('Not\x20Implemented');
                }), _0x43d525 = _0x39aa8f(_0x5d61f6, _0x12a763);
            return _0x43d525['httpServer'] = _0x5d61f6, _0x5d61f6['listen'](_0x555e50, _0x5920df), _0x43d525;
        }
        _0x4bf416['listen'] = _0x5b78ff;
        function _0x39aa8f(_0x4bb66a, _0x1d66c9) {
            const _0x41b1b3 = new _0x2fc893['Server'](_0x1d66c9);
            return _0x41b1b3['attach'](_0x4bb66a, _0x1d66c9), _0x41b1b3;
        }
        _0x4bf416['attach'] = _0x39aa8f;
    },
    0x3c42: (_0x517fe5, _0x761b92, _0xe19c12) => {
        'use strict';
        Object['defineProperty'](_0x761b92, '__esModule', { 'value': !![] }), _0x761b92['decodePayloadAsBinary'] = _0x761b92['encodePayloadAsBinary'] = _0x761b92['decodePayload'] = _0x761b92['encodePayload'] = _0x761b92['decodeBase64Packet'] = _0x761b92['decodePacket'] = _0x761b92['encodeBase64Packet'] = _0x761b92['encodePacket'] = _0x761b92['packets'] = _0x761b92['protocol'] = void 0x0;
        var _0x24c2ce = _0xe19c12(0x161ad);
        _0x761b92['protocol'] = 0x3;
        const _0x488ed4 = _0x22301c => {
            for (const _0x2f22e6 of _0x22301c) {
                if (_0x2f22e6['data'] instanceof ArrayBuffer || ArrayBuffer['isView'](_0x2f22e6['data']))
                    return !![];
            }
            return ![];
        };
        _0x761b92['packets'] = {
            'open': 0x0,
            'close': 0x1,
            'ping': 0x2,
            'pong': 0x3,
            'message': 0x4,
            'upgrade': 0x5,
            'noop': 0x6
        };
        var _0x4a3e70 = Object['keys'](_0x761b92['packets']), _0x4eb83a = {
                'type': 'error',
                'data': 'parser\x20error'
            };
        const _0x3c7c07 = Buffer['concat']([]);
        function _0x3e1b07(_0x1bd034, _0x31bccb, _0x21eed7, _0x133a40) {
            typeof _0x31bccb === 'function' && (_0x133a40 = _0x31bccb, _0x31bccb = null);
            typeof _0x21eed7 === 'function' && (_0x133a40 = _0x21eed7, _0x21eed7 = null);
            if (Buffer['isBuffer'](_0x1bd034['data']))
                return _0x231f9b(_0x1bd034, _0x31bccb, _0x133a40);
            else {
                if (_0x1bd034['data'] && (_0x1bd034['data']['buffer'] || _0x1bd034['data']) instanceof ArrayBuffer)
                    return _0x231f9b({
                        'type': _0x1bd034['type'],
                        'data': _0x563d36(_0x1bd034['data'])
                    }, _0x31bccb, _0x133a40);
            }
            var _0x3975eb = _0x761b92['packets'][_0x1bd034['type']];
            return undefined !== _0x1bd034['data'] && (_0x3975eb += _0x21eed7 ? _0x24c2ce['encode'](String(_0x1bd034['data']), { 'strict': ![] }) : String(_0x1bd034['data'])), _0x133a40('' + _0x3975eb);
        }
        _0x761b92['encodePacket'] = _0x3e1b07;
        ;
        function _0x231f9b(_0x2d8e75, _0xbec2b2, _0x561ded) {
            if (!_0xbec2b2)
                return _0x166515(_0x2d8e75, _0x561ded);
            var _0x2007ab = _0x2d8e75['data'], _0x36a427 = Buffer['allocUnsafe'](0x1);
            return _0x36a427[0x0] = _0x761b92['packets'][_0x2d8e75['type']], _0x561ded(Buffer['concat']([
                _0x36a427,
                _0x2007ab
            ]));
        }
        function _0x166515(_0x539433, _0x3f0f55) {
            var _0x952e45 = Buffer['isBuffer'](_0x539433['data']) ? _0x539433['data'] : _0x563d36(_0x539433['data']), _0x1d3d2a = 'b' + _0x761b92['packets'][_0x539433['type']];
            return _0x1d3d2a += _0x952e45['toString']('base64'), _0x3f0f55(_0x1d3d2a);
        }
        _0x761b92['encodeBase64Packet'] = _0x166515;
        ;
        function _0x57a83e(_0x474a9c, _0x18601c, _0x2347f5) {
            if (_0x474a9c === undefined)
                return _0x4eb83a;
            var _0x5c8c6d;
            if (typeof _0x474a9c === 'string') {
                _0x5c8c6d = _0x474a9c['charAt'](0x0);
                if (_0x5c8c6d === 'b')
                    return _0xf39ba5(_0x474a9c['substr'](0x1), _0x18601c);
                if (_0x2347f5) {
                    _0x474a9c = _0x42f3f2(_0x474a9c);
                    if (_0x474a9c === ![])
                        return _0x4eb83a;
                }
                if (Number(_0x5c8c6d) != _0x5c8c6d || !_0x4a3e70[_0x5c8c6d])
                    return _0x4eb83a;
                return _0x474a9c['length'] > 0x1 ? {
                    'type': _0x4a3e70[_0x5c8c6d],
                    'data': _0x474a9c['substring'](0x1)
                } : { 'type': _0x4a3e70[_0x5c8c6d] };
            }
            if (_0x18601c === 'arraybuffer') {
                var _0xd834a = new Uint8Array(_0x474a9c);
                return _0x5c8c6d = _0xd834a[0x0], {
                    'type': _0x4a3e70[_0x5c8c6d],
                    'data': _0xd834a['buffer']['slice'](0x1)
                };
            }
            return _0x474a9c instanceof ArrayBuffer && (_0x474a9c = _0x563d36(_0x474a9c)), _0x5c8c6d = _0x474a9c[0x0], {
                'type': _0x4a3e70[_0x5c8c6d],
                'data': _0x474a9c['slice'](0x1)
            };
        }
        _0x761b92['decodePacket'] = _0x57a83e;
        ;
        function _0x42f3f2(_0x4892e5) {
            try {
                _0x4892e5 = _0x24c2ce['decode'](_0x4892e5, { 'strict': ![] });
            } catch (_0x4d0e1c) {
                return ![];
            }
            return _0x4892e5;
        }
        function _0xf39ba5(_0x59f6ce, _0x4b1416) {
            var _0x4098ab = _0x4a3e70[_0x59f6ce['charAt'](0x0)], _0x1c8a12 = Buffer['from'](_0x59f6ce['substr'](0x1), 'base64');
            if (_0x4b1416 === 'arraybuffer') {
                var _0x4624ed = new Uint8Array(_0x1c8a12['length']);
                for (var _0x1ac3cf = 0x0; _0x1ac3cf < _0x4624ed['length']; _0x1ac3cf++) {
                    _0x4624ed[_0x1ac3cf] = _0x1c8a12[_0x1ac3cf];
                }
                _0x1c8a12 = _0x4624ed['buffer'];
            }
            return {
                'type': _0x4098ab,
                'data': _0x1c8a12
            };
        }
        _0x761b92['decodeBase64Packet'] = _0xf39ba5;
        ;
        function _0x4657b5(_0x31c5ba, _0x1c4d0b, _0x4d661d) {
            typeof _0x1c4d0b === 'function' && (_0x4d661d = _0x1c4d0b, _0x1c4d0b = null);
            if (_0x1c4d0b && _0x488ed4(_0x31c5ba))
                return _0x182d63(_0x31c5ba, _0x4d661d);
            if (!_0x31c5ba['length'])
                return _0x4d661d('0:');
            function _0x49a38b(_0x574036, _0x4a4e32) {
                _0x3e1b07(_0x574036, _0x1c4d0b, ![], function (_0x2872f7) {
                    _0x4a4e32(null, _0x2823cd(_0x2872f7));
                });
            }
            _0x5cdd65(_0x31c5ba, _0x49a38b, function (_0x316f1e, _0x5db1eb) {
                return _0x4d661d(_0x5db1eb['join'](''));
            });
        }
        _0x761b92['encodePayload'] = _0x4657b5;
        ;
        function _0x2823cd(_0x38e2f7) {
            return _0x38e2f7['length'] + ':' + _0x38e2f7;
        }
        function _0x5cdd65(_0xf207ec, _0x48edda, _0x5abed3) {
            const _0x3382d8 = new Array(_0xf207ec['length']);
            let _0x419bec = 0x0;
            for (let _0x5ce41f = 0x0; _0x5ce41f < _0xf207ec['length']; _0x5ce41f++) {
                _0x48edda(_0xf207ec[_0x5ce41f], (_0x248b9f, _0x373a66) => {
                    _0x3382d8[_0x5ce41f] = _0x373a66, ++_0x419bec === _0xf207ec['length'] && _0x5abed3(null, _0x3382d8);
                });
            }
        }
        function _0x1ab76f(_0x27553a, _0x137405, _0x27166e) {
            if (typeof _0x27553a !== 'string')
                return _0x4fb558(_0x27553a, _0x137405, _0x27166e);
            typeof _0x137405 === 'function' && (_0x27166e = _0x137405, _0x137405 = null);
            if (_0x27553a === '')
                return _0x27166e(_0x4eb83a, 0x0, 0x1);
            var _0x3b0763 = '', _0x6414ac, _0x2444fb, _0x1b4924;
            for (var _0x22376a = 0x0, _0xd0d8c3 = _0x27553a['length']; _0x22376a < _0xd0d8c3; _0x22376a++) {
                var _0x47df35 = _0x27553a['charAt'](_0x22376a);
                if (_0x47df35 !== ':') {
                    _0x3b0763 += _0x47df35;
                    continue;
                }
                if (_0x3b0763 === '' || _0x3b0763 != (_0x6414ac = Number(_0x3b0763)))
                    return _0x27166e(_0x4eb83a, 0x0, 0x1);
                _0x2444fb = _0x27553a['substr'](_0x22376a + 0x1, _0x6414ac);
                if (_0x3b0763 != _0x2444fb['length'])
                    return _0x27166e(_0x4eb83a, 0x0, 0x1);
                if (_0x2444fb['length']) {
                    _0x1b4924 = _0x57a83e(_0x2444fb, _0x137405, ![]);
                    if (_0x4eb83a['type'] === _0x1b4924['type'] && _0x4eb83a['data'] === _0x1b4924['data'])
                        return _0x27166e(_0x4eb83a, 0x0, 0x1);
                    var _0x52b0f8 = _0x27166e(_0x1b4924, _0x22376a + _0x6414ac, _0xd0d8c3);
                    if (![] === _0x52b0f8)
                        return;
                }
                _0x22376a += _0x6414ac, _0x3b0763 = '';
            }
            if (_0x3b0763 !== '')
                return _0x27166e(_0x4eb83a, 0x0, 0x1);
        }
        _0x761b92['decodePayload'] = _0x1ab76f;
        ;
        function _0x1dff9c(_0x1ded18) {
            var _0x3b2f0d = '';
            for (var _0x5a6479 = 0x0, _0x56019f = _0x1ded18['length']; _0x5a6479 < _0x56019f; _0x5a6479++) {
                _0x3b2f0d += String['fromCharCode'](_0x1ded18[_0x5a6479]);
            }
            return _0x3b2f0d;
        }
        function _0x1375d7(_0xca78ff) {
            var _0x1f0afa = Buffer['allocUnsafe'](_0xca78ff['length']);
            for (var _0x571fcb = 0x0, _0x66b754 = _0xca78ff['length']; _0x571fcb < _0x66b754; _0x571fcb++) {
                _0x1f0afa['writeUInt8'](_0xca78ff['charCodeAt'](_0x571fcb), _0x571fcb);
            }
            return _0x1f0afa;
        }
        function _0x563d36(_0x287cec) {
            var _0x4e3e55 = _0x287cec['byteLength'] || _0x287cec['length'], _0x3b11b2 = _0x287cec['byteOffset'] || 0x0;
            return Buffer['from'](_0x287cec['buffer'] || _0x287cec, _0x3b11b2, _0x4e3e55);
        }
        function _0x182d63(_0x59e1e2, _0x565944) {
            if (!_0x59e1e2['length'])
                return _0x565944(_0x3c7c07);
            _0x5cdd65(_0x59e1e2, _0x1d7489, function (_0x5bcc56, _0x57d171) {
                return _0x565944(Buffer['concat'](_0x57d171));
            });
        }
        _0x761b92['encodePayloadAsBinary'] = _0x182d63;
        ;
        function _0x1d7489(_0x22a76c, _0x4deaad) {
            function _0x53238d(_0x147cb8) {
                var _0x941515 = '' + _0x147cb8['length'], _0x568231;
                if (typeof _0x147cb8 === 'string') {
                    _0x568231 = Buffer['allocUnsafe'](_0x941515['length'] + 0x2), _0x568231[0x0] = 0x0;
                    for (var _0x595f1f = 0x0; _0x595f1f < _0x941515['length']; _0x595f1f++) {
                        _0x568231[_0x595f1f + 0x1] = parseInt(_0x941515[_0x595f1f], 0xa);
                    }
                    return _0x568231[_0x568231['length'] - 0x1] = 0xff, _0x4deaad(null, Buffer['concat']([
                        _0x568231,
                        _0x1375d7(_0x147cb8)
                    ]));
                }
                _0x568231 = Buffer['allocUnsafe'](_0x941515['length'] + 0x2), _0x568231[0x0] = 0x1;
                for (var _0x595f1f = 0x0; _0x595f1f < _0x941515['length']; _0x595f1f++) {
                    _0x568231[_0x595f1f + 0x1] = parseInt(_0x941515[_0x595f1f], 0xa);
                }
                _0x568231[_0x568231['length'] - 0x1] = 0xff, _0x4deaad(null, Buffer['concat']([
                    _0x568231,
                    _0x147cb8
                ]));
            }
            _0x3e1b07(_0x22a76c, !![], !![], _0x53238d);
        }
        function _0x4fb558(_0xca86ef, _0x3945b8, _0x25a890) {
            typeof _0x3945b8 === 'function' && (_0x25a890 = _0x3945b8, _0x3945b8 = null);
            var _0x45678f = _0xca86ef, _0x28c003 = [], _0x57367c;
            while (_0x45678f['length'] > 0x0) {
                var _0x2f9a83 = '', _0x4084c5 = _0x45678f[0x0] === 0x0;
                for (_0x57367c = 0x1;; _0x57367c++) {
                    if (_0x45678f[_0x57367c] === 0xff)
                        break;
                    if (_0x2f9a83['length'] > 0x136)
                        return _0x25a890(_0x4eb83a, 0x0, 0x1);
                    _0x2f9a83 += '' + _0x45678f[_0x57367c];
                }
                _0x45678f = _0x45678f['slice'](_0x2f9a83['length'] + 0x1);
                var _0x38b72d = parseInt(_0x2f9a83, 0xa), _0x483bca = _0x45678f['slice'](0x1, _0x38b72d + 0x1);
                if (_0x4084c5)
                    _0x483bca = _0x1dff9c(_0x483bca);
                _0x28c003['push'](_0x483bca), _0x45678f = _0x45678f['slice'](_0x38b72d + 0x1);
            }
            var _0x4ac56d = _0x28c003['length'];
            for (_0x57367c = 0x0; _0x57367c < _0x4ac56d; _0x57367c++) {
                var _0x223344 = _0x28c003[_0x57367c];
                _0x25a890(_0x57a83e(_0x223344, _0x3945b8, !![]), _0x57367c, _0x4ac56d);
            }
        }
        _0x761b92['decodePayloadAsBinary'] = _0x4fb558;
        ;
    },
    0x161ad: _0x2ddb7d => {
        var _0x596b5a = String['fromCharCode'];
        function _0x463fbb(_0x23b622) {
            var _0x5aee97 = [], _0x431aea = 0x0, _0x1fa61e = _0x23b622['length'], _0x331c98, _0x461cde;
            while (_0x431aea < _0x1fa61e) {
                _0x331c98 = _0x23b622['charCodeAt'](_0x431aea++), _0x331c98 >= 0xd800 && _0x331c98 <= 0xdbff && _0x431aea < _0x1fa61e ? (_0x461cde = _0x23b622['charCodeAt'](_0x431aea++), (_0x461cde & 0xfc00) == 0xdc00 ? _0x5aee97['push'](((_0x331c98 & 0x3ff) << 0xa) + (_0x461cde & 0x3ff) + 0x10000) : (_0x5aee97['push'](_0x331c98), _0x431aea--)) : _0x5aee97['push'](_0x331c98);
            }
            return _0x5aee97;
        }
        function _0x472d48(_0x24f14e) {
            var _0x392d0b = _0x24f14e['length'], _0x479bb5 = -0x1, _0x320459, _0x45d2a2 = '';
            while (++_0x479bb5 < _0x392d0b) {
                _0x320459 = _0x24f14e[_0x479bb5], _0x320459 > 0xffff && (_0x320459 -= 0x10000, _0x45d2a2 += _0x596b5a(_0x320459 >>> 0xa & 0x3ff | 0xd800), _0x320459 = 0xdc00 | _0x320459 & 0x3ff), _0x45d2a2 += _0x596b5a(_0x320459);
            }
            return _0x45d2a2;
        }
        function _0x7d0f8b(_0x2dde58, _0x4be953) {
            if (_0x2dde58 >= 0xd800 && _0x2dde58 <= 0xdfff) {
                if (_0x4be953)
                    throw Error('Lone\x20surrogate\x20U+' + _0x2dde58['toString'](0x10)['toUpperCase']() + '\x20is\x20not\x20a\x20scalar\x20value');
                return ![];
            }
            return !![];
        }
        function _0x5f07a1(_0x10f9ec, _0x456bf4) {
            return _0x596b5a(_0x10f9ec >> _0x456bf4 & 0x3f | 0x80);
        }
        function _0x58c332(_0x2be6c2, _0x301036) {
            if ((_0x2be6c2 & 0xffffff80) == 0x0)
                return _0x596b5a(_0x2be6c2);
            var _0x4977a7 = '';
            if ((_0x2be6c2 & 0xfffff800) == 0x0)
                _0x4977a7 = _0x596b5a(_0x2be6c2 >> 0x6 & 0x1f | 0xc0);
            else {
                if ((_0x2be6c2 & 0xffff0000) == 0x0)
                    !_0x7d0f8b(_0x2be6c2, _0x301036) && (_0x2be6c2 = 0xfffd), _0x4977a7 = _0x596b5a(_0x2be6c2 >> 0xc & 0xf | 0xe0), _0x4977a7 += _0x5f07a1(_0x2be6c2, 0x6);
                else
                    (_0x2be6c2 & 0xffe00000) == 0x0 && (_0x4977a7 = _0x596b5a(_0x2be6c2 >> 0x12 & 0x7 | 0xf0), _0x4977a7 += _0x5f07a1(_0x2be6c2, 0xc), _0x4977a7 += _0x5f07a1(_0x2be6c2, 0x6));
            }
            return _0x4977a7 += _0x596b5a(_0x2be6c2 & 0x3f | 0x80), _0x4977a7;
        }
        function _0x3040f3(_0x1150a0, _0x540fa1) {
            _0x540fa1 = _0x540fa1 || {};
            var _0x1daf3d = ![] !== _0x540fa1['strict'], _0x4fac87 = _0x463fbb(_0x1150a0), _0x10f03b = _0x4fac87['length'], _0x5740f3 = -0x1, _0x1f5d7a, _0x21d373 = '';
            while (++_0x5740f3 < _0x10f03b) {
                _0x1f5d7a = _0x4fac87[_0x5740f3], _0x21d373 += _0x58c332(_0x1f5d7a, _0x1daf3d);
            }
            return _0x21d373;
        }
        function _0x4385f3() {
            if (_0x31d13f >= _0x50b01e)
                throw Error('Invalid\x20byte\x20index');
            var _0x49865a = _0x3d7ecb[_0x31d13f] & 0xff;
            _0x31d13f++;
            if ((_0x49865a & 0xc0) == 0x80)
                return _0x49865a & 0x3f;
            throw Error('Invalid\x20continuation\x20byte');
        }
        function _0x286f4f(_0x2088e0) {
            var _0x566e50, _0x2c59f4, _0x169b5d, _0x401a53, _0x43d39d;
            if (_0x31d13f > _0x50b01e)
                throw Error('Invalid\x20byte\x20index');
            if (_0x31d13f == _0x50b01e)
                return ![];
            _0x566e50 = _0x3d7ecb[_0x31d13f] & 0xff, _0x31d13f++;
            if ((_0x566e50 & 0x80) == 0x0)
                return _0x566e50;
            if ((_0x566e50 & 0xe0) == 0xc0) {
                _0x2c59f4 = _0x4385f3(), _0x43d39d = (_0x566e50 & 0x1f) << 0x6 | _0x2c59f4;
                if (_0x43d39d >= 0x80)
                    return _0x43d39d;
                else
                    throw Error('Invalid\x20continuation\x20byte');
            }
            if ((_0x566e50 & 0xf0) == 0xe0) {
                _0x2c59f4 = _0x4385f3(), _0x169b5d = _0x4385f3(), _0x43d39d = (_0x566e50 & 0xf) << 0xc | _0x2c59f4 << 0x6 | _0x169b5d;
                if (_0x43d39d >= 0x800)
                    return _0x7d0f8b(_0x43d39d, _0x2088e0) ? _0x43d39d : 0xfffd;
                else
                    throw Error('Invalid\x20continuation\x20byte');
            }
            if ((_0x566e50 & 0xf8) == 0xf0) {
                _0x2c59f4 = _0x4385f3(), _0x169b5d = _0x4385f3(), _0x401a53 = _0x4385f3(), _0x43d39d = (_0x566e50 & 0x7) << 0x12 | _0x2c59f4 << 0xc | _0x169b5d << 0x6 | _0x401a53;
                if (_0x43d39d >= 0x10000 && _0x43d39d <= 0x10ffff)
                    return _0x43d39d;
            }
            throw Error('Invalid\x20UTF-8\x20detected');
        }
        var _0x3d7ecb, _0x50b01e, _0x31d13f;
        function _0x440fd7(_0x5a13d8, _0x2d3bcc) {
            _0x2d3bcc = _0x2d3bcc || {};
            var _0x38634e = ![] !== _0x2d3bcc['strict'];
            _0x3d7ecb = _0x463fbb(_0x5a13d8), _0x50b01e = _0x3d7ecb['length'], _0x31d13f = 0x0;
            var _0x242a24 = [], _0x39e951;
            while ((_0x39e951 = _0x286f4f(_0x38634e)) !== ![]) {
                _0x242a24['push'](_0x39e951);
            }
            return _0x472d48(_0x242a24);
        }
        _0x2ddb7d['exports'] = {
            'version': '2.1.2',
            'encode': _0x3040f3,
            'decode': _0x440fd7
        };
    },
    0x4c03: (_0x50eaef, _0x1f008c, _0x4d0430) => {
        'use strict';
        Object['defineProperty'](_0x1f008c, '__esModule', { 'value': !![] }), _0x1f008c['Server'] = _0x1f008c['BaseServer'] = void 0x0;
        const _0x3c8fc9 = _0x4d0430(0xf7f5), _0x30626f = _0x4d0430(0xdfde), _0x4e45eb = _0x4d0430(0x7384), _0x214b5f = _0x4d0430(0x2205), _0x59ef79 = _0x4d0430(0x141b9), _0x3bcb13 = _0x4d0430(0xc263), _0x3acbbc = _0x4d0430(0x566b), _0x389d64 = _0x4d0430(0x16c04), _0x399381 = _0x4d0430(0xe61c), _0x5c7814 = (0x0, _0x3acbbc['default'])('engine');
        class _0xdabbc0 extends _0x59ef79['EventEmitter'] {
            constructor(_0x349613 = {}) {
                super(), this['clients'] = {}, this['clientsCount'] = 0x0, this['opts'] = Object['assign']({
                    'wsEngine': _0x399381['Server'],
                    'pingTimeout': 0x4e20,
                    'pingInterval': 0x61a8,
                    'upgradeTimeout': 0x2710,
                    'maxHttpBufferSize': 0xf4240,
                    'transports': Object['keys'](_0x214b5f['default']),
                    'allowUpgrades': !![],
                    'httpCompression': { 'threshold': 0x400 },
                    'cors': ![],
                    'allowEIO3': ![]
                }, _0x349613), _0x349613['cookie'] && (this['opts']['cookie'] = Object['assign']({
                    'name': 'io',
                    'path': '/',
                    'httpOnly': _0x349613['cookie']['path'] !== ![],
                    'sameSite': 'lax'
                }, _0x349613['cookie'])), this['opts']['cors'] && (this['corsMiddleware'] = _0x4d0430(0x1642d)(this['opts']['cors'])), _0x349613['perMessageDeflate'] && (this['opts']['perMessageDeflate'] = Object['assign']({ 'threshold': 0x400 }, _0x349613['perMessageDeflate'])), this['init']();
            }
            ['upgrades'](_0x13b1c2) {
                if (!this['opts']['allowUpgrades'])
                    return [];
                return _0x214b5f['default'][_0x13b1c2]['upgradesTo'] || [];
            }
            ['verify'](_0x452e60, _0x1a1d17, _0x231d1f) {
                const _0x379a6d = _0x452e60['_query']['transport'];
                if (!~this['opts']['transports']['indexOf'](_0x379a6d))
                    return _0x5c7814('unknown\x20transport\x20\x22%s\x22', _0x379a6d), _0x231d1f(_0x417ae6['errors']['UNKNOWN_TRANSPORT'], { 'transport': _0x379a6d });
                const _0xe49c1f = _0x2158dc(_0x452e60['headers']['origin']);
                if (_0xe49c1f) {
                    const _0x25d059 = _0x452e60['headers']['origin'];
                    return _0x452e60['headers']['origin'] = null, _0x5c7814('origin\x20header\x20invalid'), _0x231d1f(_0x417ae6['errors']['BAD_REQUEST'], {
                        'name': 'INVALID_ORIGIN',
                        'origin': _0x25d059
                    });
                }
                const _0x387210 = _0x452e60['_query']['sid'];
                if (_0x387210) {
                    if (!this['clients']['hasOwnProperty'](_0x387210))
                        return _0x5c7814('unknown\x20sid\x20\x22%s\x22', _0x387210), _0x231d1f(_0x417ae6['errors']['UNKNOWN_SID'], { 'sid': _0x387210 });
                    const _0x53c648 = this['clients'][_0x387210]['transport']['name'];
                    if (!_0x1a1d17 && _0x53c648 !== _0x379a6d)
                        return _0x5c7814('bad\x20request:\x20unexpected\x20transport\x20without\x20upgrade'), _0x231d1f(_0x417ae6['errors']['BAD_REQUEST'], {
                            'name': 'TRANSPORT_MISMATCH',
                            'transport': _0x379a6d,
                            'previousTransport': _0x53c648
                        });
                } else {
                    if ('GET' !== _0x452e60['method'])
                        return _0x231d1f(_0x417ae6['errors']['BAD_HANDSHAKE_METHOD'], { 'method': _0x452e60['method'] });
                    if (_0x379a6d === 'websocket' && !_0x1a1d17)
                        return _0x5c7814('invalid\x20transport\x20upgrade'), _0x231d1f(_0x417ae6['errors']['BAD_REQUEST'], { 'name': 'TRANSPORT_HANDSHAKE_ERROR' });
                    if (!this['opts']['allowRequest'])
                        return _0x231d1f();
                    return this['opts']['allowRequest'](_0x452e60, (_0x2a2328, _0x1337d1) => {
                        if (!_0x1337d1)
                            return _0x231d1f(_0x417ae6['errors']['FORBIDDEN'], { 'message': _0x2a2328 });
                        _0x231d1f();
                    });
                }
                _0x231d1f();
            }
            ['close']() {
                _0x5c7814('closing\x20all\x20open\x20clients');
                for (let _0x12ee93 in this['clients']) {
                    this['clients']['hasOwnProperty'](_0x12ee93) && this['clients'][_0x12ee93]['close'](!![]);
                }
                return this['cleanup'](), this;
            }
            ['generateId'](_0x5d6df3) {
                return _0x4e45eb['generateId']();
            }
            async ['handshake'](_0x5aabb4, _0x6a7de8, _0x37f06e) {
                const _0x3f0ad2 = _0x6a7de8['_query']['EIO'] === '4' ? 0x4 : 0x3;
                if (_0x3f0ad2 === 0x3 && !this['opts']['allowEIO3']) {
                    _0x5c7814('unsupported\x20protocol\x20version'), this['emit']('connection_error', {
                        'req': _0x6a7de8,
                        'code': _0x417ae6['errors']['UNSUPPORTED_PROTOCOL_VERSION'],
                        'message': _0x417ae6['errorMessages'][_0x417ae6['errors']['UNSUPPORTED_PROTOCOL_VERSION']],
                        'context': { 'protocol': _0x3f0ad2 }
                    }), _0x37f06e(_0x417ae6['errors']['UNSUPPORTED_PROTOCOL_VERSION']);
                    return;
                }
                let _0x5ca7c7;
                try {
                    _0x5ca7c7 = await this['generateId'](_0x6a7de8);
                } catch (_0x1c0f59) {
                    _0x5c7814('error\x20while\x20generating\x20an\x20id'), this['emit']('connection_error', {
                        'req': _0x6a7de8,
                        'code': _0x417ae6['errors']['BAD_REQUEST'],
                        'message': _0x417ae6['errorMessages'][_0x417ae6['errors']['BAD_REQUEST']],
                        'context': {
                            'name': 'ID_GENERATION_ERROR',
                            'error': _0x1c0f59
                        }
                    }), _0x37f06e(_0x417ae6['errors']['BAD_REQUEST']);
                    return;
                }
                _0x5c7814('handshaking\x20client\x20\x22%s\x22', _0x5ca7c7);
                try {
                    var _0x2dc6b9 = this['createTransport'](_0x5aabb4, _0x6a7de8);
                    if ('polling' === _0x5aabb4)
                        _0x2dc6b9['maxHttpBufferSize'] = this['opts']['maxHttpBufferSize'], _0x2dc6b9['httpCompression'] = this['opts']['httpCompression'];
                    else
                        'websocket' === _0x5aabb4 && (_0x2dc6b9['perMessageDeflate'] = this['opts']['perMessageDeflate']);
                    _0x6a7de8['_query'] && _0x6a7de8['_query']['b64'] ? _0x2dc6b9['supportsBinary'] = ![] : _0x2dc6b9['supportsBinary'] = !![];
                } catch (_0x5505e6) {
                    _0x5c7814('error\x20handshaking\x20to\x20transport\x20\x22%s\x22', _0x5aabb4), this['emit']('connection_error', {
                        'req': _0x6a7de8,
                        'code': _0x417ae6['errors']['BAD_REQUEST'],
                        'message': _0x417ae6['errorMessages'][_0x417ae6['errors']['BAD_REQUEST']],
                        'context': {
                            'name': 'TRANSPORT_HANDSHAKE_ERROR',
                            'error': _0x5505e6
                        }
                    }), _0x37f06e(_0x417ae6['errors']['BAD_REQUEST']);
                    return;
                }
                const _0x5c3b4d = new _0x3bcb13['Socket'](_0x5ca7c7, this, _0x2dc6b9, _0x6a7de8, _0x3f0ad2);
                return _0x2dc6b9['on']('headers', (_0x325e4f, _0x28b98e) => {
                    const _0x48f5f3 = !_0x28b98e['_query']['sid'];
                    _0x48f5f3 && (this['opts']['cookie'] && (_0x325e4f['Set-Cookie'] = [(0x0, _0x389d64['serialize'])(this['opts']['cookie']['name'], _0x5ca7c7, this['opts']['cookie'])]), this['emit']('initial_headers', _0x325e4f, _0x28b98e)), this['emit']('headers', _0x325e4f, _0x28b98e);
                }), _0x2dc6b9['onRequest'](_0x6a7de8), this['clients'][_0x5ca7c7] = _0x5c3b4d, this['clientsCount']++, _0x5c3b4d['once']('close', () => {
                    delete this['clients'][_0x5ca7c7], this['clientsCount']--;
                }), this['emit']('connection', _0x5c3b4d), _0x2dc6b9;
            }
        }
        _0x1f008c['BaseServer'] = _0xdabbc0, _0xdabbc0['errors'] = {
            'UNKNOWN_TRANSPORT': 0x0,
            'UNKNOWN_SID': 0x1,
            'BAD_HANDSHAKE_METHOD': 0x2,
            'BAD_REQUEST': 0x3,
            'FORBIDDEN': 0x4,
            'UNSUPPORTED_PROTOCOL_VERSION': 0x5
        }, _0xdabbc0['errorMessages'] = {
            0x0: 'Transport\x20unknown',
            0x1: 'Session\x20ID\x20unknown',
            0x2: 'Bad\x20handshake\x20method',
            0x3: 'Bad\x20request',
            0x4: 'Forbidden',
            0x5: 'Unsupported\x20protocol\x20version'
        };
        class _0x417ae6 extends _0xdabbc0 {
            ['init']() {
                if (!~this['opts']['transports']['indexOf']('websocket'))
                    return;
                if (this['ws'])
                    this['ws']['close']();
                this['ws'] = new this['opts']['wsEngine']({
                    'noServer': !![],
                    'clientTracking': ![],
                    'perMessageDeflate': this['opts']['perMessageDeflate'],
                    'maxPayload': this['opts']['maxHttpBufferSize']
                }), typeof this['ws']['on'] === 'function' && this['ws']['on']('headers', (_0x5b34e4, _0x47a2b9) => {
                    const _0x30776d = {}, _0x20b37f = !_0x47a2b9['_query']['sid'];
                    _0x20b37f && this['emit']('initial_headers', _0x30776d, _0x47a2b9), this['emit']('headers', _0x30776d, _0x47a2b9), Object['keys'](_0x30776d)['forEach'](_0x50c3a7 => {
                        _0x5b34e4['push'](_0x50c3a7 + ':\x20' + _0x30776d[_0x50c3a7]);
                    });
                });
            }
            ['cleanup']() {
                this['ws'] && (_0x5c7814('closing\x20webSocketServer'), this['ws']['close']());
            }
            ['prepare'](_0x4d8bc8) {
                !_0x4d8bc8['_query'] && (_0x4d8bc8['_query'] = ~_0x4d8bc8['url']['indexOf']('?') ? _0x3c8fc9['parse']((0x0, _0x30626f['parse'])(_0x4d8bc8['url'])['query']) : {});
            }
            ['createTransport'](_0x353e20, _0x51085e) {
                return new _0x214b5f['default'][_0x353e20](_0x51085e);
            }
            ['handleRequest'](_0x520b90, _0x450ea5) {
                _0x5c7814('handling\x20\x22%s\x22\x20http\x20request\x20\x22%s\x22', _0x520b90['method'], _0x520b90['url']), this['prepare'](_0x520b90), _0x520b90['res'] = _0x450ea5;
                const _0x15a484 = (_0x420472, _0x504ab4) => {
                    if (_0x420472 !== undefined) {
                        this['emit']('connection_error', {
                            'req': _0x520b90,
                            'code': _0x420472,
                            'message': _0x417ae6['errorMessages'][_0x420472],
                            'context': _0x504ab4
                        }), _0x517ad8(_0x450ea5, _0x420472, _0x504ab4);
                        return;
                    }
                    if (_0x520b90['_query']['sid'])
                        _0x5c7814('setting\x20new\x20request\x20for\x20existing\x20client'), this['clients'][_0x520b90['_query']['sid']]['transport']['onRequest'](_0x520b90);
                    else {
                        const _0x41bec6 = (_0x5c4a5d, _0x5cb056) => _0x517ad8(_0x450ea5, _0x5c4a5d, _0x5cb056);
                        this['handshake'](_0x520b90['_query']['transport'], _0x520b90, _0x41bec6);
                    }
                };
                this['corsMiddleware'] ? this['corsMiddleware']['call'](null, _0x520b90, _0x450ea5, () => {
                    this['verify'](_0x520b90, ![], _0x15a484);
                }) : this['verify'](_0x520b90, ![], _0x15a484);
            }
            ['handleUpgrade'](_0x330be5, _0xa75e2b, _0x4b7abd) {
                this['prepare'](_0x330be5), this['verify'](_0x330be5, !![], (_0x25c8e4, _0x4ac914) => {
                    if (_0x25c8e4) {
                        this['emit']('connection_error', {
                            'req': _0x330be5,
                            'code': _0x25c8e4,
                            'message': _0x417ae6['errorMessages'][_0x25c8e4],
                            'context': _0x4ac914
                        }), _0x59e0fe(_0xa75e2b, _0x25c8e4, _0x4ac914);
                        return;
                    }
                    const _0x419c20 = Buffer['from'](_0x4b7abd);
                    _0x4b7abd = null, this['ws']['handleUpgrade'](_0x330be5, _0xa75e2b, _0x419c20, _0xc2fc7b => {
                        this['onWebSocket'](_0x330be5, _0xa75e2b, _0xc2fc7b);
                    });
                });
            }
            ['onWebSocket'](_0x3592b7, _0x596c96, _0x306b99) {
                _0x306b99['on']('error', _0x3d2276);
                if (_0x214b5f['default'][_0x3592b7['_query']['transport']] !== undefined && !_0x214b5f['default'][_0x3592b7['_query']['transport']]['prototype']['handlesUpgrades']) {
                    _0x5c7814('transport\x20doesnt\x20handle\x20upgraded\x20requests'), _0x306b99['close']();
                    return;
                }
                const _0x9f9564 = _0x3592b7['_query']['sid'];
                _0x3592b7['websocket'] = _0x306b99;
                if (_0x9f9564) {
                    const _0xc5ab52 = this['clients'][_0x9f9564];
                    if (!_0xc5ab52)
                        _0x5c7814('upgrade\x20attempt\x20for\x20closed\x20client'), _0x306b99['close']();
                    else {
                        if (_0xc5ab52['upgrading'])
                            _0x5c7814('transport\x20has\x20already\x20been\x20trying\x20to\x20upgrade'), _0x306b99['close']();
                        else {
                            if (_0xc5ab52['upgraded'])
                                _0x5c7814('transport\x20had\x20already\x20been\x20upgraded'), _0x306b99['close']();
                            else {
                                _0x5c7814('upgrading\x20existing\x20transport'), _0x306b99['removeListener']('error', _0x3d2276);
                                const _0x5a39d4 = this['createTransport'](_0x3592b7['_query']['transport'], _0x3592b7);
                                _0x3592b7['_query'] && _0x3592b7['_query']['b64'] ? _0x5a39d4['supportsBinary'] = ![] : _0x5a39d4['supportsBinary'] = !![], _0x5a39d4['perMessageDeflate'] = this['opts']['perMessageDeflate'], _0xc5ab52['maybeUpgrade'](_0x5a39d4);
                            }
                        }
                    }
                } else {
                    const _0x141d4b = (_0x5ac6be, _0x36828d) => _0x59e0fe(_0x596c96, _0x5ac6be, _0x36828d);
                    this['handshake'](_0x3592b7['_query']['transport'], _0x3592b7, _0x141d4b);
                }
                function _0x3d2276() {
                    _0x5c7814('websocket\x20error\x20before\x20upgrade');
                }
            }
            ['attach'](_0x1382a3, _0x3c3999 = {}) {
                let _0x2a6e91 = (_0x3c3999['path'] || '/engine.io')['replace'](/\/$/, '');
                const _0x18211b = _0x3c3999['destroyUpgradeTimeout'] || 0x3e8;
                _0x2a6e91 += '/';
                function _0x7a6cdd(_0x185d03) {
                    return _0x2a6e91 === _0x185d03['url']['substr'](0x0, _0x2a6e91['length']);
                }
                const _0xfe3a4d = _0x1382a3['listeners']('request')['slice'](0x0);
                _0x1382a3['removeAllListeners']('request'), _0x1382a3['on']('close', this['close']['bind'](this)), _0x1382a3['on']('listening', this['init']['bind'](this)), _0x1382a3['on']('request', (_0x1bcd21, _0x1802dc) => {
                    if (_0x7a6cdd(_0x1bcd21))
                        _0x5c7814('intercepting\x20request\x20for\x20path\x20\x22%s\x22', _0x2a6e91), this['handleRequest'](_0x1bcd21, _0x1802dc);
                    else {
                        let _0x895d80 = 0x0;
                        const _0x30925e = _0xfe3a4d['length'];
                        for (; _0x895d80 < _0x30925e; _0x895d80++) {
                            _0xfe3a4d[_0x895d80]['call'](_0x1382a3, _0x1bcd21, _0x1802dc);
                        }
                    }
                }), ~this['opts']['transports']['indexOf']('websocket') && _0x1382a3['on']('upgrade', (_0x1f321b, _0x1320af, _0x8ebe7) => {
                    if (_0x7a6cdd(_0x1f321b))
                        this['handleUpgrade'](_0x1f321b, _0x1320af, _0x8ebe7);
                    else
                        ![] !== _0x3c3999['destroyUpgrade'] && setTimeout(function () {
                            if (_0x1320af['writable'] && _0x1320af['bytesWritten'] <= 0x0)
                                return _0x1320af['end']();
                        }, _0x18211b);
                });
            }
        }
        _0x1f008c['Server'] = _0x417ae6;
        function _0x517ad8(_0x5dfea3, _0x577d37, _0x109e03) {
            const _0x16f893 = _0x577d37 === _0x417ae6['errors']['FORBIDDEN'] ? 0x193 : 0x190, _0x55fe8e = _0x109e03 && _0x109e03['message'] ? _0x109e03['message'] : _0x417ae6['errorMessages'][_0x577d37];
            _0x5dfea3['writeHead'](_0x16f893, { 'Content-Type': 'application/json' }), _0x5dfea3['end'](JSON['stringify']({
                'code': _0x577d37,
                'message': _0x55fe8e
            }));
        }
        function _0x59e0fe(_0x143330, _0x2257d6, _0x29fccd = {}) {
            _0x143330['on']('error', () => {
                _0x5c7814('ignoring\x20error\x20from\x20closed\x20connection');
            });
            if (_0x143330['writable']) {
                const _0x5bde7d = _0x29fccd['message'] || _0x417ae6['errorMessages'][_0x2257d6], _0x22c71a = Buffer['byteLength'](_0x5bde7d);
                _0x143330['write']('HTTP/1.1\x20400\x20Bad\x20Request\x0d\x0a' + 'Connection:\x20close\x0d\x0a' + 'Content-type:\x20text/html\x0d\x0a' + 'Content-Length:\x20' + _0x22c71a + '\x0d\x0a' + '\x0d\x0a' + _0x5bde7d);
            }
            _0x143330['destroy']();
        }
        const _0x53eb25 = [
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x1,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1
        ];
        function _0x2158dc(_0x5af5b1) {
            _0x5af5b1 += '';
            if (_0x5af5b1['length'] < 0x1)
                return ![];
            if (!_0x53eb25[_0x5af5b1['charCodeAt'](0x0)])
                return _0x5c7814('invalid\x20header,\x20index\x200,\x20char\x20\x22%s\x22', _0x5af5b1['charCodeAt'](0x0)), !![];
            if (_0x5af5b1['length'] < 0x2)
                return ![];
            if (!_0x53eb25[_0x5af5b1['charCodeAt'](0x1)])
                return _0x5c7814('invalid\x20header,\x20index\x201,\x20char\x20\x22%s\x22', _0x5af5b1['charCodeAt'](0x1)), !![];
            if (_0x5af5b1['length'] < 0x3)
                return ![];
            if (!_0x53eb25[_0x5af5b1['charCodeAt'](0x2)])
                return _0x5c7814('invalid\x20header,\x20index\x202,\x20char\x20\x22%s\x22', _0x5af5b1['charCodeAt'](0x2)), !![];
            if (_0x5af5b1['length'] < 0x4)
                return ![];
            if (!_0x53eb25[_0x5af5b1['charCodeAt'](0x3)])
                return _0x5c7814('invalid\x20header,\x20index\x203,\x20char\x20\x22%s\x22', _0x5af5b1['charCodeAt'](0x3)), !![];
            for (let _0x12431c = 0x4; _0x12431c < _0x5af5b1['length']; ++_0x12431c) {
                if (!_0x53eb25[_0x5af5b1['charCodeAt'](_0x12431c)])
                    return _0x5c7814('invalid\x20header,\x20index\x20\x22%i\x22,\x20char\x20\x22%s\x22', _0x12431c, _0x5af5b1['charCodeAt'](_0x12431c)), !![];
            }
            return ![];
        }
    },
    0xc263: (_0x435362, _0x41ab19, _0x372ddb) => {
        'use strict';
        Object['defineProperty'](_0x41ab19, '__esModule', { 'value': !![] }), _0x41ab19['Socket'] = void 0x0;
        const _0x2e8d4c = _0x372ddb(0x141b9), _0x5e1757 = _0x372ddb(0x566b), _0x534f4f = _0x372ddb(0x9a58), _0x424fe5 = (0x0, _0x5e1757['default'])('engine:socket');
        class _0x49205c extends _0x2e8d4c['EventEmitter'] {
            constructor(_0x25e0df, _0x2704bc, _0x389cce, _0x504db6, _0xe483af) {
                super(), this['id'] = _0x25e0df, this['server'] = _0x2704bc, this['upgrading'] = ![], this['upgraded'] = ![], this['readyState'] = 'opening', this['writeBuffer'] = [], this['packetsFn'] = [], this['sentCallbackFn'] = [], this['cleanupFn'] = [], this['request'] = _0x504db6, this['protocol'] = _0xe483af, _0x504db6['websocket'] && _0x504db6['websocket']['_socket'] ? this['remoteAddress'] = _0x504db6['websocket']['_socket']['remoteAddress'] : this['remoteAddress'] = _0x504db6['connection']['remoteAddress'], this['checkIntervalTimer'] = null, this['upgradeTimeoutTimer'] = null, this['pingTimeoutTimer'] = null, this['pingIntervalTimer'] = null, this['setTransport'](_0x389cce), this['onOpen']();
            }
            get ['readyState']() {
                return this['_readyState'];
            }
            set ['readyState'](_0x43255c) {
                _0x424fe5('readyState\x20updated\x20from\x20%s\x20to\x20%s', this['_readyState'], _0x43255c), this['_readyState'] = _0x43255c;
            }
            ['onOpen']() {
                this['readyState'] = 'open', this['transport']['sid'] = this['id'], this['sendPacket']('open', JSON['stringify']({
                    'sid': this['id'],
                    'upgrades': this['getAvailableUpgrades'](),
                    'pingInterval': this['server']['opts']['pingInterval'],
                    'pingTimeout': this['server']['opts']['pingTimeout'],
                    'maxPayload': this['server']['opts']['maxHttpBufferSize']
                })), this['server']['opts']['initialPacket'] && this['sendPacket']('message', this['server']['opts']['initialPacket']), this['emit']('open'), this['protocol'] === 0x3 ? this['resetPingTimeout'](this['server']['opts']['pingInterval'] + this['server']['opts']['pingTimeout']) : this['schedulePing']();
            }
            ['onPacket'](_0x10d2ef) {
                if ('open' !== this['readyState'])
                    return _0x424fe5('packet\x20received\x20with\x20closed\x20socket');
                _0x424fe5('received\x20packet\x20' + _0x10d2ef['type']), this['emit']('packet', _0x10d2ef), this['resetPingTimeout'](this['server']['opts']['pingInterval'] + this['server']['opts']['pingTimeout']);
                switch (_0x10d2ef['type']) {
                case 'ping':
                    if (this['transport']['protocol'] !== 0x3) {
                        this['onError']('invalid\x20heartbeat\x20direction');
                        return;
                    }
                    _0x424fe5('got\x20ping'), this['sendPacket']('pong'), this['emit']('heartbeat');
                    break;
                case 'pong':
                    if (this['transport']['protocol'] === 0x3) {
                        this['onError']('invalid\x20heartbeat\x20direction');
                        return;
                    }
                    _0x424fe5('got\x20pong'), this['pingIntervalTimer']['refresh'](), this['emit']('heartbeat');
                    break;
                case 'error':
                    this['onClose']('parse\x20error');
                    break;
                case 'message':
                    this['emit']('data', _0x10d2ef['data']), this['emit']('message', _0x10d2ef['data']);
                    break;
                }
            }
            ['onError'](_0x32332f) {
                _0x424fe5('transport\x20error'), this['onClose']('transport\x20error', _0x32332f);
            }
            ['schedulePing']() {
                this['pingIntervalTimer'] = (0x0, _0x534f4f['setTimeout'])(() => {
                    _0x424fe5('writing\x20ping\x20packet\x20-\x20expecting\x20pong\x20within\x20%sms', this['server']['opts']['pingTimeout']), this['sendPacket']('ping'), this['resetPingTimeout'](this['server']['opts']['pingTimeout']);
                }, this['server']['opts']['pingInterval']);
            }
            ['resetPingTimeout'](_0x35071a) {
                (0x0, _0x534f4f['clearTimeout'])(this['pingTimeoutTimer']), this['pingTimeoutTimer'] = (0x0, _0x534f4f['setTimeout'])(() => {
                    if (this['readyState'] === 'closed')
                        return;
                    this['onClose']('ping\x20timeout');
                }, _0x35071a);
            }
            ['setTransport'](_0x5a0834) {
                const _0x270d59 = this['onError']['bind'](this), _0x4aa754 = this['onPacket']['bind'](this), _0x1da9f4 = this['flush']['bind'](this), _0x2e6c14 = this['onClose']['bind'](this, 'transport\x20close');
                this['transport'] = _0x5a0834, this['transport']['once']('error', _0x270d59), this['transport']['on']('packet', _0x4aa754), this['transport']['on']('drain', _0x1da9f4), this['transport']['once']('close', _0x2e6c14), this['setupSendCallback'](), this['cleanupFn']['push'](function () {
                    _0x5a0834['removeListener']('error', _0x270d59), _0x5a0834['removeListener']('packet', _0x4aa754), _0x5a0834['removeListener']('drain', _0x1da9f4), _0x5a0834['removeListener']('close', _0x2e6c14);
                });
            }
            ['maybeUpgrade'](_0x5ef1cf) {
                _0x424fe5('might\x20upgrade\x20socket\x20transport\x20from\x20\x22%s\x22\x20to\x20\x22%s\x22', this['transport']['name'], _0x5ef1cf['name']), this['upgrading'] = !![], this['upgradeTimeoutTimer'] = (0x0, _0x534f4f['setTimeout'])(() => {
                    _0x424fe5('client\x20did\x20not\x20complete\x20upgrade\x20-\x20closing\x20transport'), _0x22ded5(), 'open' === _0x5ef1cf['readyState'] && _0x5ef1cf['close']();
                }, this['server']['opts']['upgradeTimeout']);
                const _0x12a7eb = _0x3e4843 => {
                        if ('ping' === _0x3e4843['type'] && 'probe' === _0x3e4843['data'])
                            _0x424fe5('got\x20probe\x20ping\x20packet,\x20sending\x20pong'), _0x5ef1cf['send']([{
                                    'type': 'pong',
                                    'data': 'probe'
                                }]), this['emit']('upgrading', _0x5ef1cf), clearInterval(this['checkIntervalTimer']), this['checkIntervalTimer'] = setInterval(_0x308214, 0x64);
                        else
                            'upgrade' === _0x3e4843['type'] && this['readyState'] !== 'closed' ? (_0x424fe5('got\x20upgrade\x20packet\x20-\x20upgrading'), _0x22ded5(), this['transport']['discard'](), this['upgraded'] = !![], this['clearTransport'](), this['setTransport'](_0x5ef1cf), this['emit']('upgrade', _0x5ef1cf), this['flush'](), this['readyState'] === 'closing' && _0x5ef1cf['close'](() => {
                                this['onClose']('forced\x20close');
                            })) : (_0x22ded5(), _0x5ef1cf['close']());
                    }, _0x308214 = () => {
                        'polling' === this['transport']['name'] && this['transport']['writable'] && (_0x424fe5('writing\x20a\x20noop\x20packet\x20to\x20polling\x20for\x20fast\x20upgrade'), this['transport']['send']([{ 'type': 'noop' }]));
                    }, _0x22ded5 = () => {
                        this['upgrading'] = ![], clearInterval(this['checkIntervalTimer']), this['checkIntervalTimer'] = null, (0x0, _0x534f4f['clearTimeout'])(this['upgradeTimeoutTimer']), this['upgradeTimeoutTimer'] = null, _0x5ef1cf['removeListener']('packet', _0x12a7eb), _0x5ef1cf['removeListener']('close', _0xa21eb), _0x5ef1cf['removeListener']('error', _0x5e461d), this['removeListener']('close', _0x4dbabb);
                    }, _0x5e461d = _0x407e03 => {
                        _0x424fe5('client\x20did\x20not\x20complete\x20upgrade\x20-\x20%s', _0x407e03), _0x22ded5(), _0x5ef1cf['close'](), _0x5ef1cf = null;
                    }, _0xa21eb = () => {
                        _0x5e461d('transport\x20closed');
                    }, _0x4dbabb = () => {
                        _0x5e461d('socket\x20closed');
                    };
                _0x5ef1cf['on']('packet', _0x12a7eb), _0x5ef1cf['once']('close', _0xa21eb), _0x5ef1cf['once']('error', _0x5e461d), this['once']('close', _0x4dbabb);
            }
            ['clearTransport']() {
                let _0x5f3174;
                const _0x15c249 = this['cleanupFn']['length'];
                for (let _0x11866f = 0x0; _0x11866f < _0x15c249; _0x11866f++) {
                    _0x5f3174 = this['cleanupFn']['shift'](), _0x5f3174();
                }
                this['transport']['on']('error', function () {
                    _0x424fe5('error\x20triggered\x20by\x20discarded\x20transport');
                }), this['transport']['close'](), (0x0, _0x534f4f['clearTimeout'])(this['pingTimeoutTimer']);
            }
            ['onClose'](_0x3da8ee, _0x1731a5) {
                'closed' !== this['readyState'] && (this['readyState'] = 'closed', (0x0, _0x534f4f['clearTimeout'])(this['pingIntervalTimer']), (0x0, _0x534f4f['clearTimeout'])(this['pingTimeoutTimer']), clearInterval(this['checkIntervalTimer']), this['checkIntervalTimer'] = null, (0x0, _0x534f4f['clearTimeout'])(this['upgradeTimeoutTimer']), process['nextTick'](() => {
                    this['writeBuffer'] = [];
                }), this['packetsFn'] = [], this['sentCallbackFn'] = [], this['clearTransport'](), this['emit']('close', _0x3da8ee, _0x1731a5));
            }
            ['setupSendCallback']() {
                const _0x48e6af = () => {
                    if (this['sentCallbackFn']['length'] > 0x0) {
                        const _0x2351c0 = this['sentCallbackFn']['splice'](0x0, 0x1)[0x0];
                        if ('function' === typeof _0x2351c0)
                            _0x424fe5('executing\x20send\x20callback'), _0x2351c0(this['transport']);
                        else {
                            if (Array['isArray'](_0x2351c0)) {
                                _0x424fe5('executing\x20batch\x20send\x20callback');
                                const _0x4bb142 = _0x2351c0['length'];
                                let _0x260a9c = 0x0;
                                for (; _0x260a9c < _0x4bb142; _0x260a9c++) {
                                    'function' === typeof _0x2351c0[_0x260a9c] && _0x2351c0[_0x260a9c](this['transport']);
                                }
                            }
                        }
                    }
                };
                this['transport']['on']('drain', _0x48e6af), this['cleanupFn']['push'](() => {
                    this['transport']['removeListener']('drain', _0x48e6af);
                });
            }
            ['send'](_0x3d6e00, _0x39bc7a, _0x161295) {
                return this['sendPacket']('message', _0x3d6e00, _0x39bc7a, _0x161295), this;
            }
            ['write'](_0x1eb893, _0x2bcdb1, _0x5219b4) {
                return this['sendPacket']('message', _0x1eb893, _0x2bcdb1, _0x5219b4), this;
            }
            ['sendPacket'](_0xc0446e, _0x4f67a2, _0x259d33, _0x3338dd) {
                'function' === typeof _0x259d33 && (_0x3338dd = _0x259d33, _0x259d33 = null);
                _0x259d33 = _0x259d33 || {}, _0x259d33['compress'] = ![] !== _0x259d33['compress'];
                if ('closing' !== this['readyState'] && 'closed' !== this['readyState']) {
                    _0x424fe5('sending\x20packet\x20\x22%s\x22\x20(%s)', _0xc0446e, _0x4f67a2);
                    const _0x541b94 = {
                        'type': _0xc0446e,
                        'options': _0x259d33
                    };
                    if (_0x4f67a2)
                        _0x541b94['data'] = _0x4f67a2;
                    this['emit']('packetCreate', _0x541b94), this['writeBuffer']['push'](_0x541b94);
                    if (_0x3338dd)
                        this['packetsFn']['push'](_0x3338dd);
                    this['flush']();
                }
            }
            ['flush']() {
                if ('closed' !== this['readyState'] && this['transport']['writable'] && this['writeBuffer']['length']) {
                    _0x424fe5('flushing\x20buffer\x20to\x20transport'), this['emit']('flush', this['writeBuffer']), this['server']['emit']('flush', this, this['writeBuffer']);
                    const _0x36a12a = this['writeBuffer'];
                    this['writeBuffer'] = [], !this['transport']['supportsFraming'] ? this['sentCallbackFn']['push'](this['packetsFn']) : this['sentCallbackFn']['push']['apply'](this['sentCallbackFn'], this['packetsFn']), this['packetsFn'] = [], this['transport']['send'](_0x36a12a), this['emit']('drain'), this['server']['emit']('drain', this);
                }
            }
            ['getAvailableUpgrades']() {
                const _0x2a19f0 = [], _0x507748 = this['server']['upgrades'](this['transport']['name']);
                let _0x6f630f = 0x0;
                const _0xa6fa83 = _0x507748['length'];
                for (; _0x6f630f < _0xa6fa83; ++_0x6f630f) {
                    const _0x48fb1d = _0x507748[_0x6f630f];
                    this['server']['opts']['transports']['indexOf'](_0x48fb1d) !== -0x1 && _0x2a19f0['push'](_0x48fb1d);
                }
                return _0x2a19f0;
            }
            ['close'](_0x387e2d) {
                if ('open' !== this['readyState'])
                    return;
                this['readyState'] = 'closing';
                if (this['writeBuffer']['length']) {
                    this['once']('drain', this['closeTransport']['bind'](this, _0x387e2d));
                    return;
                }
                this['closeTransport'](_0x387e2d);
            }
            ['closeTransport'](_0x4560c5) {
                if (_0x4560c5)
                    this['transport']['discard']();
                this['transport']['close'](this['onClose']['bind'](this, 'forced\x20close'));
            }
        }
        _0x41ab19['Socket'] = _0x49205c;
    },
    0x2f5a: (_0x3f548c, _0x463af3, _0x35837d) => {
        'use strict';
        Object['defineProperty'](_0x463af3, '__esModule', { 'value': !![] }), _0x463af3['Transport'] = void 0x0;
        const _0x3ee8aa = _0x35837d(0x141b9), _0x886d7a = _0x35837d(0xd949), _0x509fcf = _0x35837d(0x3c42), _0x2a8d00 = _0x35837d(0x566b), _0x30fba8 = (0x0, _0x2a8d00['default'])('engine:transport');
        function _0x5c4617() {
        }
        class _0xb721ff extends _0x3ee8aa['EventEmitter'] {
            constructor(_0x1b6d21) {
                super(), this['readyState'] = 'open', this['discarded'] = ![], this['protocol'] = _0x1b6d21['_query']['EIO'] === '4' ? 0x4 : 0x3, this['parser'] = this['protocol'] === 0x4 ? _0x886d7a : _0x509fcf;
            }
            get ['readyState']() {
                return this['_readyState'];
            }
            set ['readyState'](_0x950527) {
                _0x30fba8('readyState\x20updated\x20from\x20%s\x20to\x20%s\x20(%s)', this['_readyState'], _0x950527, this['name']), this['_readyState'] = _0x950527;
            }
            ['discard']() {
                this['discarded'] = !![];
            }
            ['onRequest'](_0x5716fd) {
                _0x30fba8('setting\x20request'), this['req'] = _0x5716fd;
            }
            ['close'](_0x1117c5) {
                if ('closed' === this['readyState'] || 'closing' === this['readyState'])
                    return;
                this['readyState'] = 'closing', this['doClose'](_0x1117c5 || _0x5c4617);
            }
            ['onError'](_0x2e0b77, _0x151925) {
                if (this['listeners']('error')['length']) {
                    const _0x3efee8 = new Error(_0x2e0b77);
                    _0x3efee8['type'] = 'TransportError', _0x3efee8['description'] = _0x151925, this['emit']('error', _0x3efee8);
                } else
                    _0x30fba8('ignored\x20transport\x20error\x20%s\x20(%s)', _0x2e0b77, _0x151925);
            }
            ['onPacket'](_0x268130) {
                this['emit']('packet', _0x268130);
            }
            ['onData'](_0x4eb11c) {
                this['onPacket'](this['parser']['decodePacket'](_0x4eb11c));
            }
            ['onClose']() {
                this['readyState'] = 'closed', this['emit']('close');
            }
        }
        _0x463af3['Transport'] = _0xb721ff;
    },
    0xd33e: (_0x892987, _0x7a7b02, _0x2e6cc2) => {
        'use strict';
        Object['defineProperty'](_0x7a7b02, '__esModule', { 'value': !![] });
        const _0xfdd805 = _0x2e6cc2(0xc86), _0x7f457c = _0x2e6cc2(0x1849);
        _0x7a7b02['default'] = {
            'polling': _0xfdd805['Polling'],
            'websocket': _0x7f457c['WebSocket']
        };
    },
    0xc86: (_0x2acf2b, _0xa4128c, _0xc93019) => {
        'use strict';
        Object['defineProperty'](_0xa4128c, '__esModule', { 'value': !![] }), _0xa4128c['Polling'] = void 0x0;
        const _0x361191 = _0xc93019(0x2f5a), _0x5eefbe = _0xc93019(0xe994), _0x4d0cca = _0xc93019(0x12bf4), _0x1ce7da = _0xc93019(0x566b), _0x48baef = (0x0, _0x1ce7da['default'])('engine:polling'), _0x1a5515 = {
                'gzip': _0x5eefbe['createGzip'],
                'deflate': _0x5eefbe['createDeflate']
            };
        class _0x108719 extends _0x361191['Transport'] {
            constructor(_0x33f96d) {
                super(_0x33f96d), this['closeTimeout'] = 0x1e * 0x3e8;
            }
            get ['name']() {
                return 'polling';
            }
            get ['supportsFraming']() {
                return ![];
            }
            ['onRequest'](_0x204158) {
                const _0x31e5fe = _0x204158['res'];
                if (_0x204158['getMethod']() === 'get')
                    this['onPollRequest'](_0x204158, _0x31e5fe);
                else
                    _0x204158['getMethod']() === 'post' ? this['onDataRequest'](_0x204158, _0x31e5fe) : (_0x31e5fe['writeStatus']('500\x20Internal\x20Server\x20Error'), _0x31e5fe['end']());
            }
            ['onPollRequest'](_0x452087, _0x5d9197) {
                if (this['req']) {
                    _0x48baef('request\x20overlap'), this['onError']('overlap\x20from\x20client'), _0x5d9197['writeStatus']('500\x20Internal\x20Server\x20Error'), _0x5d9197['end']();
                    return;
                }
                _0x48baef('setting\x20request'), this['req'] = _0x452087, this['res'] = _0x5d9197;
                const _0x3dcffc = () => {
                        this['writable'] = ![], this['onError']('poll\x20connection\x20closed\x20prematurely');
                    }, _0x45d85f = () => {
                        this['req'] = this['res'] = null;
                    };
                _0x452087['cleanup'] = _0x45d85f, _0x5d9197['onAborted'](_0x3dcffc), this['writable'] = !![], this['emit']('drain'), this['writable'] && this['shouldClose'] && (_0x48baef('triggering\x20empty\x20send\x20to\x20append\x20close\x20packet'), this['send']([{ 'type': 'noop' }]));
            }
            ['onDataRequest'](_0x183190, _0x58d3f1) {
                if (this['dataReq']) {
                    this['onError']('data\x20request\x20overlap\x20from\x20client'), _0x58d3f1['writeStatus']('500\x20Internal\x20Server\x20Error'), _0x58d3f1['end']();
                    return;
                }
                const _0x2228ac = Number(_0x183190['headers']['content-length']);
                if (!_0x2228ac) {
                    this['onError']('content-length\x20header\x20required'), _0x58d3f1['writeStatus']('411\x20Length\x20Required')['end']();
                    return;
                }
                if (_0x2228ac > this['maxHttpBufferSize']) {
                    this['onError']('payload\x20too\x20large'), _0x58d3f1['writeStatus']('413\x20Payload\x20Too\x20Large')['end']();
                    return;
                }
                const _0x164363 = 'application/octet-stream' === _0x183190['headers']['content-type'];
                if (_0x164363 && this['protocol'] === 0x4)
                    return this['onError']('invalid\x20content');
                this['dataReq'] = _0x183190, this['dataRes'] = _0x58d3f1;
                let _0x290f33, _0x4ba8bc = 0x0;
                const _0x771901 = { 'Content-Type': 'text/html' };
                this['headers'](_0x183190, _0x771901);
                for (let _0x40e353 in _0x771901) {
                    _0x58d3f1['writeHeader'](_0x40e353, String(_0x771901[_0x40e353]));
                }
                const _0x512d2c = _0x2e8b23 => {
                    this['onData'](_0x2e8b23['toString']()), this['onDataRequestCleanup'](), _0x58d3f1['end']('ok');
                };
                _0x58d3f1['onAborted'](() => {
                    this['onDataRequestCleanup'](), this['onError']('data\x20request\x20connection\x20closed\x20prematurely');
                }), _0x58d3f1['onData']((_0x1067ed, _0xe38a8e) => {
                    const _0x4bd247 = _0x4ba8bc + _0x1067ed['byteLength'];
                    if (_0x4bd247 > _0x2228ac) {
                        this['onError']('content-length\x20mismatch'), _0x58d3f1['close']();
                        return;
                    }
                    if (!_0x290f33) {
                        if (_0xe38a8e) {
                            _0x512d2c(Buffer['from'](_0x1067ed));
                            return;
                        }
                        _0x290f33 = Buffer['allocUnsafe'](_0x2228ac);
                    }
                    Buffer['from'](_0x1067ed)['copy'](_0x290f33, _0x4ba8bc);
                    if (_0xe38a8e) {
                        if (_0x4bd247 != _0x2228ac) {
                            this['onError']('content-length\x20mismatch'), _0x58d3f1['writeStatus']('400\x20Content-Length\x20Mismatch')['end'](), this['onDataRequestCleanup']();
                            return;
                        }
                        _0x512d2c(_0x290f33);
                        return;
                    }
                    _0x4ba8bc = _0x4bd247;
                });
            }
            ['onDataRequestCleanup']() {
                this['dataReq'] = this['dataRes'] = null;
            }
            ['onData'](_0x270b9b) {
                _0x48baef('received\x20\x22%s\x22', _0x270b9b);
                const _0x38e292 = _0x269961 => {
                    if ('close' === _0x269961['type'])
                        return _0x48baef('got\x20xhr\x20close\x20packet'), this['onClose'](), ![];
                    this['onPacket'](_0x269961);
                };
                this['protocol'] === 0x3 ? this['parser']['decodePayload'](_0x270b9b, _0x38e292) : this['parser']['decodePayload'](_0x270b9b)['forEach'](_0x38e292);
            }
            ['onClose']() {
                this['writable'] && this['send']([{ 'type': 'noop' }]), super['onClose']();
            }
            ['send'](_0x29f292) {
                this['writable'] = ![];
                this['shouldClose'] && (_0x48baef('appending\x20close\x20packet\x20to\x20payload'), _0x29f292['push']({ 'type': 'close' }), this['shouldClose'](), this['shouldClose'] = null);
                const _0x4c2672 = _0x54ac88 => {
                    const _0x4b0bff = _0x29f292['some'](_0x479d3e => {
                        return _0x479d3e['options'] && _0x479d3e['options']['compress'];
                    });
                    this['write'](_0x54ac88, { 'compress': _0x4b0bff });
                };
                this['protocol'] === 0x3 ? this['parser']['encodePayload'](_0x29f292, this['supportsBinary'], _0x4c2672) : this['parser']['encodePayload'](_0x29f292, _0x4c2672);
            }
            ['write'](_0x14f9ce, _0x34e739) {
                _0x48baef('writing\x20\x22%s\x22', _0x14f9ce), this['doWrite'](_0x14f9ce, _0x34e739, () => {
                    this['req']['cleanup']();
                });
            }
            ['doWrite'](_0x3d113a, _0xd31964, _0x5acf27) {
                const _0x254b34 = typeof _0x3d113a === 'string', _0x493104 = _0x254b34 ? 'text/plain;\x20charset=UTF-8' : 'application/octet-stream', _0xaab488 = { 'Content-Type': _0x493104 }, _0x39dfcd = _0x12d8b4 => {
                        this['headers'](this['req'], _0xaab488), Object['keys'](_0xaab488)['forEach'](_0x4352a5 => {
                            this['res']['writeHeader'](_0x4352a5, String(_0xaab488[_0x4352a5]));
                        }), this['res']['end'](_0x12d8b4), _0x5acf27();
                    };
                if (!this['httpCompression'] || !_0xd31964['compress']) {
                    _0x39dfcd(_0x3d113a);
                    return;
                }
                const _0x27195c = _0x254b34 ? Buffer['byteLength'](_0x3d113a) : _0x3d113a['length'];
                if (_0x27195c < this['httpCompression']['threshold']) {
                    _0x39dfcd(_0x3d113a);
                    return;
                }
                const _0x181949 = _0x4d0cca(this['req'])['encodings']([
                    'gzip',
                    'deflate'
                ]);
                if (!_0x181949) {
                    _0x39dfcd(_0x3d113a);
                    return;
                }
                this['compress'](_0x3d113a, _0x181949, (_0x29d75a, _0xc07cd7) => {
                    if (_0x29d75a) {
                        this['res']['writeStatus']('500\x20Internal\x20Server\x20Error'), this['res']['end'](), _0x5acf27(_0x29d75a);
                        return;
                    }
                    _0xaab488['Content-Encoding'] = _0x181949, _0x39dfcd(_0xc07cd7);
                });
            }
            ['compress'](_0x2b50d9, _0x3ffe44, _0x5a0db5) {
                _0x48baef('compressing');
                const _0x4b4291 = [];
                let _0x492fec = 0x0;
                _0x1a5515[_0x3ffe44](this['httpCompression'])['on']('error', _0x5a0db5)['on']('data', function (_0x4e124d) {
                    _0x4b4291['push'](_0x4e124d), _0x492fec += _0x4e124d['length'];
                })['on']('end', function () {
                    _0x5a0db5(null, Buffer['concat'](_0x4b4291, _0x492fec));
                })['end'](_0x2b50d9);
            }
            ['doClose'](_0x58f794) {
                _0x48baef('closing');
                let _0x48c631;
                const _0x418060 = () => {
                    clearTimeout(_0x48c631), _0x58f794(), this['onClose']();
                };
                if (this['writable'])
                    _0x48baef('transport\x20writable\x20-\x20closing\x20right\x20away'), this['send']([{ 'type': 'close' }]), _0x418060();
                else
                    this['discarded'] ? (_0x48baef('transport\x20discarded\x20-\x20closing\x20right\x20away'), _0x418060()) : (_0x48baef('transport\x20not\x20writable\x20-\x20buffering\x20orderly\x20close'), this['shouldClose'] = _0x418060, _0x48c631 = setTimeout(_0x418060, this['closeTimeout']));
            }
            ['headers'](_0x3d06d7, _0x1b390f) {
                _0x1b390f = _0x1b390f || {};
                const _0x3cb464 = _0x3d06d7['headers']['user-agent'];
                return _0x3cb464 && (~_0x3cb464['indexOf'](';MSIE') || ~_0x3cb464['indexOf']('Trident/')) && (_0x1b390f['X-XSS-Protection'] = '0'), this['emit']('headers', _0x1b390f, _0x3d06d7), _0x1b390f;
            }
        }
        _0xa4128c['Polling'] = _0x108719;
    },
    0x1849: (_0x634bed, _0x1bfbd3, _0x2361b0) => {
        'use strict';
        Object['defineProperty'](_0x1bfbd3, '__esModule', { 'value': !![] }), _0x1bfbd3['WebSocket'] = void 0x0;
        const _0x2f8a48 = _0x2361b0(0x2f5a), _0x355e33 = _0x2361b0(0x566b), _0x432150 = (0x0, _0x355e33['default'])('engine:ws');
        class _0x2592a5 extends _0x2f8a48['Transport'] {
            constructor(_0xcce714) {
                super(_0xcce714), this['writable'] = ![], this['perMessageDeflate'] = null;
            }
            get ['name']() {
                return 'websocket';
            }
            get ['handlesUpgrades']() {
                return !![];
            }
            get ['supportsFraming']() {
                return !![];
            }
            ['send'](_0x232f70) {
                const _0x1584df = _0x232f70['shift']();
                if (typeof _0x1584df === 'undefined') {
                    this['writable'] = !![], this['emit']('drain');
                    return;
                }
                const _0x35800b = {};
                _0x1584df['options'] && (_0x35800b['compress'] = _0x1584df['options']['compress']);
                const _0x295fee = _0x2cc5aa => {
                    const _0x5f596c = typeof _0x2cc5aa !== 'string', _0x452dae = this['perMessageDeflate'] && Buffer['byteLength'](_0x2cc5aa) > this['perMessageDeflate']['threshold'];
                    _0x432150('writing\x20\x22%s\x22', _0x2cc5aa), this['writable'] = ![], this['socket']['send'](_0x2cc5aa, _0x5f596c, _0x452dae), this['send'](_0x232f70);
                };
                _0x1584df['options'] && typeof _0x1584df['options']['wsPreEncoded'] === 'string' ? _0x295fee(_0x1584df['options']['wsPreEncoded']) : this['parser']['encodePacket'](_0x1584df, this['supportsBinary'], _0x295fee);
            }
            ['doClose'](_0x2dfb4e) {
                _0x432150('closing'), _0x2dfb4e && _0x2dfb4e(), this['socket']['close']();
            }
        }
        _0x1bfbd3['WebSocket'] = _0x2592a5;
    },
    0x2205: (_0x378ef2, _0x385811, _0x3882bf) => {
        'use strict';
        Object['defineProperty'](_0x385811, '__esModule', { 'value': !![] });
        const _0x4f2240 = _0x3882bf(0x15203), _0x2e5d9c = _0x3882bf(0x16dcc), _0x59b831 = _0x3882bf(0x157ba);
        _0x385811['default'] = {
            'polling': _0x2fc951,
            'websocket': _0x59b831['WebSocket']
        };
        function _0x2fc951(_0x1e92d9) {
            return 'string' === typeof _0x1e92d9['_query']['j'] ? new _0x2e5d9c['JSONP'](_0x1e92d9) : new _0x4f2240['Polling'](_0x1e92d9);
        }
        _0x2fc951['upgradesTo'] = ['websocket'];
    },
    0x16dcc: (_0x4b7ae1, _0x366229, _0x1bf93e) => {
        'use strict';
        Object['defineProperty'](_0x366229, '__esModule', { 'value': !![] }), _0x366229['JSONP'] = void 0x0;
        const _0x164929 = _0x1bf93e(0x15203), _0x26b44e = _0x1bf93e(0xf7f5), _0x4e2208 = /\\\\n/g, _0x85078 = /(\\)?\\n/g;
        class _0x3047a4 extends _0x164929['Polling'] {
            constructor(_0xf71ee7) {
                super(_0xf71ee7), this['head'] = '___eio[' + (_0xf71ee7['_query']['j'] || '')['replace'](/[^0-9]/g, '') + '](', this['foot'] = ');';
            }
            ['onData'](_0x2b4338) {
                _0x2b4338 = _0x26b44e['parse'](_0x2b4338)['d'], 'string' === typeof _0x2b4338 && (_0x2b4338 = _0x2b4338['replace'](_0x85078, function (_0x604bce, _0xf7ab4d) {
                    return _0xf7ab4d ? _0x604bce : '\x0a';
                }), super['onData'](_0x2b4338['replace'](_0x4e2208, '\x5cn')));
            }
            ['doWrite'](_0xf18001, _0x549e1f, _0x2d46af) {
                const _0x5890ca = JSON['stringify'](_0xf18001)['replace'](/\u2028/g, '\x5cu2028')['replace'](/\u2029/g, '\x5cu2029');
                _0xf18001 = this['head'] + _0x5890ca + this['foot'], super['doWrite'](_0xf18001, _0x549e1f, _0x2d46af);
            }
        }
        _0x366229['JSONP'] = _0x3047a4;
    },
    0x15203: (_0x1a0ad5, _0x27b271, _0x4c4efc) => {
        'use strict';
        Object['defineProperty'](_0x27b271, '__esModule', { 'value': !![] }), _0x27b271['Polling'] = void 0x0;
        const _0x6d377c = _0x4c4efc(0x2f5a), _0x53b372 = _0x4c4efc(0xe994), _0x3888c3 = _0x4c4efc(0x12bf4), _0x4c4330 = _0x4c4efc(0x566b), _0x4953c5 = (0x0, _0x4c4330['default'])('engine:polling'), _0x56b546 = {
                'gzip': _0x53b372['createGzip'],
                'deflate': _0x53b372['createDeflate']
            };
        class _0x4d19fe extends _0x6d377c['Transport'] {
            constructor(_0x585c8d) {
                super(_0x585c8d), this['closeTimeout'] = 0x1e * 0x3e8;
            }
            get ['name']() {
                return 'polling';
            }
            get ['supportsFraming']() {
                return ![];
            }
            ['onRequest'](_0xf1e559) {
                const _0x30f674 = _0xf1e559['res'];
                if ('GET' === _0xf1e559['method'])
                    this['onPollRequest'](_0xf1e559, _0x30f674);
                else
                    'POST' === _0xf1e559['method'] ? this['onDataRequest'](_0xf1e559, _0x30f674) : (_0x30f674['writeHead'](0x1f4), _0x30f674['end']());
            }
            ['onPollRequest'](_0x2552db, _0x30fe54) {
                if (this['req']) {
                    _0x4953c5('request\x20overlap'), this['onError']('overlap\x20from\x20client'), _0x30fe54['writeHead'](0x1f4), _0x30fe54['end']();
                    return;
                }
                _0x4953c5('setting\x20request'), this['req'] = _0x2552db, this['res'] = _0x30fe54;
                const _0xd1f97 = () => {
                        this['onError']('poll\x20connection\x20closed\x20prematurely');
                    }, _0xec2f4e = () => {
                        _0x2552db['removeListener']('close', _0xd1f97), this['req'] = this['res'] = null;
                    };
                _0x2552db['cleanup'] = _0xec2f4e, _0x2552db['on']('close', _0xd1f97), this['writable'] = !![], this['emit']('drain'), this['writable'] && this['shouldClose'] && (_0x4953c5('triggering\x20empty\x20send\x20to\x20append\x20close\x20packet'), this['send']([{ 'type': 'noop' }]));
            }
            ['onDataRequest'](_0x34073c, _0x3ceecf) {
                if (this['dataReq']) {
                    this['onError']('data\x20request\x20overlap\x20from\x20client'), _0x3ceecf['writeHead'](0x1f4), _0x3ceecf['end']();
                    return;
                }
                const _0xcfdebf = 'application/octet-stream' === _0x34073c['headers']['content-type'];
                if (_0xcfdebf && this['protocol'] === 0x4)
                    return this['onError']('invalid\x20content');
                this['dataReq'] = _0x34073c, this['dataRes'] = _0x3ceecf;
                let _0x2534cb = _0xcfdebf ? Buffer['concat']([]) : '';
                const _0x475b64 = () => {
                        _0x34073c['removeListener']('data', _0x47db37), _0x34073c['removeListener']('end', _0x4075b8), _0x34073c['removeListener']('close', _0x2f69a4), this['dataReq'] = this['dataRes'] = _0x2534cb = null;
                    }, _0x2f69a4 = () => {
                        _0x475b64(), this['onError']('data\x20request\x20connection\x20closed\x20prematurely');
                    }, _0x47db37 = _0x1f45a5 => {
                        let _0x26d718;
                        _0xcfdebf ? (_0x2534cb = Buffer['concat']([
                            _0x2534cb,
                            _0x1f45a5
                        ]), _0x26d718 = _0x2534cb['length']) : (_0x2534cb += _0x1f45a5, _0x26d718 = Buffer['byteLength'](_0x2534cb)), _0x26d718 > this['maxHttpBufferSize'] && (_0x3ceecf['writeHead'](0x19d)['end'](), _0x475b64());
                    }, _0x4075b8 = () => {
                        this['onData'](_0x2534cb);
                        const _0x4ee8e7 = {
                            'Content-Type': 'text/html',
                            'Content-Length': 0x2
                        };
                        _0x3ceecf['writeHead'](0xc8, this['headers'](_0x34073c, _0x4ee8e7)), _0x3ceecf['end']('ok'), _0x475b64();
                    };
                _0x34073c['on']('close', _0x2f69a4);
                if (!_0xcfdebf)
                    _0x34073c['setEncoding']('utf8');
                _0x34073c['on']('data', _0x47db37), _0x34073c['on']('end', _0x4075b8);
            }
            ['onData'](_0x3a76f0) {
                _0x4953c5('received\x20\x22%s\x22', _0x3a76f0);
                const _0x15ce13 = _0x3ce979 => {
                    if ('close' === _0x3ce979['type'])
                        return _0x4953c5('got\x20xhr\x20close\x20packet'), this['onClose'](), ![];
                    this['onPacket'](_0x3ce979);
                };
                this['protocol'] === 0x3 ? this['parser']['decodePayload'](_0x3a76f0, _0x15ce13) : this['parser']['decodePayload'](_0x3a76f0)['forEach'](_0x15ce13);
            }
            ['onClose']() {
                this['writable'] && this['send']([{ 'type': 'noop' }]), super['onClose']();
            }
            ['send'](_0x4d19be) {
                this['writable'] = ![];
                this['shouldClose'] && (_0x4953c5('appending\x20close\x20packet\x20to\x20payload'), _0x4d19be['push']({ 'type': 'close' }), this['shouldClose'](), this['shouldClose'] = null);
                const _0x23d515 = _0x405ac0 => {
                    const _0x177045 = _0x4d19be['some'](_0x3018d5 => {
                        return _0x3018d5['options'] && _0x3018d5['options']['compress'];
                    });
                    this['write'](_0x405ac0, { 'compress': _0x177045 });
                };
                this['protocol'] === 0x3 ? this['parser']['encodePayload'](_0x4d19be, this['supportsBinary'], _0x23d515) : this['parser']['encodePayload'](_0x4d19be, _0x23d515);
            }
            ['write'](_0x9fdabd, _0x4c5fe0) {
                _0x4953c5('writing\x20\x22%s\x22', _0x9fdabd), this['doWrite'](_0x9fdabd, _0x4c5fe0, () => {
                    this['req']['cleanup']();
                });
            }
            ['doWrite'](_0x599cb9, _0x372c1f, _0x224ee4) {
                const _0x518080 = typeof _0x599cb9 === 'string', _0x8b8592 = _0x518080 ? 'text/plain;\x20charset=UTF-8' : 'application/octet-stream', _0xcdfe57 = { 'Content-Type': _0x8b8592 }, _0x195e8e = _0x89b175 => {
                        _0xcdfe57['Content-Length'] = 'string' === typeof _0x89b175 ? Buffer['byteLength'](_0x89b175) : _0x89b175['length'], this['res']['writeHead'](0xc8, this['headers'](this['req'], _0xcdfe57)), this['res']['end'](_0x89b175), _0x224ee4();
                    };
                if (!this['httpCompression'] || !_0x372c1f['compress']) {
                    _0x195e8e(_0x599cb9);
                    return;
                }
                const _0x3043b9 = _0x518080 ? Buffer['byteLength'](_0x599cb9) : _0x599cb9['length'];
                if (_0x3043b9 < this['httpCompression']['threshold']) {
                    _0x195e8e(_0x599cb9);
                    return;
                }
                const _0x16848e = _0x3888c3(this['req'])['encodings']([
                    'gzip',
                    'deflate'
                ]);
                if (!_0x16848e) {
                    _0x195e8e(_0x599cb9);
                    return;
                }
                this['compress'](_0x599cb9, _0x16848e, (_0x3d2f47, _0x2665a8) => {
                    if (_0x3d2f47) {
                        this['res']['writeHead'](0x1f4), this['res']['end'](), _0x224ee4(_0x3d2f47);
                        return;
                    }
                    _0xcdfe57['Content-Encoding'] = _0x16848e, _0x195e8e(_0x2665a8);
                });
            }
            ['compress'](_0x18f8ec, _0xb408b8, _0x44d35e) {
                _0x4953c5('compressing');
                const _0x2e8e43 = [];
                let _0x3e12db = 0x0;
                _0x56b546[_0xb408b8](this['httpCompression'])['on']('error', _0x44d35e)['on']('data', function (_0x573270) {
                    _0x2e8e43['push'](_0x573270), _0x3e12db += _0x573270['length'];
                })['on']('end', function () {
                    _0x44d35e(null, Buffer['concat'](_0x2e8e43, _0x3e12db));
                })['end'](_0x18f8ec);
            }
            ['doClose'](_0x64e57b) {
                _0x4953c5('closing');
                let _0x56cb0f;
                this['dataReq'] && (_0x4953c5('aborting\x20ongoing\x20data\x20request'), this['dataReq']['destroy']());
                const _0x5093ad = () => {
                    clearTimeout(_0x56cb0f), _0x64e57b(), this['onClose']();
                };
                if (this['writable'])
                    _0x4953c5('transport\x20writable\x20-\x20closing\x20right\x20away'), this['send']([{ 'type': 'close' }]), _0x5093ad();
                else
                    this['discarded'] ? (_0x4953c5('transport\x20discarded\x20-\x20closing\x20right\x20away'), _0x5093ad()) : (_0x4953c5('transport\x20not\x20writable\x20-\x20buffering\x20orderly\x20close'), this['shouldClose'] = _0x5093ad, _0x56cb0f = setTimeout(_0x5093ad, this['closeTimeout']));
            }
            ['headers'](_0x21b465, _0x200d91) {
                _0x200d91 = _0x200d91 || {};
                const _0x42ecc4 = _0x21b465['headers']['user-agent'];
                return _0x42ecc4 && (~_0x42ecc4['indexOf'](';MSIE') || ~_0x42ecc4['indexOf']('Trident/')) && (_0x200d91['X-XSS-Protection'] = '0'), this['emit']('headers', _0x200d91, _0x21b465), _0x200d91;
            }
        }
        _0x27b271['Polling'] = _0x4d19fe;
    },
    0x157ba: (_0x24825d, _0x4eef47, _0x412eb8) => {
        'use strict';
        Object['defineProperty'](_0x4eef47, '__esModule', { 'value': !![] }), _0x4eef47['WebSocket'] = void 0x0;
        const _0xefe78f = _0x412eb8(0x2f5a), _0x5423d4 = _0x412eb8(0x566b), _0x444e77 = (0x0, _0x5423d4['default'])('engine:ws');
        class _0xa9a6a7 extends _0xefe78f['Transport'] {
            constructor(_0x6a2733) {
                super(_0x6a2733), this['socket'] = _0x6a2733['websocket'], this['socket']['on']('message', (_0x28d280, _0x41449a) => {
                    const _0x32d94f = _0x41449a ? _0x28d280 : _0x28d280['toString']();
                    _0x444e77('received\x20\x22%s\x22', _0x32d94f), super['onData'](_0x32d94f);
                }), this['socket']['once']('close', this['onClose']['bind'](this)), this['socket']['on']('error', this['onError']['bind'](this)), this['writable'] = !![], this['perMessageDeflate'] = null;
            }
            get ['name']() {
                return 'websocket';
            }
            get ['handlesUpgrades']() {
                return !![];
            }
            get ['supportsFraming']() {
                return !![];
            }
            ['send'](_0x8f1408) {
                const _0x3fd7f6 = _0x8f1408['shift']();
                if (typeof _0x3fd7f6 === 'undefined') {
                    this['writable'] = !![], this['emit']('drain');
                    return;
                }
                const _0x34dd2e = {};
                _0x3fd7f6['options'] && (_0x34dd2e['compress'] = _0x3fd7f6['options']['compress']);
                const _0x430d0e = _0x1f4aad => {
                    if (this['perMessageDeflate']) {
                        const _0x1338e8 = 'string' === typeof _0x1f4aad ? Buffer['byteLength'](_0x1f4aad) : _0x1f4aad['length'];
                        _0x1338e8 < this['perMessageDeflate']['threshold'] && (_0x34dd2e['compress'] = ![]);
                    }
                    _0x444e77('writing\x20\x22%s\x22', _0x1f4aad), this['writable'] = ![], this['socket']['send'](_0x1f4aad, _0x34dd2e, _0x1acbcc => {
                        if (_0x1acbcc)
                            return this['onError']('write\x20error', _0x1acbcc['stack']);
                        this['send'](_0x8f1408);
                    });
                };
                _0x3fd7f6['options'] && typeof _0x3fd7f6['options']['wsPreEncoded'] === 'string' ? _0x430d0e(_0x3fd7f6['options']['wsPreEncoded']) : this['parser']['encodePacket'](_0x3fd7f6, this['supportsBinary'], _0x430d0e);
            }
            ['doClose'](_0x1bc87d) {
                _0x444e77('closing'), this['socket']['close'](), _0x1bc87d && _0x1bc87d();
            }
        }
        _0x4eef47['WebSocket'] = _0xa9a6a7;
    },
    0xfbdd: (_0x2ffba6, _0x2793ea, _0x733687) => {
        'use strict';
        Object['defineProperty'](_0x2793ea, '__esModule', { 'value': !![] }), _0x2793ea['uServer'] = void 0x0;
        const _0x2a771e = _0x733687(0x566b), _0x314b38 = _0x733687(0x4c03), _0x28aa45 = _0x733687(0xd33e), _0x2310db = (0x0, _0x2a771e['default'])('engine:uws');
        class _0x15c9c4 extends _0x314b38['BaseServer'] {
            ['init']() {
            }
            ['cleanup']() {
            }
            ['prepare'](_0x3c24b0, _0x35b43a) {
                _0x3c24b0['method'] = _0x3c24b0['getMethod']()['toUpperCase']();
                const _0x5bd854 = new URLSearchParams(_0x3c24b0['getQuery']());
                _0x3c24b0['_query'] = Object['fromEntries'](_0x5bd854['entries']()), _0x3c24b0['headers'] = {}, _0x3c24b0['forEach']((_0xafe057, _0x5bc649) => {
                    _0x3c24b0['headers'][_0xafe057] = _0x5bc649;
                }), _0x3c24b0['connection'] = { 'remoteAddress': Buffer['from'](_0x35b43a['getRemoteAddressAsText']())['toString']() }, _0x35b43a['onAborted'](() => {
                    _0x2310db('response\x20has\x20been\x20aborted');
                });
            }
            ['createTransport'](_0x20f1f7, _0xd944df) {
                return new _0x28aa45['default'][_0x20f1f7](_0xd944df);
            }
            ['attach'](_0x436726, _0x215f68 = {}) {
                const _0x385823 = (_0x215f68['path'] || '/engine.io')['replace'](/\/$/, '') + '/';
                _0x436726['any'](_0x385823, this['handleRequest']['bind'](this))['ws'](_0x385823, {
                    'compression': _0x215f68['compression'],
                    'idleTimeout': _0x215f68['idleTimeout'],
                    'maxBackpressure': _0x215f68['maxBackpressure'],
                    'maxPayloadLength': this['opts']['maxHttpBufferSize'],
                    'upgrade': this['handleUpgrade']['bind'](this),
                    'open': _0x97c9d0 => {
                        _0x97c9d0['transport']['socket'] = _0x97c9d0, _0x97c9d0['transport']['writable'] = !![], _0x97c9d0['transport']['emit']('drain');
                    },
                    'message': (_0x5e3de7, _0x545c0d, _0x11c373) => {
                        _0x5e3de7['transport']['onData'](_0x11c373 ? _0x545c0d : Buffer['from'](_0x545c0d)['toString']());
                    },
                    'close': (_0x4dbdd2, _0x318871, _0xd74267) => {
                        _0x4dbdd2['transport']['onClose'](_0x318871, _0xd74267);
                    }
                });
            }
            ['handleRequest'](_0x5b80d4, _0x18efc1) {
                _0x2310db('handling\x20\x22%s\x22\x20http\x20request\x20\x22%s\x22', _0x18efc1['getMethod'](), _0x18efc1['getUrl']()), this['prepare'](_0x18efc1, _0x5b80d4), _0x18efc1['res'] = _0x5b80d4;
                const _0x1127af = (_0x106ac3, _0x242dcf) => {
                    if (_0x106ac3 !== undefined) {
                        this['emit']('connection_error', {
                            'req': _0x18efc1,
                            'code': _0x106ac3,
                            'message': _0x314b38['Server']['errorMessages'][_0x106ac3],
                            'context': _0x242dcf
                        }), this['abortRequest'](_0x18efc1['res'], _0x106ac3, _0x242dcf);
                        return;
                    }
                    if (_0x18efc1['_query']['sid'])
                        _0x2310db('setting\x20new\x20request\x20for\x20existing\x20client'), this['clients'][_0x18efc1['_query']['sid']]['transport']['onRequest'](_0x18efc1);
                    else {
                        const _0x535bf4 = (_0x56fad2, _0x32542c) => this['abortRequest'](_0x5b80d4, _0x56fad2, _0x32542c);
                        this['handshake'](_0x18efc1['_query']['transport'], _0x18efc1, _0x535bf4);
                    }
                };
                this['corsMiddleware'] ? (_0x18efc1['res'] = new _0x31fac7(_0x5b80d4), this['corsMiddleware']['call'](null, _0x18efc1, _0x18efc1['res'], () => {
                    this['verify'](_0x18efc1, ![], _0x1127af);
                })) : this['verify'](_0x18efc1, ![], _0x1127af);
            }
            ['handleUpgrade'](_0x12cf49, _0x5b5941, _0x211d0d) {
                _0x2310db('on\x20upgrade'), this['prepare'](_0x5b5941, _0x12cf49), _0x5b5941['res'] = _0x12cf49, this['verify'](_0x5b5941, !![], async (_0x2fa1cb, _0x46ae36) => {
                    if (_0x2fa1cb) {
                        this['emit']('connection_error', {
                            'req': _0x5b5941,
                            'code': _0x2fa1cb,
                            'message': _0x314b38['Server']['errorMessages'][_0x2fa1cb],
                            'context': _0x46ae36
                        }), this['abortRequest'](_0x12cf49, _0x2fa1cb, _0x46ae36);
                        return;
                    }
                    const _0x559ee5 = _0x5b5941['_query']['sid'];
                    let _0x1cfd76;
                    if (_0x559ee5) {
                        const _0x215f1c = this['clients'][_0x559ee5];
                        if (!_0x215f1c)
                            _0x2310db('upgrade\x20attempt\x20for\x20closed\x20client'), _0x12cf49['close']();
                        else {
                            if (_0x215f1c['upgrading'])
                                _0x2310db('transport\x20has\x20already\x20been\x20trying\x20to\x20upgrade'), _0x12cf49['close']();
                            else
                                _0x215f1c['upgraded'] ? (_0x2310db('transport\x20had\x20already\x20been\x20upgraded'), _0x12cf49['close']()) : (_0x2310db('upgrading\x20existing\x20transport'), _0x1cfd76 = this['createTransport'](_0x5b5941['_query']['transport'], _0x5b5941), _0x215f1c['maybeUpgrade'](_0x1cfd76));
                        }
                    } else {
                        _0x1cfd76 = await this['handshake'](_0x5b5941['_query']['transport'], _0x5b5941, (_0x4a6e31, _0x13d778) => this['abortRequest'](_0x12cf49, _0x4a6e31, _0x13d778));
                        if (!_0x1cfd76)
                            return;
                    }
                    _0x12cf49['upgrade']({ 'transport': _0x1cfd76 }, _0x5b5941['getHeader']('sec-websocket-key'), _0x5b5941['getHeader']('sec-websocket-protocol'), _0x5b5941['getHeader']('sec-websocket-extensions'), _0x211d0d);
                });
            }
            ['abortRequest'](_0x2c5f46, _0x129675, _0x19ebaf) {
                const _0x29dca1 = _0x129675 === _0x314b38['Server']['errors']['FORBIDDEN'] ? '403\x20Forbidden' : '400\x20Bad\x20Request', _0x1199fb = _0x19ebaf && _0x19ebaf['message'] ? _0x19ebaf['message'] : _0x314b38['Server']['errorMessages'][_0x129675];
                _0x2c5f46['writeStatus'](_0x29dca1), _0x2c5f46['writeHeader']('Content-Type', 'application/json'), _0x2c5f46['end'](JSON['stringify']({
                    'code': _0x129675,
                    'message': _0x1199fb
                }));
            }
        }
        _0x2793ea['uServer'] = _0x15c9c4;
        class _0x31fac7 {
            constructor(_0x55595b) {
                this['res'] = _0x55595b, this['statusWritten'] = ![], this['headers'] = [];
            }
            set ['statusCode'](_0x4d9929) {
                this['writeStatus'](_0x4d9929 === 0xc8 ? '200\x20OK' : '204\x20No\x20Content');
            }
            ['setHeader'](_0x466ce8, _0x5052ec) {
                this['writeHeader'](_0x466ce8, _0x5052ec);
            }
            ['getHeader']() {
            }
            ['writeStatus'](_0x4344c8) {
                this['res']['writeStatus'](_0x4344c8), this['statusWritten'] = !![], this['writeBufferedHeaders']();
            }
            ['writeHeader'](_0x216571, _0x38df12) {
                if (_0x216571 === 'Content-Length')
                    return;
                this['statusWritten'] ? this['res']['writeHeader'](_0x216571, _0x38df12) : this['headers']['push']([
                    _0x216571,
                    _0x38df12
                ]);
            }
            ['writeBufferedHeaders']() {
                this['headers']['forEach'](([_0xbd519e, _0x3686e6]) => {
                    this['res']['writeHeader'](_0xbd519e, _0x3686e6);
                });
            }
            ['end'](_0x471b8e) {
                !this['statusWritten'] && this['writeBufferedHeaders'](), this['res']['end'](_0x471b8e);
            }
            ['onData'](_0x12acb8) {
                this['res']['onData'](_0x12acb8);
            }
            ['onAborted'](_0x3139e0) {
                this['res']['onAborted'](_0x3139e0);
            }
        }
    },
    0xbe29: (_0x243655, _0x3d995b, _0x18719c) => {
        'use strict';
        Object['defineProperty'](_0x3d995b, '__esModule', { 'value': !![] }), _0x3d995b['reconstructPacket'] = _0x3d995b['deconstructPacket'] = void 0x0;
        const _0x207692 = _0x18719c(0xefa5);
        function _0x2345bf(_0x2d766f) {
            const _0x5474ba = [], _0x25f458 = _0x2d766f['data'], _0x4d97c9 = _0x2d766f;
            return _0x4d97c9['data'] = _0x451010(_0x25f458, _0x5474ba), _0x4d97c9['attachments'] = _0x5474ba['length'], {
                'packet': _0x4d97c9,
                'buffers': _0x5474ba
            };
        }
        _0x3d995b['deconstructPacket'] = _0x2345bf;
        function _0x451010(_0x3392d3, _0x1ad0ce) {
            if (!_0x3392d3)
                return _0x3392d3;
            if (_0x207692['isBinary'](_0x3392d3)) {
                const _0x5ca8a5 = {
                    '_placeholder': !![],
                    'num': _0x1ad0ce['length']
                };
                return _0x1ad0ce['push'](_0x3392d3), _0x5ca8a5;
            } else {
                if (Array['isArray'](_0x3392d3)) {
                    const _0x3b658b = new Array(_0x3392d3['length']);
                    for (let _0x29024b = 0x0; _0x29024b < _0x3392d3['length']; _0x29024b++) {
                        _0x3b658b[_0x29024b] = _0x451010(_0x3392d3[_0x29024b], _0x1ad0ce);
                    }
                    return _0x3b658b;
                } else {
                    if (typeof _0x3392d3 === 'object' && !(_0x3392d3 instanceof Date)) {
                        const _0x1e1443 = {};
                        for (const _0x3c0e09 in _0x3392d3) {
                            Object['prototype']['hasOwnProperty']['call'](_0x3392d3, _0x3c0e09) && (_0x1e1443[_0x3c0e09] = _0x451010(_0x3392d3[_0x3c0e09], _0x1ad0ce));
                        }
                        return _0x1e1443;
                    }
                }
            }
            return _0x3392d3;
        }
        function _0x14d0e1(_0x281cfd, _0x11100e) {
            return _0x281cfd['data'] = _0x4495fd(_0x281cfd['data'], _0x11100e), _0x281cfd['attachments'] = undefined, _0x281cfd;
        }
        _0x3d995b['reconstructPacket'] = _0x14d0e1;
        function _0x4495fd(_0x464b83, _0x178334) {
            if (!_0x464b83)
                return _0x464b83;
            if (_0x464b83 && _0x464b83['_placeholder'] === !![]) {
                const _0x1481ed = typeof _0x464b83['num'] === 'number' && _0x464b83['num'] >= 0x0 && _0x464b83['num'] < _0x178334['length'];
                if (_0x1481ed)
                    return _0x178334[_0x464b83['num']];
                else
                    throw new Error('illegal\x20attachments');
            } else {
                if (Array['isArray'](_0x464b83))
                    for (let _0x37be0a = 0x0; _0x37be0a < _0x464b83['length']; _0x37be0a++) {
                        _0x464b83[_0x37be0a] = _0x4495fd(_0x464b83[_0x37be0a], _0x178334);
                    }
                else {
                    if (typeof _0x464b83 === 'object')
                        for (const _0xf71776 in _0x464b83) {
                            Object['prototype']['hasOwnProperty']['call'](_0x464b83, _0xf71776) && (_0x464b83[_0xf71776] = _0x4495fd(_0x464b83[_0xf71776], _0x178334));
                        }
                }
            }
            return _0x464b83;
        }
    },
    0x135fb: (_0x39247e, _0x90fba5, _0x34e4a7) => {
        'use strict';
        Object['defineProperty'](_0x90fba5, '__esModule', { 'value': !![] }), _0x90fba5['Decoder'] = _0x90fba5['Encoder'] = _0x90fba5['PacketType'] = _0x90fba5['protocol'] = void 0x0;
        const _0x362af4 = _0x34e4a7(0x8313), _0x33cc40 = _0x34e4a7(0xbe29), _0x1d987a = _0x34e4a7(0xefa5), _0x48c824 = _0x34e4a7(0x566b), _0x57429e = _0x48c824['default']('socket.io-parser');
        _0x90fba5['protocol'] = 0x5;
        var _0x1c66cf;
        (function (_0x33f67e) {
            _0x33f67e[_0x33f67e['CONNECT'] = 0x0] = 'CONNECT', _0x33f67e[_0x33f67e['DISCONNECT'] = 0x1] = 'DISCONNECT', _0x33f67e[_0x33f67e['EVENT'] = 0x2] = 'EVENT', _0x33f67e[_0x33f67e['ACK'] = 0x3] = 'ACK', _0x33f67e[_0x33f67e['CONNECT_ERROR'] = 0x4] = 'CONNECT_ERROR', _0x33f67e[_0x33f67e['BINARY_EVENT'] = 0x5] = 'BINARY_EVENT', _0x33f67e[_0x33f67e['BINARY_ACK'] = 0x6] = 'BINARY_ACK';
        }(_0x1c66cf = _0x90fba5['PacketType'] || (_0x90fba5['PacketType'] = {})));
        class _0x39b2d1 {
            constructor(_0x5efdda) {
                this['replacer'] = _0x5efdda;
            }
            ['encode'](_0x4ae6fe) {
                _0x57429e('encoding\x20packet\x20%j', _0x4ae6fe);
                if (_0x4ae6fe['type'] === _0x1c66cf['EVENT'] || _0x4ae6fe['type'] === _0x1c66cf['ACK']) {
                    if (_0x1d987a['hasBinary'](_0x4ae6fe))
                        return _0x4ae6fe['type'] = _0x4ae6fe['type'] === _0x1c66cf['EVENT'] ? _0x1c66cf['BINARY_EVENT'] : _0x1c66cf['BINARY_ACK'], this['encodeAsBinary'](_0x4ae6fe);
                }
                return [this['encodeAsString'](_0x4ae6fe)];
            }
            ['encodeAsString'](_0x21837f) {
                let _0x54d741 = '' + _0x21837f['type'];
                return (_0x21837f['type'] === _0x1c66cf['BINARY_EVENT'] || _0x21837f['type'] === _0x1c66cf['BINARY_ACK']) && (_0x54d741 += _0x21837f['attachments'] + '-'), _0x21837f['nsp'] && '/' !== _0x21837f['nsp'] && (_0x54d741 += _0x21837f['nsp'] + ','), null != _0x21837f['id'] && (_0x54d741 += _0x21837f['id']), null != _0x21837f['data'] && (_0x54d741 += JSON['stringify'](_0x21837f['data'], this['replacer'])), _0x57429e('encoded\x20%j\x20as\x20%s', _0x21837f, _0x54d741), _0x54d741;
            }
            ['encodeAsBinary'](_0x507500) {
                const _0x327aca = _0x33cc40['deconstructPacket'](_0x507500), _0x163ff3 = this['encodeAsString'](_0x327aca['packet']), _0x533a8f = _0x327aca['buffers'];
                return _0x533a8f['unshift'](_0x163ff3), _0x533a8f;
            }
        }
        _0x90fba5['Encoder'] = _0x39b2d1;
        class _0x3b3053 extends _0x362af4['Emitter'] {
            constructor(_0x3c5dd7) {
                super(), this['reviver'] = _0x3c5dd7;
            }
            ['add'](_0x1c29c6) {
                let _0x483d27;
                if (typeof _0x1c29c6 === 'string') {
                    if (this['reconstructor'])
                        throw new Error('got\x20plaintext\x20data\x20when\x20reconstructing\x20a\x20packet');
                    _0x483d27 = this['decodeString'](_0x1c29c6), _0x483d27['type'] === _0x1c66cf['BINARY_EVENT'] || _0x483d27['type'] === _0x1c66cf['BINARY_ACK'] ? (this['reconstructor'] = new _0x21eae4(_0x483d27), _0x483d27['attachments'] === 0x0 && super['emitReserved']('decoded', _0x483d27)) : super['emitReserved']('decoded', _0x483d27);
                } else {
                    if (_0x1d987a['isBinary'](_0x1c29c6) || _0x1c29c6['base64']) {
                        if (!this['reconstructor'])
                            throw new Error('got\x20binary\x20data\x20when\x20not\x20reconstructing\x20a\x20packet');
                        else
                            _0x483d27 = this['reconstructor']['takeBinaryData'](_0x1c29c6), _0x483d27 && (this['reconstructor'] = null, super['emitReserved']('decoded', _0x483d27));
                    } else
                        throw new Error('Unknown\x20type:\x20' + _0x1c29c6);
                }
            }
            ['decodeString'](_0x2b34e6) {
                let _0x4898d2 = 0x0;
                const _0x257421 = { 'type': Number(_0x2b34e6['charAt'](0x0)) };
                if (_0x1c66cf[_0x257421['type']] === undefined)
                    throw new Error('unknown\x20packet\x20type\x20' + _0x257421['type']);
                if (_0x257421['type'] === _0x1c66cf['BINARY_EVENT'] || _0x257421['type'] === _0x1c66cf['BINARY_ACK']) {
                    const _0x4d2eba = _0x4898d2 + 0x1;
                    while (_0x2b34e6['charAt'](++_0x4898d2) !== '-' && _0x4898d2 != _0x2b34e6['length']) {
                    }
                    const _0x33fcac = _0x2b34e6['substring'](_0x4d2eba, _0x4898d2);
                    if (_0x33fcac != Number(_0x33fcac) || _0x2b34e6['charAt'](_0x4898d2) !== '-')
                        throw new Error('Illegal\x20attachments');
                    _0x257421['attachments'] = Number(_0x33fcac);
                }
                if ('/' === _0x2b34e6['charAt'](_0x4898d2 + 0x1)) {
                    const _0x1a9749 = _0x4898d2 + 0x1;
                    while (++_0x4898d2) {
                        const _0xa51823 = _0x2b34e6['charAt'](_0x4898d2);
                        if (',' === _0xa51823)
                            break;
                        if (_0x4898d2 === _0x2b34e6['length'])
                            break;
                    }
                    _0x257421['nsp'] = _0x2b34e6['substring'](_0x1a9749, _0x4898d2);
                } else
                    _0x257421['nsp'] = '/';
                const _0x7ce494 = _0x2b34e6['charAt'](_0x4898d2 + 0x1);
                if ('' !== _0x7ce494 && Number(_0x7ce494) == _0x7ce494) {
                    const _0x294b27 = _0x4898d2 + 0x1;
                    while (++_0x4898d2) {
                        const _0x29ac1c = _0x2b34e6['charAt'](_0x4898d2);
                        if (null == _0x29ac1c || Number(_0x29ac1c) != _0x29ac1c) {
                            --_0x4898d2;
                            break;
                        }
                        if (_0x4898d2 === _0x2b34e6['length'])
                            break;
                    }
                    _0x257421['id'] = Number(_0x2b34e6['substring'](_0x294b27, _0x4898d2 + 0x1));
                }
                if (_0x2b34e6['charAt'](++_0x4898d2)) {
                    const _0x460306 = this['tryParse'](_0x2b34e6['substr'](_0x4898d2));
                    if (_0x3b3053['isPayloadValid'](_0x257421['type'], _0x460306))
                        _0x257421['data'] = _0x460306;
                    else
                        throw new Error('invalid\x20payload');
                }
                return _0x57429e('decoded\x20%s\x20as\x20%j', _0x2b34e6, _0x257421), _0x257421;
            }
            ['tryParse'](_0x479a6d) {
                try {
                    return JSON['parse'](_0x479a6d, this['reviver']);
                } catch (_0x194619) {
                    return ![];
                }
            }
            static ['isPayloadValid'](_0x438eeb, _0x633db1) {
                switch (_0x438eeb) {
                case _0x1c66cf['CONNECT']:
                    return typeof _0x633db1 === 'object';
                case _0x1c66cf['DISCONNECT']:
                    return _0x633db1 === undefined;
                case _0x1c66cf['CONNECT_ERROR']:
                    return typeof _0x633db1 === 'string' || typeof _0x633db1 === 'object';
                case _0x1c66cf['EVENT']:
                case _0x1c66cf['BINARY_EVENT']:
                    return Array['isArray'](_0x633db1) && _0x633db1['length'] > 0x0;
                case _0x1c66cf['ACK']:
                case _0x1c66cf['BINARY_ACK']:
                    return Array['isArray'](_0x633db1);
                }
            }
            ['destroy']() {
                this['reconstructor'] && this['reconstructor']['finishedReconstruction']();
            }
        }
        _0x90fba5['Decoder'] = _0x3b3053;
        class _0x21eae4 {
            constructor(_0x160eda) {
                this['packet'] = _0x160eda, this['buffers'] = [], this['reconPack'] = _0x160eda;
            }
            ['takeBinaryData'](_0x20cc41) {
                this['buffers']['push'](_0x20cc41);
                if (this['buffers']['length'] === this['reconPack']['attachments']) {
                    const _0x1a1e2f = _0x33cc40['reconstructPacket'](this['reconPack'], this['buffers']);
                    return this['finishedReconstruction'](), _0x1a1e2f;
                }
                return null;
            }
            ['finishedReconstruction']() {
                this['reconPack'] = null, this['buffers'] = [];
            }
        }
    },
    0xefa5: (_0x31a1e5, _0x744fba) => {
        'use strict';
        Object['defineProperty'](_0x744fba, '__esModule', { 'value': !![] }), _0x744fba['hasBinary'] = _0x744fba['isBinary'] = void 0x0;
        const _0xc83341 = typeof ArrayBuffer === 'function', _0xb6799b = _0x342451 => {
                return typeof ArrayBuffer['isView'] === 'function' ? ArrayBuffer['isView'](_0x342451) : _0x342451['buffer'] instanceof ArrayBuffer;
            }, _0x2695a7 = Object['prototype']['toString'], _0x59a09a = typeof Blob === 'function' || typeof Blob !== 'undefined' && _0x2695a7['call'](Blob) === '[object\x20BlobConstructor]', _0x7d16d = typeof File === 'function' || typeof File !== 'undefined' && _0x2695a7['call'](File) === '[object\x20FileConstructor]';
        function _0x26d08e(_0x128ae0) {
            return _0xc83341 && (_0x128ae0 instanceof ArrayBuffer || _0xb6799b(_0x128ae0)) || _0x59a09a && _0x128ae0 instanceof Blob || _0x7d16d && _0x128ae0 instanceof File;
        }
        _0x744fba['isBinary'] = _0x26d08e;
        function _0x520e1c(_0x4362a9, _0x10b75e) {
            if (!_0x4362a9 || typeof _0x4362a9 !== 'object')
                return ![];
            if (Array['isArray'](_0x4362a9)) {
                for (let _0x5157f2 = 0x0, _0x3a970d = _0x4362a9['length']; _0x5157f2 < _0x3a970d; _0x5157f2++) {
                    if (_0x520e1c(_0x4362a9[_0x5157f2]))
                        return !![];
                }
                return ![];
            }
            if (_0x26d08e(_0x4362a9))
                return !![];
            if (_0x4362a9['toJSON'] && typeof _0x4362a9['toJSON'] === 'function' && arguments['length'] === 0x1)
                return _0x520e1c(_0x4362a9['toJSON'](), !![]);
            for (const _0x5506e3 in _0x4362a9) {
                if (Object['prototype']['hasOwnProperty']['call'](_0x4362a9, _0x5506e3) && _0x520e1c(_0x4362a9[_0x5506e3]))
                    return !![];
            }
            return ![];
        }
        _0x744fba['hasBinary'] = _0x520e1c;
    },
    0x11ab6: (_0x5412a9, _0x514439, _0x463eb3) => {
        'use strict';
        Object['defineProperty'](_0x514439, '__esModule', { 'value': !![] }), _0x514439['RemoteSocket'] = _0x514439['BroadcastOperator'] = void 0x0;
        const _0x117dea = _0x463eb3(0x763), _0x11f578 = _0x463eb3(0x135fb);
        class _0x5503ba {
            constructor(_0x387fb4, _0x5731ea = new Set(), _0x1b80d9 = new Set(), _0x2e7980 = {}) {
                this['adapter'] = _0x387fb4, this['rooms'] = _0x5731ea, this['exceptRooms'] = _0x1b80d9, this['flags'] = _0x2e7980;
            }
            ['to'](_0x223c34) {
                const _0x573251 = new Set(this['rooms']);
                return Array['isArray'](_0x223c34) ? _0x223c34['forEach'](_0x5adef0 => _0x573251['add'](_0x5adef0)) : _0x573251['add'](_0x223c34), new _0x5503ba(this['adapter'], _0x573251, this['exceptRooms'], this['flags']);
            }
            ['in'](_0x36f7d9) {
                return this['to'](_0x36f7d9);
            }
            ['except'](_0x3d7d70) {
                const _0x151e5c = new Set(this['exceptRooms']);
                return Array['isArray'](_0x3d7d70) ? _0x3d7d70['forEach'](_0x2ca255 => _0x151e5c['add'](_0x2ca255)) : _0x151e5c['add'](_0x3d7d70), new _0x5503ba(this['adapter'], this['rooms'], _0x151e5c, this['flags']);
            }
            ['compress'](_0x22c7dd) {
                const _0x31f0bf = Object['assign']({}, this['flags'], { 'compress': _0x22c7dd });
                return new _0x5503ba(this['adapter'], this['rooms'], this['exceptRooms'], _0x31f0bf);
            }
            get ['volatile']() {
                const _0x196f2e = Object['assign']({}, this['flags'], { 'volatile': !![] });
                return new _0x5503ba(this['adapter'], this['rooms'], this['exceptRooms'], _0x196f2e);
            }
            get ['local']() {
                const _0x36ad85 = Object['assign']({}, this['flags'], { 'local': !![] });
                return new _0x5503ba(this['adapter'], this['rooms'], this['exceptRooms'], _0x36ad85);
            }
            ['timeout'](_0x3e6384) {
                const _0x4469f6 = Object['assign']({}, this['flags'], { 'timeout': _0x3e6384 });
                return new _0x5503ba(this['adapter'], this['rooms'], this['exceptRooms'], _0x4469f6);
            }
            ['emit'](_0x2a6c64, ..._0x3f9c5d) {
                if (_0x117dea['RESERVED_EVENTS']['has'](_0x2a6c64))
                    throw new Error('\x22' + String(_0x2a6c64) + '\x22\x20is\x20a\x20reserved\x20event\x20name');
                const _0x12fbfe = [
                        _0x2a6c64,
                        ..._0x3f9c5d
                    ], _0x4697da = {
                        'type': _0x11f578['PacketType']['EVENT'],
                        'data': _0x12fbfe
                    }, _0x486038 = typeof _0x12fbfe[_0x12fbfe['length'] - 0x1] === 'function';
                if (!_0x486038)
                    return this['adapter']['broadcast'](_0x4697da, {
                        'rooms': this['rooms'],
                        'except': this['exceptRooms'],
                        'flags': this['flags']
                    }), !![];
                const _0x52fcb9 = _0x12fbfe['pop']();
                let _0x1db683 = ![], _0x1f51e3 = [];
                const _0x44fc40 = setTimeout(() => {
                    _0x1db683 = !![], _0x52fcb9['apply'](this, [
                        new Error('operation\x20has\x20timed\x20out'),
                        _0x1f51e3
                    ]);
                }, this['flags']['timeout']);
                let _0x2f3179 = -0x1, _0x2db781 = 0x0, _0x22c2b2 = 0x0;
                const _0xdc915f = () => {
                    !_0x1db683 && _0x2f3179 === _0x2db781 && _0x1f51e3['length'] === _0x22c2b2 && (clearTimeout(_0x44fc40), _0x52fcb9['apply'](this, [
                        null,
                        _0x1f51e3
                    ]));
                };
                return this['adapter']['broadcastWithAck'](_0x4697da, {
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                }, _0x5da0b9 => {
                    _0x22c2b2 += _0x5da0b9, _0x2db781++, _0xdc915f();
                }, _0x3978af => {
                    _0x1f51e3['push'](_0x3978af), _0xdc915f();
                }), this['adapter']['serverCount']()['then'](_0xe37e9d => {
                    _0x2f3179 = _0xe37e9d, _0xdc915f();
                }), !![];
            }
            ['allSockets']() {
                if (!this['adapter'])
                    throw new Error('No\x20adapter\x20for\x20this\x20namespace,\x20are\x20you\x20trying\x20to\x20get\x20the\x20list\x20of\x20clients\x20of\x20a\x20dynamic\x20namespace?');
                return this['adapter']['sockets'](this['rooms']);
            }
            ['fetchSockets']() {
                return this['adapter']['fetchSockets']({
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                })['then'](_0x28c91a => {
                    return _0x28c91a['map'](_0x15950d => {
                        return _0x15950d instanceof _0x117dea['Socket'] ? _0x15950d : new _0x35b9e3(this['adapter'], _0x15950d);
                    });
                });
            }
            ['socketsJoin'](_0x57fd55) {
                this['adapter']['addSockets']({
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                }, Array['isArray'](_0x57fd55) ? _0x57fd55 : [_0x57fd55]);
            }
            ['socketsLeave'](_0x29b34e) {
                this['adapter']['delSockets']({
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                }, Array['isArray'](_0x29b34e) ? _0x29b34e : [_0x29b34e]);
            }
            ['disconnectSockets'](_0x5f8f40 = ![]) {
                this['adapter']['disconnectSockets']({
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                }, _0x5f8f40);
            }
        }
        _0x514439['BroadcastOperator'] = _0x5503ba;
        class _0x35b9e3 {
            constructor(_0x48478d, _0x228285) {
                this['id'] = _0x228285['id'], this['handshake'] = _0x228285['handshake'], this['rooms'] = new Set(_0x228285['rooms']), this['data'] = _0x228285['data'], this['operator'] = new _0x5503ba(_0x48478d, new Set([this['id']]));
            }
            ['emit'](_0x5f55c2, ..._0x8c3ba7) {
                return this['operator']['emit'](_0x5f55c2, ..._0x8c3ba7);
            }
            ['join'](_0x2ecd49) {
                return this['operator']['socketsJoin'](_0x2ecd49);
            }
            ['leave'](_0x18d6a2) {
                return this['operator']['socketsLeave'](_0x18d6a2);
            }
            ['disconnect'](_0x491eab = ![]) {
                return this['operator']['disconnectSockets'](_0x491eab), this;
            }
        }
        _0x514439['RemoteSocket'] = _0x35b9e3;
    },
    0xd65b: (_0x417047, _0x340f1c, _0xbdf2ac) => {
        'use strict';
        Object['defineProperty'](_0x340f1c, '__esModule', { 'value': !![] }), _0x340f1c['Client'] = void 0x0;
        const _0x4f45a9 = _0xbdf2ac(0x135fb), _0x423fd5 = _0xbdf2ac(0x566b), _0xb9f6ff = _0xbdf2ac(0xdfde), _0x2c7745 = _0x423fd5('socket.io:client');
        class _0x10daa7 {
            constructor(_0x19d7aa, _0xcbb1b1) {
                this['sockets'] = new Map(), this['nsps'] = new Map(), this['server'] = _0x19d7aa, this['conn'] = _0xcbb1b1, this['encoder'] = _0x19d7aa['encoder'], this['decoder'] = new _0x19d7aa['_parser']['Decoder'](), this['id'] = _0xcbb1b1['id'], this['setup']();
            }
            get ['request']() {
                return this['conn']['request'];
            }
            ['setup']() {
                this['onclose'] = this['onclose']['bind'](this), this['ondata'] = this['ondata']['bind'](this), this['onerror'] = this['onerror']['bind'](this), this['ondecoded'] = this['ondecoded']['bind'](this), this['decoder']['on']('decoded', this['ondecoded']), this['conn']['on']('data', this['ondata']), this['conn']['on']('error', this['onerror']), this['conn']['on']('close', this['onclose']), this['connectTimeout'] = setTimeout(() => {
                    this['nsps']['size'] === 0x0 ? (_0x2c7745('no\x20namespace\x20joined\x20yet,\x20close\x20the\x20client'), this['close']()) : _0x2c7745('the\x20client\x20has\x20already\x20joined\x20a\x20namespace,\x20nothing\x20to\x20do');
                }, this['server']['_connectTimeout']);
            }
            ['connect'](_0x59c7db, _0x26b786 = {}) {
                if (this['server']['_nsps']['has'](_0x59c7db))
                    return _0x2c7745('connecting\x20to\x20namespace\x20%s', _0x59c7db), this['doConnect'](_0x59c7db, _0x26b786);
                this['server']['_checkNamespace'](_0x59c7db, _0x26b786, _0x11eeba => {
                    _0x11eeba ? this['doConnect'](_0x59c7db, _0x26b786) : (_0x2c7745('creation\x20of\x20namespace\x20%s\x20was\x20denied', _0x59c7db), this['_packet']({
                        'type': _0x4f45a9['PacketType']['CONNECT_ERROR'],
                        'nsp': _0x59c7db,
                        'data': { 'message': 'Invalid\x20namespace' }
                    }));
                });
            }
            ['doConnect'](_0x9e8940, _0x2700ea) {
                const _0xdaa75e = this['server']['of'](_0x9e8940), _0x1f8455 = _0xdaa75e['_add'](this, _0x2700ea, () => {
                        this['sockets']['set'](_0x1f8455['id'], _0x1f8455), this['nsps']['set'](_0xdaa75e['name'], _0x1f8455), this['connectTimeout'] && (clearTimeout(this['connectTimeout']), this['connectTimeout'] = undefined);
                    });
            }
            ['_disconnect']() {
                for (const _0x413d39 of this['sockets']['values']()) {
                    _0x413d39['disconnect']();
                }
                this['sockets']['clear'](), this['close']();
            }
            ['_remove'](_0x37638c) {
                if (this['sockets']['has'](_0x37638c['id'])) {
                    const _0x49afc0 = this['sockets']['get'](_0x37638c['id'])['nsp']['name'];
                    this['sockets']['delete'](_0x37638c['id']), this['nsps']['delete'](_0x49afc0);
                } else
                    _0x2c7745('ignoring\x20remove\x20for\x20%s', _0x37638c['id']);
            }
            ['close']() {
                'open' === this['conn']['readyState'] && (_0x2c7745('forcing\x20transport\x20close'), this['conn']['close'](), this['onclose']('forced\x20server\x20close'));
            }
            ['_packet'](_0x6420d3, _0x54db85 = {}) {
                if (this['conn']['readyState'] !== 'open') {
                    _0x2c7745('ignoring\x20packet\x20write\x20%j', _0x6420d3);
                    return;
                }
                const _0xaafa1d = _0x54db85['preEncoded'] ? _0x6420d3 : this['encoder']['encode'](_0x6420d3);
                this['writeToEngine'](_0xaafa1d, _0x54db85);
            }
            ['writeToEngine'](_0x2650b1, _0x5158ea) {
                if (_0x5158ea['volatile'] && !this['conn']['transport']['writable']) {
                    _0x2c7745('volatile\x20packet\x20is\x20discarded\x20since\x20the\x20transport\x20is\x20not\x20currently\x20writable');
                    return;
                }
                const _0x36269a = Array['isArray'](_0x2650b1) ? _0x2650b1 : [_0x2650b1];
                for (const _0x2c1805 of _0x36269a) {
                    this['conn']['write'](_0x2c1805, _0x5158ea);
                }
            }
            ['ondata'](_0x52ddbe) {
                try {
                    this['decoder']['add'](_0x52ddbe);
                } catch (_0x4ccfb6) {
                    _0x2c7745('invalid\x20packet\x20format'), this['onerror'](_0x4ccfb6);
                }
            }
            ['ondecoded'](_0x28d43b) {
                let _0xe815ed, _0x3843b4;
                if (this['conn']['protocol'] === 0x3) {
                    const _0x3a9814 = _0xb9f6ff['parse'](_0x28d43b['nsp'], !![]);
                    _0xe815ed = _0x3a9814['pathname'], _0x3843b4 = _0x3a9814['query'];
                } else
                    _0xe815ed = _0x28d43b['nsp'], _0x3843b4 = _0x28d43b['data'];
                const _0x2f4688 = this['nsps']['get'](_0xe815ed);
                if (!_0x2f4688 && _0x28d43b['type'] === _0x4f45a9['PacketType']['CONNECT'])
                    this['connect'](_0xe815ed, _0x3843b4);
                else
                    _0x2f4688 && _0x28d43b['type'] !== _0x4f45a9['PacketType']['CONNECT'] && _0x28d43b['type'] !== _0x4f45a9['PacketType']['CONNECT_ERROR'] ? process['nextTick'](function () {
                        _0x2f4688['_onpacket'](_0x28d43b);
                    }) : (_0x2c7745('invalid\x20state\x20(packet\x20type:\x20%s)', _0x28d43b['type']), this['close']());
            }
            ['onerror'](_0x5563f5) {
                for (const _0x6c8314 of this['sockets']['values']()) {
                    _0x6c8314['_onerror'](_0x5563f5);
                }
                this['conn']['close']();
            }
            ['onclose'](_0x485e57) {
                _0x2c7745('client\x20close\x20with\x20reason\x20%s', _0x485e57), this['destroy']();
                for (const _0x42bd9b of this['sockets']['values']()) {
                    _0x42bd9b['_onclose'](_0x485e57);
                }
                this['sockets']['clear'](), this['decoder']['destroy']();
            }
            ['destroy']() {
                this['conn']['removeListener']('data', this['ondata']), this['conn']['removeListener']('error', this['onerror']), this['conn']['removeListener']('close', this['onclose']), this['decoder']['removeListener']('decoded', this['ondecoded']), this['connectTimeout'] && (clearTimeout(this['connectTimeout']), this['connectTimeout'] = undefined);
            }
        }
        _0x340f1c['Client'] = _0x10daa7;
    },
    0x242b: function (_0xfe9906, _0x490f07, _0x59045b) {
        'use strict';
        var _0x3711c4 = this && this['__createBinding'] || (Object['create'] ? function (_0x108f99, _0x1de838, _0x4747e7, _0x276f4f) {
                if (_0x276f4f === undefined)
                    _0x276f4f = _0x4747e7;
                var _0x2cf0f4 = Object['getOwnPropertyDescriptor'](_0x1de838, _0x4747e7);
                (!_0x2cf0f4 || ('get' in _0x2cf0f4 ? !_0x1de838['__esModule'] : _0x2cf0f4['writable'] || _0x2cf0f4['configurable'])) && (_0x2cf0f4 = {
                    'enumerable': !![],
                    'get': function () {
                        return _0x1de838[_0x4747e7];
                    }
                }), Object['defineProperty'](_0x108f99, _0x276f4f, _0x2cf0f4);
            } : function (_0x54b218, _0x2c0ccc, _0x2d29ea, _0x57659c) {
                if (_0x57659c === undefined)
                    _0x57659c = _0x2d29ea;
                _0x54b218[_0x57659c] = _0x2c0ccc[_0x2d29ea];
            }), _0x3b147b = this && this['__setModuleDefault'] || (Object['create'] ? function (_0x26a9b7, _0x181c76) {
                Object['defineProperty'](_0x26a9b7, 'default', {
                    'enumerable': !![],
                    'value': _0x181c76
                });
            } : function (_0x995383, _0x22908d) {
                _0x995383['default'] = _0x22908d;
            }), _0x707e7e = this && this['__importStar'] || function (_0x12269a) {
                if (_0x12269a && _0x12269a['__esModule'])
                    return _0x12269a;
                var _0x26d441 = {};
                if (_0x12269a != null) {
                    for (var _0x3236bf in _0x12269a)
                        if (_0x3236bf !== 'default' && Object['prototype']['hasOwnProperty']['call'](_0x12269a, _0x3236bf))
                            _0x3711c4(_0x26d441, _0x12269a, _0x3236bf);
                }
                return _0x3b147b(_0x26d441, _0x12269a), _0x26d441;
            }, _0x45f3a4 = this && this['__importDefault'] || function (_0x440593) {
                return _0x440593 && _0x440593['__esModule'] ? _0x440593 : { 'default': _0x440593 };
            };
        Object['defineProperty'](_0x490f07, '__esModule', { 'value': !![] }), _0x490f07['Namespace'] = _0x490f07['Socket'] = _0x490f07['Server'] = void 0x0;
        const _0x40db78 = _0x59045b(0x3575), _0x17e526 = _0x59045b(0xdf3b), _0x14be88 = _0x59045b(0xe994), _0x1d9f97 = _0x59045b(0x12bf4), _0x1fbfe4 = _0x59045b(0x31ed), _0xa8ad53 = _0x59045b(0x11569), _0x109814 = _0x59045b(0xde23), _0x122aaf = _0x59045b(0xd65b), _0x23aee8 = _0x59045b(0x141b9), _0x54055f = _0x59045b(0xe259);
        Object['defineProperty'](_0x490f07, 'Namespace', {
            'enumerable': !![],
            'get': function () {
                return _0x54055f['Namespace'];
            }
        });
        const _0x34f4a2 = _0x59045b(0xa98e), _0x5cceca = _0x59045b(0xb509), _0x43d3c2 = _0x707e7e(_0x59045b(0x135fb)), _0x4ba4b3 = _0x45f3a4(_0x59045b(0x566b)), _0x5b8b98 = _0x59045b(0x763);
        Object['defineProperty'](_0x490f07, 'Socket', {
            'enumerable': !![],
            'get': function () {
                return _0x5b8b98['Socket'];
            }
        });
        const _0x672f44 = _0x59045b(0x16847), _0x2312e6 = _0x59045b(0x12420), _0x340289 = (0x0, _0x4ba4b3['default'])('socket.io:server'), _0x58b6d9 = _0x59045b(0xa4fe)['version'], _0x4ee598 = /\.map/;
        class _0x28c474 extends _0x672f44['StrictEventEmitter'] {
            constructor(_0x3ed4cb, _0x5a09ec = {}) {
                super(), this['_nsps'] = new Map(), this['parentNsps'] = new Map();
                'object' === typeof _0x3ed4cb && _0x3ed4cb instanceof Object && !_0x3ed4cb['listen'] && (_0x5a09ec = _0x3ed4cb, _0x3ed4cb = undefined);
                this['path'](_0x5a09ec['path'] || '/socket.io'), this['connectTimeout'](_0x5a09ec['connectTimeout'] || 0xafc8), this['serveClient'](![] !== _0x5a09ec['serveClient']), this['_parser'] = _0x5a09ec['parser'] || _0x43d3c2, this['encoder'] = new this['_parser']['Encoder'](), this['adapter'](_0x5a09ec['adapter'] || _0x5cceca['Adapter']), this['sockets'] = this['of']('/'), this['opts'] = _0x5a09ec;
                if (_0x3ed4cb || typeof _0x3ed4cb == 'number')
                    this['attach'](_0x3ed4cb);
            }
            ['serveClient'](_0x584a68) {
                if (!arguments['length'])
                    return this['_serveClient'];
                return this['_serveClient'] = _0x584a68, this;
            }
            ['_checkNamespace'](_0x44bc92, _0x21a0e2, _0x462b53) {
                if (this['parentNsps']['size'] === 0x0)
                    return _0x462b53(![]);
                const _0x6e1bcf = this['parentNsps']['keys'](), _0x1cf77f = () => {
                        const _0x5cb037 = _0x6e1bcf['next']();
                        if (_0x5cb037['done'])
                            return _0x462b53(![]);
                        _0x5cb037['value'](_0x44bc92, _0x21a0e2, (_0xe632c5, _0x2db763) => {
                            if (_0xe632c5 || !_0x2db763)
                                return _0x1cf77f();
                            if (this['_nsps']['has'](_0x44bc92))
                                return _0x340289('dynamic\x20namespace\x20%s\x20already\x20exists', _0x44bc92), _0x462b53(this['_nsps']['get'](_0x44bc92));
                            const _0x54a026 = this['parentNsps']['get'](_0x5cb037['value'])['createChild'](_0x44bc92);
                            _0x340289('dynamic\x20namespace\x20%s\x20was\x20created', _0x44bc92), this['sockets']['emitReserved']('new_namespace', _0x54a026), _0x462b53(_0x54a026);
                        });
                    };
                _0x1cf77f();
            }
            ['path'](_0x2aa0d7) {
                if (!arguments['length'])
                    return this['_path'];
                this['_path'] = _0x2aa0d7['replace'](/\/$/, '');
                const _0x6be665 = this['_path']['replace'](/[-\/\\^$*+?.()|[\]{}]/g, '\x5c$&');
                return this['clientPathRegex'] = new RegExp('^' + _0x6be665 + '/socket\x5c.io(\x5c.msgpack|\x5c.esm)?(\x5c.min)?\x5c.js(\x5c.map)?(?:\x5c?|$)'), this;
            }
            ['connectTimeout'](_0x21d886) {
                if (_0x21d886 === undefined)
                    return this['_connectTimeout'];
                return this['_connectTimeout'] = _0x21d886, this;
            }
            ['adapter'](_0x35b8f1) {
                if (!arguments['length'])
                    return this['_adapter'];
                this['_adapter'] = _0x35b8f1;
                for (const _0x46b9e8 of this['_nsps']['values']()) {
                    _0x46b9e8['_initAdapter']();
                }
                return this;
            }
            ['listen'](_0x302f58, _0x2e25cb = {}) {
                return this['attach'](_0x302f58, _0x2e25cb);
            }
            ['attach'](_0xc94129, _0x12f980 = {}) {
                if ('function' == typeof _0xc94129) {
                    const _0x57222a = 'You\x20are\x20trying\x20to\x20attach\x20socket.io\x20to\x20an\x20express\x20' + 'request\x20handler\x20function.\x20Please\x20pass\x20a\x20http.Server\x20instance.';
                    throw new Error(_0x57222a);
                }
                Number(_0xc94129) == _0xc94129 && (_0xc94129 = Number(_0xc94129));
                if ('number' == typeof _0xc94129) {
                    _0x340289('creating\x20http\x20server\x20and\x20binding\x20to\x20%d', _0xc94129);
                    const _0x188f6a = _0xc94129;
                    _0xc94129 = _0x40db78['createServer']((_0x31c40d, _0x356d77) => {
                        _0x356d77['writeHead'](0x194), _0x356d77['end']();
                    }), _0xc94129['listen'](_0x188f6a);
                }
                return Object['assign'](_0x12f980, this['opts']), _0x12f980['path'] = _0x12f980['path'] || this['_path'], this['initEngine'](_0xc94129, _0x12f980), this;
            }
            ['attachApp'](_0x5f0cac, _0x44460a = {}) {
                Object['assign'](_0x44460a, this['opts']), _0x44460a['path'] = _0x44460a['path'] || this['_path'], _0x340289('creating\x20uWebSockets.js-based\x20engine\x20with\x20opts\x20%j', _0x44460a);
                const _0x30147c = new _0x109814['uServer'](_0x44460a);
                _0x30147c['attach'](_0x5f0cac, _0x44460a), this['bind'](_0x30147c), this['_serveClient'] && _0x5f0cac['get'](this['_path'] + '/*', (_0x378d19, _0x5c5f16) => {
                    if (!this['clientPathRegex']['test'](_0x5c5f16['getUrl']())) {
                        _0x5c5f16['setYield'](!![]);
                        return;
                    }
                    const _0x32a499 = _0x5c5f16['getUrl']()['replace'](this['_path'], '')['replace'](/\?.*$/, '')['replace'](/^\//, ''), _0x5d4564 = _0x4ee598['test'](_0x32a499), _0x51f350 = _0x5d4564 ? 'map' : 'source', _0x35e5a1 = '\x22' + _0x58b6d9 + '\x22', _0x37d297 = 'W/' + _0x35e5a1, _0x3d4105 = _0x5c5f16['getHeader']('if-none-match');
                    if (_0x3d4105) {
                        if (_0x35e5a1 === _0x3d4105 || _0x37d297 === _0x3d4105) {
                            _0x340289('serve\x20client\x20%s\x20304', _0x51f350), _0x378d19['writeStatus']('304\x20Not\x20Modified'), _0x378d19['end']();
                            return;
                        }
                    }
                    _0x340289('serve\x20client\x20%s', _0x51f350), _0x378d19['writeHeader']('cache-control', 'public,\x20max-age=0'), _0x378d19['writeHeader']('content-type', 'application/' + (_0x5d4564 ? 'json' : 'javascript')), _0x378d19['writeHeader']('etag', _0x35e5a1);
                    const _0x407c4b = _0xa8ad53['join'](__dirname, '../client-dist/', _0x32a499);
                    (0x0, _0x2312e6['serveFile'])(_0x378d19, _0x407c4b);
                }), (0x0, _0x2312e6['patchAdapter'])(_0x5f0cac);
            }
            ['initEngine'](_0x143292, _0x4fe0de) {
                _0x340289('creating\x20engine.io\x20instance\x20with\x20opts\x20%j', _0x4fe0de), this['eio'] = (0x0, _0x109814['attach'])(_0x143292, _0x4fe0de);
                if (this['_serveClient'])
                    this['attachServe'](_0x143292);
                this['httpServer'] = _0x143292, this['bind'](this['eio']);
            }
            ['attachServe'](_0x8a8ce) {
                _0x340289('attaching\x20client\x20serving\x20req\x20handler');
                const _0xccee99 = _0x8a8ce['listeners']('request')['slice'](0x0);
                _0x8a8ce['removeAllListeners']('request'), _0x8a8ce['on']('request', (_0x14a818, _0x4f543e) => {
                    if (this['clientPathRegex']['test'](_0x14a818['url']))
                        this['serve'](_0x14a818, _0x4f543e);
                    else
                        for (let _0x2f7b45 = 0x0; _0x2f7b45 < _0xccee99['length']; _0x2f7b45++) {
                            _0xccee99[_0x2f7b45]['call'](_0x8a8ce, _0x14a818, _0x4f543e);
                        }
                });
            }
            ['serve'](_0x174713, _0x173cf9) {
                const _0x363ebf = _0x174713['url']['replace'](this['_path'], '')['replace'](/\?.*$/, ''), _0x150424 = _0x4ee598['test'](_0x363ebf), _0x40eb50 = _0x150424 ? 'map' : 'source', _0x20fcdd = '\x22' + _0x58b6d9 + '\x22', _0x31d541 = 'W/' + _0x20fcdd, _0x5248bc = _0x174713['headers']['if-none-match'];
                if (_0x5248bc) {
                    if (_0x20fcdd === _0x5248bc || _0x31d541 === _0x5248bc) {
                        _0x340289('serve\x20client\x20%s\x20304', _0x40eb50), _0x173cf9['writeHead'](0x130), _0x173cf9['end']();
                        return;
                    }
                }
                _0x340289('serve\x20client\x20%s', _0x40eb50), _0x173cf9['setHeader']('Cache-Control', 'public,\x20max-age=0'), _0x173cf9['setHeader']('Content-Type', 'application/' + (_0x150424 ? 'json' : 'javascript')), _0x173cf9['setHeader']('ETag', _0x20fcdd), _0x28c474['sendFile'](_0x363ebf, _0x174713, _0x173cf9);
            }
            static ['sendFile'](_0x1165bf, _0x713d4a, _0x583620) {
                const _0xb51301 = (0x0, _0x17e526['createReadStream'])(_0xa8ad53['join'](__dirname, '../client-dist/', _0x1165bf)), _0x3d82ba = _0x1d9f97(_0x713d4a)['encodings']([
                        'br',
                        'gzip',
                        'deflate'
                    ]), _0x4ded87 = _0x33caea => {
                        _0x33caea && _0x583620['end']();
                    };
                switch (_0x3d82ba) {
                case 'br':
                    _0x583620['writeHead'](0xc8, { 'content-encoding': 'br' }), _0xb51301['pipe']((0x0, _0x14be88['createBrotliCompress'])())['pipe'](_0x583620), (0x0, _0x1fbfe4['pipeline'])(_0xb51301, (0x0, _0x14be88['createBrotliCompress'])(), _0x583620, _0x4ded87);
                    break;
                case 'gzip':
                    _0x583620['writeHead'](0xc8, { 'content-encoding': 'gzip' }), (0x0, _0x1fbfe4['pipeline'])(_0xb51301, (0x0, _0x14be88['createGzip'])(), _0x583620, _0x4ded87);
                    break;
                case 'deflate':
                    _0x583620['writeHead'](0xc8, { 'content-encoding': 'deflate' }), (0x0, _0x1fbfe4['pipeline'])(_0xb51301, (0x0, _0x14be88['createDeflate'])(), _0x583620, _0x4ded87);
                    break;
                default:
                    _0x583620['writeHead'](0xc8), (0x0, _0x1fbfe4['pipeline'])(_0xb51301, _0x583620, _0x4ded87);
                }
            }
            ['bind'](_0xed7e6e) {
                return this['engine'] = _0xed7e6e, this['engine']['on']('connection', this['onconnection']['bind'](this)), this;
            }
            ['onconnection'](_0x139dc1) {
                _0x340289('incoming\x20connection\x20with\x20id\x20%s', _0x139dc1['id']);
                const _0x38ef02 = new _0x122aaf['Client'](this, _0x139dc1);
                return _0x139dc1['protocol'] === 0x3 && _0x38ef02['connect']('/'), this;
            }
            ['of'](_0x288079, _0x21b7e5) {
                if (typeof _0x288079 === 'function' || _0x288079 instanceof RegExp) {
                    const _0x37adde = new _0x34f4a2['ParentNamespace'](this);
                    return _0x340289('initializing\x20parent\x20namespace\x20%s', _0x37adde['name']), typeof _0x288079 === 'function' ? this['parentNsps']['set'](_0x288079, _0x37adde) : this['parentNsps']['set']((_0x19789e, _0x499592, _0x131985) => _0x131985(null, _0x288079['test'](_0x19789e)), _0x37adde), _0x21b7e5 && _0x37adde['on']('connect', _0x21b7e5), _0x37adde;
                }
                if (String(_0x288079)[0x0] !== '/')
                    _0x288079 = '/' + _0x288079;
                let _0x111bab = this['_nsps']['get'](_0x288079);
                !_0x111bab && (_0x340289('initializing\x20namespace\x20%s', _0x288079), _0x111bab = new _0x54055f['Namespace'](this, _0x288079), this['_nsps']['set'](_0x288079, _0x111bab), _0x288079 !== '/' && this['sockets']['emitReserved']('new_namespace', _0x111bab));
                if (_0x21b7e5)
                    _0x111bab['on']('connect', _0x21b7e5);
                return _0x111bab;
            }
            ['close'](_0x3960ec) {
                for (const _0x1e886c of this['sockets']['sockets']['values']()) {
                    _0x1e886c['_onclose']('server\x20shutting\x20down');
                }
                this['engine']['close'](), (0x0, _0x2312e6['restoreAdapter'])(), this['httpServer'] ? this['httpServer']['close'](_0x3960ec) : _0x3960ec && _0x3960ec();
            }
            ['use'](_0x5c4448) {
                return this['sockets']['use'](_0x5c4448), this;
            }
            ['to'](_0x4ccadf) {
                return this['sockets']['to'](_0x4ccadf);
            }
            ['in'](_0xe7d1b0) {
                return this['sockets']['in'](_0xe7d1b0);
            }
            ['except'](_0x38e173) {
                return this['sockets']['except'](_0x38e173);
            }
            ['send'](..._0x1b3bba) {
                return this['sockets']['emit']('message', ..._0x1b3bba), this;
            }
            ['write'](..._0x33431e) {
                return this['sockets']['emit']('message', ..._0x33431e), this;
            }
            ['serverSideEmit'](_0x56a3fe, ..._0x53bcf8) {
                return this['sockets']['serverSideEmit'](_0x56a3fe, ..._0x53bcf8);
            }
            ['allSockets']() {
                return this['sockets']['allSockets']();
            }
            ['compress'](_0x104278) {
                return this['sockets']['compress'](_0x104278);
            }
            get ['volatile']() {
                return this['sockets']['volatile'];
            }
            get ['local']() {
                return this['sockets']['local'];
            }
            ['timeout'](_0x3c4275) {
                return this['sockets']['timeout'](_0x3c4275);
            }
            ['fetchSockets']() {
                return this['sockets']['fetchSockets']();
            }
            ['socketsJoin'](_0x5116fb) {
                return this['sockets']['socketsJoin'](_0x5116fb);
            }
            ['socketsLeave'](_0x514a24) {
                return this['sockets']['socketsLeave'](_0x514a24);
            }
            ['disconnectSockets'](_0x496f0e = ![]) {
                return this['sockets']['disconnectSockets'](_0x496f0e);
            }
        }
        _0x490f07['Server'] = _0x28c474;
        const _0x2c5edf = Object['keys'](_0x23aee8['EventEmitter']['prototype'])['filter'](function (_0x3513c2) {
            return typeof _0x23aee8['EventEmitter']['prototype'][_0x3513c2] === 'function';
        });
        _0x2c5edf['forEach'](function (_0x5838b8) {
            _0x28c474['prototype'][_0x5838b8] = function () {
                return this['sockets'][_0x5838b8]['apply'](this['sockets'], arguments);
            };
        }), _0xfe9906['exports'] = (_0x40ec50, _0x1ad079) => new _0x28c474(_0x40ec50, _0x1ad079), _0xfe9906['exports']['Server'] = _0x28c474, _0xfe9906['exports']['Namespace'] = _0x54055f['Namespace'], _0xfe9906['exports']['Socket'] = _0x5b8b98['Socket'];
        var _0x15698c = _0x59045b(0x763);
    },
    0xe259: function (_0x50c7f7, _0x3b21e0, _0x287f48) {
        'use strict';
        var _0x4eae91 = this && this['__importDefault'] || function (_0x3d4253) {
            return _0x3d4253 && _0x3d4253['__esModule'] ? _0x3d4253 : { 'default': _0x3d4253 };
        };
        Object['defineProperty'](_0x3b21e0, '__esModule', { 'value': !![] }), _0x3b21e0['Namespace'] = _0x3b21e0['RESERVED_EVENTS'] = void 0x0;
        const _0xfc1ae8 = _0x287f48(0x763), _0x10125a = _0x287f48(0x16847), _0x4fe3a6 = _0x4eae91(_0x287f48(0x566b)), _0xe5156 = _0x287f48(0x11ab6), _0x5cd35d = (0x0, _0x4fe3a6['default'])('socket.io:namespace');
        _0x3b21e0['RESERVED_EVENTS'] = new Set([
            'connect',
            'connection',
            'new_namespace'
        ]);
        class _0x87c4bc extends _0x10125a['StrictEventEmitter'] {
            constructor(_0xc15837, _0xc303d8) {
                super(), this['sockets'] = new Map(), this['_fns'] = [], this['_ids'] = 0x0, this['server'] = _0xc15837, this['name'] = _0xc303d8, this['_initAdapter']();
            }
            ['_initAdapter']() {
                this['adapter'] = new (this['server']['adapter']())(this);
            }
            ['use'](_0x39716e) {
                return this['_fns']['push'](_0x39716e), this;
            }
            ['run'](_0x1c8b81, _0x2c53ef) {
                const _0x2638d6 = this['_fns']['slice'](0x0);
                if (!_0x2638d6['length'])
                    return _0x2c53ef(null);
                function _0x361581(_0xa59d12) {
                    _0x2638d6[_0xa59d12](_0x1c8b81, function (_0x14d4e1) {
                        if (_0x14d4e1)
                            return _0x2c53ef(_0x14d4e1);
                        if (!_0x2638d6[_0xa59d12 + 0x1])
                            return _0x2c53ef(null);
                        _0x361581(_0xa59d12 + 0x1);
                    });
                }
                _0x361581(0x0);
            }
            ['to'](_0x3c79c8) {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['to'](_0x3c79c8);
            }
            ['in'](_0x201178) {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['in'](_0x201178);
            }
            ['except'](_0x2a8531) {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['except'](_0x2a8531);
            }
            ['_add'](_0x4c2431, _0x39baea, _0x1db3ee) {
                _0x5cd35d('adding\x20socket\x20to\x20nsp\x20%s', this['name']);
                const _0x3a8571 = new _0xfc1ae8['Socket'](this, _0x4c2431, _0x39baea);
                return this['run'](_0x3a8571, _0x5647f7 => {
                    process['nextTick'](() => {
                        if ('open' !== _0x4c2431['conn']['readyState']) {
                            _0x5cd35d('next\x20called\x20after\x20client\x20was\x20closed\x20-\x20ignoring\x20socket'), _0x3a8571['_cleanup']();
                            return;
                        }
                        if (_0x5647f7)
                            return _0x5cd35d('middleware\x20error,\x20sending\x20CONNECT_ERROR\x20packet\x20to\x20the\x20client'), _0x3a8571['_cleanup'](), _0x4c2431['conn']['protocol'] === 0x3 ? _0x3a8571['_error'](_0x5647f7['data'] || _0x5647f7['message']) : _0x3a8571['_error']({
                                'message': _0x5647f7['message'],
                                'data': _0x5647f7['data']
                            });
                        this['sockets']['set'](_0x3a8571['id'], _0x3a8571), _0x3a8571['_onconnect']();
                        if (_0x1db3ee)
                            _0x1db3ee();
                        this['emitReserved']('connect', _0x3a8571), this['emitReserved']('connection', _0x3a8571);
                    });
                }), _0x3a8571;
            }
            ['_remove'](_0x35a621) {
                this['sockets']['has'](_0x35a621['id']) ? this['sockets']['delete'](_0x35a621['id']) : _0x5cd35d('ignoring\x20remove\x20for\x20%s', _0x35a621['id']);
            }
            ['emit'](_0x2f490f, ..._0x2c0f9e) {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['emit'](_0x2f490f, ..._0x2c0f9e);
            }
            ['send'](..._0x23acee) {
                return this['emit']('message', ..._0x23acee), this;
            }
            ['write'](..._0x41d65e) {
                return this['emit']('message', ..._0x41d65e), this;
            }
            ['serverSideEmit'](_0x2572f9, ..._0x787e9) {
                if (_0x3b21e0['RESERVED_EVENTS']['has'](_0x2572f9))
                    throw new Error('\x22' + String(_0x2572f9) + '\x22\x20is\x20a\x20reserved\x20event\x20name');
                return _0x787e9['unshift'](_0x2572f9), this['adapter']['serverSideEmit'](_0x787e9), !![];
            }
            ['_onServerSideEmit'](_0x22861d) {
                super['emitUntyped']['apply'](this, _0x22861d);
            }
            ['allSockets']() {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['allSockets']();
            }
            ['compress'](_0x2743b8) {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['compress'](_0x2743b8);
            }
            get ['volatile']() {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['volatile'];
            }
            get ['local']() {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['local'];
            }
            ['timeout'](_0x344a40) {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['timeout'](_0x344a40);
            }
            ['fetchSockets']() {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['fetchSockets']();
            }
            ['socketsJoin'](_0x183387) {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['socketsJoin'](_0x183387);
            }
            ['socketsLeave'](_0x4eb973) {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['socketsLeave'](_0x4eb973);
            }
            ['disconnectSockets'](_0x40d7f8 = ![]) {
                return new _0xe5156['BroadcastOperator'](this['adapter'])['disconnectSockets'](_0x40d7f8);
            }
        }
        _0x3b21e0['Namespace'] = _0x87c4bc;
    },
    0xa98e: (_0x1b09b7, _0x562efd, _0x5c3a3d) => {
        'use strict';
        Object['defineProperty'](_0x562efd, '__esModule', { 'value': !![] }), _0x562efd['ParentNamespace'] = void 0x0;
        const _0x4770cd = _0x5c3a3d(0xe259);
        class _0x28c6cf extends _0x4770cd['Namespace'] {
            constructor(_0x158308) {
                super(_0x158308, '/_' + _0x28c6cf['count']++), this['children'] = new Set();
            }
            ['_initAdapter']() {
                const _0x55ff4c = (_0x414ed1, _0x3b664b) => {
                    this['children']['forEach'](_0x45d033 => {
                        _0x45d033['adapter']['broadcast'](_0x414ed1, _0x3b664b);
                    });
                };
                this['adapter'] = { 'broadcast': _0x55ff4c };
            }
            ['emit'](_0x3c7a89, ..._0x35832a) {
                return this['children']['forEach'](_0x4f5624 => {
                    _0x4f5624['emit'](_0x3c7a89, ..._0x35832a);
                }), !![];
            }
            ['createChild'](_0x54ebd5) {
                const _0x53c0e7 = new _0x4770cd['Namespace'](this['server'], _0x54ebd5);
                return _0x53c0e7['_fns'] = this['_fns']['slice'](0x0), this['listeners']('connect')['forEach'](_0x42528b => _0x53c0e7['on']('connect', _0x42528b)), this['listeners']('connection')['forEach'](_0x5616a1 => _0x53c0e7['on']('connection', _0x5616a1)), this['children']['add'](_0x53c0e7), this['server']['_nsps']['set'](_0x54ebd5, _0x53c0e7), _0x53c0e7;
            }
            ['fetchSockets']() {
                throw new Error('fetchSockets()\x20is\x20not\x20supported\x20on\x20parent\x20namespaces');
            }
        }
        _0x562efd['ParentNamespace'] = _0x28c6cf, _0x28c6cf['count'] = 0x0;
    },
    0x763: function (_0x43a34d, _0x47dbb6, _0x7c139a) {
        'use strict';
        var _0xc29c92 = this && this['__importDefault'] || function (_0x1a27f5) {
            return _0x1a27f5 && _0x1a27f5['__esModule'] ? _0x1a27f5 : { 'default': _0x1a27f5 };
        };
        Object['defineProperty'](_0x47dbb6, '__esModule', { 'value': !![] }), _0x47dbb6['Socket'] = _0x47dbb6['RESERVED_EVENTS'] = void 0x0;
        const _0x3aa73d = _0x7c139a(0x135fb), _0xfcd327 = _0xc29c92(_0x7c139a(0x566b)), _0x5ec77e = _0x7c139a(0x16847), _0x4dbb04 = _0xc29c92(_0x7c139a(0x7384)), _0x1f9082 = _0x7c139a(0x11ab6), _0xdbce2d = (0x0, _0xfcd327['default'])('socket.io:socket');
        _0x47dbb6['RESERVED_EVENTS'] = new Set([
            'connect',
            'connect_error',
            'disconnect',
            'disconnecting',
            'newListener',
            'removeListener'
        ]);
        function _0x5ea34d() {
        }
        class _0x3b75e9 extends _0x5ec77e['StrictEventEmitter'] {
            constructor(_0x2eb760, _0x556dc5, _0x4380b1) {
                super(), this['nsp'] = _0x2eb760, this['client'] = _0x556dc5, this['data'] = {}, this['connected'] = ![], this['acks'] = new Map(), this['fns'] = [], this['flags'] = {}, this['server'] = _0x2eb760['server'], this['adapter'] = this['nsp']['adapter'], _0x556dc5['conn']['protocol'] === 0x3 ? this['id'] = _0x2eb760['name'] !== '/' ? _0x2eb760['name'] + '#' + _0x556dc5['id'] : _0x556dc5['id'] : this['id'] = _0x4dbb04['default']['generateId'](), this['handshake'] = this['buildHandshake'](_0x4380b1);
            }
            ['buildHandshake'](_0xd3068b) {
                return {
                    'headers': this['request']['headers'],
                    'time': new Date() + '',
                    'address': this['conn']['remoteAddress'],
                    'xdomain': !!this['request']['headers']['origin'],
                    'secure': !!this['request']['connection']['encrypted'],
                    'issued': +new Date(),
                    'url': this['request']['url'],
                    'query': this['request']['_query'],
                    'auth': _0xd3068b
                };
            }
            ['emit'](_0x40fcc4, ..._0x194105) {
                if (_0x47dbb6['RESERVED_EVENTS']['has'](_0x40fcc4))
                    throw new Error('\x22' + String(_0x40fcc4) + '\x22\x20is\x20a\x20reserved\x20event\x20name');
                const _0x3285e3 = [
                        _0x40fcc4,
                        ..._0x194105
                    ], _0x3890d4 = {
                        'type': _0x3aa73d['PacketType']['EVENT'],
                        'data': _0x3285e3
                    };
                if (typeof _0x3285e3[_0x3285e3['length'] - 0x1] === 'function') {
                    const _0xf77c71 = this['nsp']['_ids']++;
                    _0xdbce2d('emitting\x20packet\x20with\x20ack\x20id\x20%d', _0xf77c71), this['registerAckCallback'](_0xf77c71, _0x3285e3['pop']()), _0x3890d4['id'] = _0xf77c71;
                }
                const _0x284f78 = Object['assign']({}, this['flags']);
                return this['flags'] = {}, this['notifyOutgoingListeners'](_0x3890d4), this['packet'](_0x3890d4, _0x284f78), !![];
            }
            ['registerAckCallback'](_0x1865b6, _0x59623b) {
                const _0x37feae = this['flags']['timeout'];
                if (_0x37feae === undefined) {
                    this['acks']['set'](_0x1865b6, _0x59623b);
                    return;
                }
                const _0x2d88ea = setTimeout(() => {
                    _0xdbce2d('event\x20with\x20ack\x20id\x20%d\x20has\x20timed\x20out\x20after\x20%d\x20ms', _0x1865b6, _0x37feae), this['acks']['delete'](_0x1865b6), _0x59623b['call'](this, new Error('operation\x20has\x20timed\x20out'));
                }, _0x37feae);
                this['acks']['set'](_0x1865b6, (..._0x29fcb2) => {
                    clearTimeout(_0x2d88ea), _0x59623b['apply'](this, [
                        null,
                        ..._0x29fcb2
                    ]);
                });
            }
            ['to'](_0x3210e7) {
                return this['newBroadcastOperator']()['to'](_0x3210e7);
            }
            ['in'](_0x56559c) {
                return this['newBroadcastOperator']()['in'](_0x56559c);
            }
            ['except'](_0x583fc0) {
                return this['newBroadcastOperator']()['except'](_0x583fc0);
            }
            ['send'](..._0x30ace0) {
                return this['emit']('message', ..._0x30ace0), this;
            }
            ['write'](..._0x42345a) {
                return this['emit']('message', ..._0x42345a), this;
            }
            ['packet'](_0x4cd6e8, _0x50c200 = {}) {
                _0x4cd6e8['nsp'] = this['nsp']['name'], _0x50c200['compress'] = ![] !== _0x50c200['compress'], this['client']['_packet'](_0x4cd6e8, _0x50c200);
            }
            ['join'](_0x7398b1) {
                return _0xdbce2d('join\x20room\x20%s', _0x7398b1), this['adapter']['addAll'](this['id'], new Set(Array['isArray'](_0x7398b1) ? _0x7398b1 : [_0x7398b1]));
            }
            ['leave'](_0x622aa4) {
                return _0xdbce2d('leave\x20room\x20%s', _0x622aa4), this['adapter']['del'](this['id'], _0x622aa4);
            }
            ['leaveAll']() {
                this['adapter']['delAll'](this['id']);
            }
            ['_onconnect']() {
                _0xdbce2d('socket\x20connected\x20-\x20writing\x20packet'), this['connected'] = !![], this['join'](this['id']), this['conn']['protocol'] === 0x3 ? this['packet']({ 'type': _0x3aa73d['PacketType']['CONNECT'] }) : this['packet']({
                    'type': _0x3aa73d['PacketType']['CONNECT'],
                    'data': { 'sid': this['id'] }
                });
            }
            ['_onpacket'](_0x114277) {
                _0xdbce2d('got\x20packet\x20%j', _0x114277);
                switch (_0x114277['type']) {
                case _0x3aa73d['PacketType']['EVENT']:
                    this['onevent'](_0x114277);
                    break;
                case _0x3aa73d['PacketType']['BINARY_EVENT']:
                    this['onevent'](_0x114277);
                    break;
                case _0x3aa73d['PacketType']['ACK']:
                    this['onack'](_0x114277);
                    break;
                case _0x3aa73d['PacketType']['BINARY_ACK']:
                    this['onack'](_0x114277);
                    break;
                case _0x3aa73d['PacketType']['DISCONNECT']:
                    this['ondisconnect']();
                    break;
                }
            }
            ['onevent'](_0x32488d) {
                const _0x51945c = _0x32488d['data'] || [];
                _0xdbce2d('emitting\x20event\x20%j', _0x51945c);
                null != _0x32488d['id'] && (_0xdbce2d('attaching\x20ack\x20callback\x20to\x20event'), _0x51945c['push'](this['ack'](_0x32488d['id'])));
                if (this['_anyListeners'] && this['_anyListeners']['length']) {
                    const _0x2073a1 = this['_anyListeners']['slice']();
                    for (const _0x29e663 of _0x2073a1) {
                        _0x29e663['apply'](this, _0x51945c);
                    }
                }
                this['dispatch'](_0x51945c);
            }
            ['ack'](_0x3a7bb2) {
                const _0x39ccfb = this;
                let _0x36dad2 = ![];
                return function () {
                    if (_0x36dad2)
                        return;
                    const _0x320bda = Array['prototype']['slice']['call'](arguments);
                    _0xdbce2d('sending\x20ack\x20%j', _0x320bda), _0x39ccfb['packet']({
                        'id': _0x3a7bb2,
                        'type': _0x3aa73d['PacketType']['ACK'],
                        'data': _0x320bda
                    }), _0x36dad2 = !![];
                };
            }
            ['onack'](_0x334384) {
                const _0x2a6d7b = this['acks']['get'](_0x334384['id']);
                'function' == typeof _0x2a6d7b ? (_0xdbce2d('calling\x20ack\x20%s\x20with\x20%j', _0x334384['id'], _0x334384['data']), _0x2a6d7b['apply'](this, _0x334384['data']), this['acks']['delete'](_0x334384['id'])) : _0xdbce2d('bad\x20ack\x20%s', _0x334384['id']);
            }
            ['ondisconnect']() {
                _0xdbce2d('got\x20disconnect\x20packet'), this['_onclose']('client\x20namespace\x20disconnect');
            }
            ['_onerror'](_0x3038df) {
                this['listeners']('error')['length'] ? this['emitReserved']('error', _0x3038df) : (console['error']('Missing\x20error\x20handler\x20on\x20`socket`.'), console['error'](_0x3038df['stack']));
            }
            ['_onclose'](_0x59e139) {
                if (!this['connected'])
                    return this;
                _0xdbce2d('closing\x20socket\x20-\x20reason\x20%s', _0x59e139), this['emitReserved']('disconnecting', _0x59e139), this['_cleanup'](), this['nsp']['_remove'](this), this['client']['_remove'](this), this['connected'] = ![], this['emitReserved']('disconnect', _0x59e139);
                return;
            }
            ['_cleanup']() {
                this['leaveAll'](), this['join'] = _0x5ea34d;
            }
            ['_error'](_0x384102) {
                this['packet']({
                    'type': _0x3aa73d['PacketType']['CONNECT_ERROR'],
                    'data': _0x384102
                });
            }
            ['disconnect'](_0x15b8e4 = ![]) {
                if (!this['connected'])
                    return this;
                return _0x15b8e4 ? this['client']['_disconnect']() : (this['packet']({ 'type': _0x3aa73d['PacketType']['DISCONNECT'] }), this['_onclose']('server\x20namespace\x20disconnect')), this;
            }
            ['compress'](_0x14fb69) {
                return this['flags']['compress'] = _0x14fb69, this;
            }
            get ['volatile']() {
                return this['flags']['volatile'] = !![], this;
            }
            get ['broadcast']() {
                return this['newBroadcastOperator']();
            }
            get ['local']() {
                return this['newBroadcastOperator']()['local'];
            }
            ['timeout'](_0x1d7ed4) {
                return this['flags']['timeout'] = _0x1d7ed4, this;
            }
            ['dispatch'](_0x4db1e4) {
                _0xdbce2d('dispatching\x20an\x20event\x20%j', _0x4db1e4), this['run'](_0x4db1e4, _0x3cea17 => {
                    process['nextTick'](() => {
                        if (_0x3cea17)
                            return this['_onerror'](_0x3cea17);
                        this['connected'] ? super['emitUntyped']['apply'](this, _0x4db1e4) : _0xdbce2d('ignore\x20packet\x20received\x20after\x20disconnection');
                    });
                });
            }
            ['use'](_0x5a9bf1) {
                return this['fns']['push'](_0x5a9bf1), this;
            }
            ['run'](_0x88341c, _0x3faf94) {
                const _0x6077c4 = this['fns']['slice'](0x0);
                if (!_0x6077c4['length'])
                    return _0x3faf94(null);
                function _0x17c05d(_0x7374d4) {
                    _0x6077c4[_0x7374d4](_0x88341c, function (_0x5522ef) {
                        if (_0x5522ef)
                            return _0x3faf94(_0x5522ef);
                        if (!_0x6077c4[_0x7374d4 + 0x1])
                            return _0x3faf94(null);
                        _0x17c05d(_0x7374d4 + 0x1);
                    });
                }
                _0x17c05d(0x0);
            }
            get ['disconnected']() {
                return !this['connected'];
            }
            get ['request']() {
                return this['client']['request'];
            }
            get ['conn']() {
                return this['client']['conn'];
            }
            get ['rooms']() {
                return this['adapter']['socketRooms'](this['id']) || new Set();
            }
            ['onAny'](_0x129769) {
                return this['_anyListeners'] = this['_anyListeners'] || [], this['_anyListeners']['push'](_0x129769), this;
            }
            ['prependAny'](_0x545d03) {
                return this['_anyListeners'] = this['_anyListeners'] || [], this['_anyListeners']['unshift'](_0x545d03), this;
            }
            ['offAny'](_0x438905) {
                if (!this['_anyListeners'])
                    return this;
                if (_0x438905) {
                    const _0x145204 = this['_anyListeners'];
                    for (let _0x886887 = 0x0; _0x886887 < _0x145204['length']; _0x886887++) {
                        if (_0x438905 === _0x145204[_0x886887])
                            return _0x145204['splice'](_0x886887, 0x1), this;
                    }
                } else
                    this['_anyListeners'] = [];
                return this;
            }
            ['listenersAny']() {
                return this['_anyListeners'] || [];
            }
            ['onAnyOutgoing'](_0xbe4396) {
                return this['_anyOutgoingListeners'] = this['_anyOutgoingListeners'] || [], this['_anyOutgoingListeners']['push'](_0xbe4396), this;
            }
            ['prependAnyOutgoing'](_0x33c313) {
                return this['_anyOutgoingListeners'] = this['_anyOutgoingListeners'] || [], this['_anyOutgoingListeners']['unshift'](_0x33c313), this;
            }
            ['offAnyOutgoing'](_0x158549) {
                if (!this['_anyOutgoingListeners'])
                    return this;
                if (_0x158549) {
                    const _0x54c2a7 = this['_anyOutgoingListeners'];
                    for (let _0xd0c29b = 0x0; _0xd0c29b < _0x54c2a7['length']; _0xd0c29b++) {
                        if (_0x158549 === _0x54c2a7[_0xd0c29b])
                            return _0x54c2a7['splice'](_0xd0c29b, 0x1), this;
                    }
                } else
                    this['_anyOutgoingListeners'] = [];
                return this;
            }
            ['listenersAnyOutgoing']() {
                return this['_anyOutgoingListeners'] || [];
            }
            ['notifyOutgoingListeners'](_0x5575f3) {
                if (this['_anyOutgoingListeners'] && this['_anyOutgoingListeners']['length']) {
                    const _0xd6532e = this['_anyOutgoingListeners']['slice']();
                    for (const _0x4424c7 of _0xd6532e) {
                        _0x4424c7['apply'](this, _0x5575f3['data']);
                    }
                }
            }
            ['newBroadcastOperator']() {
                const _0x3ff084 = Object['assign']({}, this['flags']);
                return this['flags'] = {}, new _0x1f9082['BroadcastOperator'](this['adapter'], new Set(), new Set([this['id']]), _0x3ff084);
            }
        }
        _0x47dbb6['Socket'] = _0x3b75e9;
    },
    0x16847: (_0x411008, _0x23df8d, _0x1d853e) => {
        'use strict';
        Object['defineProperty'](_0x23df8d, '__esModule', { 'value': !![] }), _0x23df8d['StrictEventEmitter'] = void 0x0;
        const _0xa42b22 = _0x1d853e(0x141b9);
        class _0x590414 extends _0xa42b22['EventEmitter'] {
            ['on'](_0x1d1a83, _0x388a7a) {
                return super['on'](_0x1d1a83, _0x388a7a);
            }
            ['once'](_0x26e25d, _0x2f504c) {
                return super['once'](_0x26e25d, _0x2f504c);
            }
            ['emit'](_0x757b7, ..._0x54ea9b) {
                return super['emit'](_0x757b7, ..._0x54ea9b);
            }
            ['emitReserved'](_0x22621f, ..._0x524ac0) {
                return super['emit'](_0x22621f, ..._0x524ac0);
            }
            ['emitUntyped'](_0x4567b1, ..._0x5cc3fe) {
                return super['emit'](_0x4567b1, ..._0x5cc3fe);
            }
            ['listeners'](_0x10595e) {
                return super['listeners'](_0x10595e);
            }
        }
        _0x23df8d['StrictEventEmitter'] = _0x590414;
    },
    0x12420: function (_0x36e5af, _0x14c5ca, _0x3afa1b) {
        'use strict';
        var _0x629d9f = this && this['__importDefault'] || function (_0x6fdc4b) {
            return _0x6fdc4b && _0x6fdc4b['__esModule'] ? _0x6fdc4b : { 'default': _0x6fdc4b };
        };
        Object['defineProperty'](_0x14c5ca, '__esModule', { 'value': !![] }), _0x14c5ca['serveFile'] = _0x14c5ca['restoreAdapter'] = _0x14c5ca['patchAdapter'] = void 0x0;
        const _0x421242 = _0x3afa1b(0xb509), _0x1950bd = _0x3afa1b(0xdf3b), _0x12c577 = _0x629d9f(_0x3afa1b(0x566b)), _0x58f18f = (0x0, _0x12c577['default'])('socket.io:adapter-uws'), _0x2fcbde = '\x1f', {
                addAll: _0x49d931,
                del: _0x54bc93,
                broadcast: _0x4017cc
            } = _0x421242['Adapter']['prototype'];
        function _0x58a9a6(_0x51e06f) {
            _0x421242['Adapter']['prototype']['addAll'] = function (_0x4219dc, _0x46bc1f) {
                const _0x1be5fa = !this['sids']['has'](_0x4219dc);
                _0x49d931['call'](this, _0x4219dc, _0x46bc1f);
                const _0x12ea85 = this['nsp']['sockets']['get'](_0x4219dc);
                if (!_0x12ea85)
                    return;
                if (_0x12ea85['conn']['transport']['name'] === 'websocket') {
                    _0x4a46eb(this['nsp']['name'], _0x12ea85, _0x1be5fa, _0x46bc1f);
                    return;
                }
                _0x1be5fa && _0x12ea85['conn']['on']('upgrade', () => {
                    const _0x386d0d = this['sids']['get'](_0x4219dc);
                    _0x386d0d && _0x4a46eb(this['nsp']['name'], _0x12ea85, _0x1be5fa, _0x386d0d);
                });
            }, _0x421242['Adapter']['prototype']['del'] = function (_0x5a2414, _0x457db0) {
                _0x54bc93['call'](this, _0x5a2414, _0x457db0);
                const _0x23ff25 = this['nsp']['sockets']['get'](_0x5a2414);
                if (_0x23ff25 && _0x23ff25['conn']['transport']['name'] === 'websocket') {
                    const _0x16baee = _0x23ff25['conn']['id'], _0x40f739 = _0x23ff25['conn']['transport']['socket'], _0x1778a7 = '' + this['nsp']['name'] + _0x2fcbde + _0x457db0;
                    _0x58f18f('unsubscribe\x20connection\x20%s\x20from\x20topic\x20%s', _0x16baee, _0x1778a7), _0x40f739['unsubscribe'](_0x1778a7);
                }
            }, _0x421242['Adapter']['prototype']['broadcast'] = function (_0x2cc0a3, _0xc501d0) {
                const _0x2bac40 = _0xc501d0['rooms']['size'] <= 0x1 && _0xc501d0['except']['size'] === 0x0;
                if (!_0x2bac40) {
                    _0x4017cc['call'](this, _0x2cc0a3, _0xc501d0);
                    return;
                }
                const _0x2fec48 = _0xc501d0['flags'] || {}, _0x4b290c = {
                        'preEncoded': !![],
                        'volatile': _0x2fec48['volatile'],
                        'compress': _0x2fec48['compress']
                    };
                _0x2cc0a3['nsp'] = this['nsp']['name'];
                const _0x2dd728 = this['encoder']['encode'](_0x2cc0a3), _0x139956 = _0xc501d0['rooms']['size'] === 0x0 ? this['nsp']['name'] : '' + this['nsp']['name'] + _0x2fcbde + _0xc501d0['rooms']['keys']()['next']()['value'];
                _0x58f18f('fast\x20publish\x20to\x20%s', _0x139956), _0x2dd728['forEach'](_0x418fcf => {
                    const _0x826cde = typeof _0x418fcf !== 'string';
                    _0x51e06f['publish'](_0x139956, _0x826cde ? _0x418fcf : '4' + _0x418fcf, _0x826cde);
                }), this['apply'](_0xc501d0, _0x3f822b => {
                    _0x3f822b['conn']['transport']['name'] !== 'websocket' && _0x3f822b['client']['writeToEngine'](_0x2dd728, _0x4b290c);
                });
            };
        }
        _0x14c5ca['patchAdapter'] = _0x58a9a6;
        function _0x4a46eb(_0x45074b, _0x53f0d2, _0x46d354, _0x5aff3b) {
            const _0x173441 = _0x53f0d2['conn']['id'], _0x58b414 = _0x53f0d2['conn']['transport']['socket'];
            _0x46d354 && (_0x58f18f('subscribe\x20connection\x20%s\x20to\x20topic\x20%s', _0x173441, _0x45074b), _0x58b414['subscribe'](_0x45074b)), _0x5aff3b['forEach'](_0x295e6e => {
                const _0x4e82da = '' + _0x45074b + _0x2fcbde + _0x295e6e;
                _0x58f18f('subscribe\x20connection\x20%s\x20to\x20topic\x20%s', _0x173441, _0x4e82da), _0x58b414['subscribe'](_0x4e82da);
            });
        }
        function _0x272d73() {
            _0x421242['Adapter']['prototype']['addAll'] = _0x49d931, _0x421242['Adapter']['prototype']['del'] = _0x54bc93, _0x421242['Adapter']['prototype']['broadcast'] = _0x4017cc;
        }
        _0x14c5ca['restoreAdapter'] = _0x272d73;
        const _0x3d88c0 = _0x2512c5 => {
            const {
                buffer: _0x4bc8a1,
                byteOffset: _0x582109,
                byteLength: _0x23c3d
            } = _0x2512c5;
            return _0x4bc8a1['slice'](_0x582109, _0x582109 + _0x23c3d);
        };
        function _0x37bd8f(_0x341f98, _0x45a2b0) {
            const {size: _0xb3dd84} = (0x0, _0x1950bd['statSync'])(_0x45a2b0), _0x2fd926 = (0x0, _0x1950bd['createReadStream'])(_0x45a2b0), _0x33d82e = () => !_0x2fd926['destroyed'] && _0x2fd926['destroy'](), _0x5defbd = _0x349e33 => {
                    _0x33d82e();
                    throw _0x349e33;
                }, _0x4fb8ec = _0x4aaacd => {
                    const _0x2abe0e = _0x3d88c0(_0x4aaacd), _0x5f0cee = _0x341f98['getWriteOffset'](), [_0x2eeadf, _0x416c67] = _0x341f98['tryEnd'](_0x2abe0e, _0xb3dd84);
                    !_0x416c67 && !_0x2eeadf && (_0x2fd926['pause'](), _0x341f98['onWritable'](_0x4d651f => {
                        const [_0x5d4192, _0x2412b8] = _0x341f98['tryEnd'](_0x2abe0e['slice'](_0x4d651f - _0x5f0cee), _0xb3dd84);
                        return !_0x2412b8 && _0x5d4192 && _0x2fd926['resume'](), _0x5d4192;
                    }));
                };
            _0x341f98['onAborted'](_0x33d82e), _0x2fd926['on']('data', _0x4fb8ec)['on']('error', _0x5defbd)['on']('end', _0x33d82e);
        }
        _0x14c5ca['serveFile'] = _0x37bd8f;
    },
    0x8313: (_0x1d6cc7, _0x60ed61, _0x32f4b0) => {
        'use strict';
        _0x32f4b0['r'](_0x60ed61), _0x32f4b0['d'](_0x60ed61, { 'Emitter': () => _0x405d5f });
        function _0x405d5f(_0x4a13e7) {
            if (_0x4a13e7)
                return _0x317eec(_0x4a13e7);
        }
        function _0x317eec(_0x336887) {
            for (var _0x589a0b in _0x405d5f['prototype']) {
                _0x336887[_0x589a0b] = _0x405d5f['prototype'][_0x589a0b];
            }
            return _0x336887;
        }
        _0x405d5f['prototype']['on'] = _0x405d5f['prototype']['addEventListener'] = function (_0x454cb4, _0x136084) {
            return this['_callbacks'] = this['_callbacks'] || {}, (this['_callbacks']['$' + _0x454cb4] = this['_callbacks']['$' + _0x454cb4] || [])['push'](_0x136084), this;
        }, _0x405d5f['prototype']['once'] = function (_0x560993, _0xe74821) {
            function _0x41ef43() {
                this['off'](_0x560993, _0x41ef43), _0xe74821['apply'](this, arguments);
            }
            return _0x41ef43['fn'] = _0xe74821, this['on'](_0x560993, _0x41ef43), this;
        }, _0x405d5f['prototype']['off'] = _0x405d5f['prototype']['removeListener'] = _0x405d5f['prototype']['removeAllListeners'] = _0x405d5f['prototype']['removeEventListener'] = function (_0x29580d, _0x252fa4) {
            this['_callbacks'] = this['_callbacks'] || {};
            if (0x0 == arguments['length'])
                return this['_callbacks'] = {}, this;
            var _0x28edbb = this['_callbacks']['$' + _0x29580d];
            if (!_0x28edbb)
                return this;
            if (0x1 == arguments['length'])
                return delete this['_callbacks']['$' + _0x29580d], this;
            var _0x1cc284;
            for (var _0xfe99aa = 0x0; _0xfe99aa < _0x28edbb['length']; _0xfe99aa++) {
                _0x1cc284 = _0x28edbb[_0xfe99aa];
                if (_0x1cc284 === _0x252fa4 || _0x1cc284['fn'] === _0x252fa4) {
                    _0x28edbb['splice'](_0xfe99aa, 0x1);
                    break;
                }
            }
            return _0x28edbb['length'] === 0x0 && delete this['_callbacks']['$' + _0x29580d], this;
        }, _0x405d5f['prototype']['emit'] = function (_0xdc4315) {
            this['_callbacks'] = this['_callbacks'] || {};
            var _0xa9c4b8 = new Array(arguments['length'] - 0x1), _0x3ecdc8 = this['_callbacks']['$' + _0xdc4315];
            for (var _0x5b825c = 0x1; _0x5b825c < arguments['length']; _0x5b825c++) {
                _0xa9c4b8[_0x5b825c - 0x1] = arguments[_0x5b825c];
            }
            if (_0x3ecdc8) {
                _0x3ecdc8 = _0x3ecdc8['slice'](0x0);
                for (var _0x5b825c = 0x0, _0x4b41c4 = _0x3ecdc8['length']; _0x5b825c < _0x4b41c4; ++_0x5b825c) {
                    _0x3ecdc8[_0x5b825c]['apply'](this, _0xa9c4b8);
                }
            }
            return this;
        }, _0x405d5f['prototype']['emitReserved'] = _0x405d5f['prototype']['emit'], _0x405d5f['prototype']['listeners'] = function (_0x56e194) {
            return this['_callbacks'] = this['_callbacks'] || {}, this['_callbacks']['$' + _0x56e194] || [];
        }, _0x405d5f['prototype']['hasListeners'] = function (_0x3f1233) {
            return !!this['listeners'](_0x3f1233)['length'];
        };
    },
    0xf8ef: (_0x2a04e0, _0x31874b, _0x3b6640) => {
        'use strict';
        _0x3b6640['r'](_0x31874b), _0x3b6640['d'](_0x31874b, {
            'Namespace': () => _0x4fa6a3,
            'Server': () => _0x4e6d16,
            'Socket': () => _0xfb4a70
        });
        var _0x236406 = _0x3b6640(0x242b);
        const {
            Server: _0x4e6d16,
            Namespace: _0x4fa6a3,
            Socket: _0xfb4a70
        } = _0x236406;
    },
    0xa4fe: _0x2bff85 => {
        'use strict';
        _0x2bff85['exports'] = JSON['parse']('{\x22name\x22:\x22socket.io\x22,\x22version\x22:\x224.5.3\x22,\x22description\x22:\x22node.js\x20realtime\x20framework\x20server\x22,\x22keywords\x22:[\x22realtime\x22,\x22framework\x22,\x22websocket\x22,\x22tcp\x22,\x22events\x22,\x22socket\x22,\x22io\x22],\x22files\x22:[\x22dist/\x22,\x22client-dist/\x22,\x22wrapper.mjs\x22,\x22!**/*.tsbuildinfo\x22],\x22directories\x22:{\x22doc\x22:\x22docs/\x22,\x22example\x22:\x22example/\x22,\x22lib\x22:\x22lib/\x22,\x22test\x22:\x22test/\x22},\x22type\x22:\x22commonjs\x22,\x22main\x22:\x22./dist/index.js\x22,\x22exports\x22:{\x22import\x22:\x22./wrapper.mjs\x22,\x22require\x22:\x22./dist/index.js\x22,\x22types\x22:\x22./dist/index.d.ts\x22},\x22types\x22:\x22./dist/index.d.ts\x22,\x22license\x22:\x22MIT\x22,\x22repository\x22:{\x22type\x22:\x22git\x22,\x22url\x22:\x22git://github.com/socketio/socket.io\x22},\x22scripts\x22:{\x22compile\x22:\x22rimraf\x20./dist\x20&&\x20tsc\x22,\x22test\x22:\x22npm\x20run\x20format:check\x20&&\x20npm\x20run\x20compile\x20&&\x20npm\x20run\x20test:types\x20&&\x20npm\x20run\x20test:unit\x22,\x22test:types\x22:\x22tsd\x22,\x22test:unit\x22:\x22nyc\x20mocha\x20--require\x20ts-node/register\x20--reporter\x20spec\x20--slow\x20200\x20--bail\x20--timeout\x2010000\x20test/index.ts\x22,\x22format:check\x22:\x22prettier\x20--check\x20\x5c\x22lib/**/*.ts\x5c\x22\x20\x5c\x22test/**/*.ts\x5c\x22\x22,\x22format:fix\x22:\x22prettier\x20--write\x20\x5c\x22lib/**/*.ts\x5c\x22\x20\x5c\x22test/**/*.ts\x5c\x22\x22,\x22prepack\x22:\x22npm\x20run\x20compile\x22},\x22dependencies\x22:{\x22accepts\x22:\x22~1.3.4\x22,\x22base64id\x22:\x22~2.0.0\x22,\x22debug\x22:\x22~4.3.2\x22,\x22engine.io\x22:\x22~6.2.0\x22,\x22socket.io-adapter\x22:\x22~2.4.0\x22,\x22socket.io-parser\x22:\x22~4.2.0\x22},\x22devDependencies\x22:{\x22@types/mocha\x22:\x22^9.0.0\x22,\x22expect.js\x22:\x220.3.1\x22,\x22mocha\x22:\x22^10.0.0\x22,\x22nyc\x22:\x22^15.1.0\x22,\x22prettier\x22:\x22^2.3.2\x22,\x22rimraf\x22:\x22^3.0.2\x22,\x22socket.io-client\x22:\x224.5.3\x22,\x22socket.io-client-v2\x22:\x22npm:socket.io-client@^2.4.0\x22,\x22superagent\x22:\x22^8.0.0\x22,\x22supertest\x22:\x22^6.1.6\x22,\x22ts-node\x22:\x22^10.2.1\x22,\x22tsd\x22:\x22^0.21.0\x22,\x22typescript\x22:\x22^4.4.2\x22,\x22uWebSockets.js\x22:\x22github:uNetworking/uWebSockets.js#v20.0.0\x22},\x22contributors\x22:[{\x22name\x22:\x22Guillermo\x20Rauch\x22,\x22email\x22:\x22rauchg@gmail.com\x22},{\x22name\x22:\x22Arnout\x20Kazemier\x22,\x22email\x22:\x22info@3rd-eden.com\x22},{\x22name\x22:\x22Vladimir\x20Dronnikov\x22,\x22email\x22:\x22dronnikov@gmail.com\x22},{\x22name\x22:\x22Einar\x20Otto\x20Stangvik\x22,\x22email\x22:\x22einaros@gmail.com\x22}],\x22engines\x22:{\x22node\x22:\x22>=10.0.0\x22},\x22tsd\x22:{\x22directory\x22:\x22test\x22}}');
    }
};
;
//# sourceMappingURL=314.js.map
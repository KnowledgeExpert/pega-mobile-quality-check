'use strict';
exports['id'] = 0x36a, exports['ids'] = [0x36a], exports['modules'] = {
    0x12862: (_0x32d394, _0x215a79, _0x5e7a7d) => {
        _0x5e7a7d['r'](_0x215a79);
        var _0x53844a = _0x5e7a7d(0x177ce), _0x3f2e7f = _0x5e7a7d['n'](_0x53844a), _0x1f74ce = _0x5e7a7d(0xed2f), _0x161864 = _0x5e7a7d['n'](_0x1f74ce), _0x57e8f4 = _0x5e7a7d(0x10ce7), _0x31f31d = _0x5e7a7d(0x13833), _0x2d93ef = _0x5e7a7d(0x51b9);
        ;
        async function _0x5f0d57({
            error: _0x4a59a3,
            type: _0x2e5bb7,
            exit: exit = !![]
        }) {
            let _0x2cde3b;
            try {
                _0x2cde3b ? console['error'](_0x2cde3b['formatted']['ansi']) : console['error'](_0x4a59a3['stack'] || _0x4a59a3);
            } catch (_0xf0776f) {
                console['error'](_0x4a59a3['stack'] || _0x4a59a3);
            } finally {
                console['info']('See\x20Log\x20file\x20for\x20more\x20Details...');
                if (exit)
                    (0x0, _0x2d93ef['exitProcess'])(0x1);
            }
        }
        var _0x9398b9 = _0x5e7a7d(0x1145c), _0x138cd1 = _0x5e7a7d['n'](_0x9398b9);
        ;
        const _0x35cf9a = '\x0a████████╗███████╗███████╗████████╗\x20\x20\x20\x20███╗\x20\x20\x20███╗\x20█████╗\x20██╗\x20\x20██╗███████╗██████╗\x20\x0a╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝\x20\x20\x20\x20████╗\x20████║██╔══██╗██║\x20██╔╝██╔════╝██╔══██╗\x0a\x20\x20\x20██║\x20\x20\x20█████╗\x20\x20███████╗\x20\x20\x20██║\x20\x20\x20\x20\x20\x20\x20██╔████╔██║███████║█████╔╝\x20█████╗\x20\x20██████╔╝\x0a\x20\x20\x20██║\x20\x20\x20██╔══╝\x20\x20╚════██║\x20\x20\x20██║\x20\x20\x20\x20\x20\x20\x20██║╚██╔╝██║██╔══██║██╔═██╗\x20██╔══╝\x20\x20██╔══██╗\x0a\x20\x20\x20██║\x20\x20\x20███████╗███████║\x20\x20\x20██║\x20\x20\x20\x20\x20\x20\x20██║\x20╚═╝\x20██║██║\x20\x20██║██║\x20\x20██╗███████╗██║\x20\x20██║\x0a\x20\x20\x20╚═╝\x20\x20\x20╚══════╝╚══════╝\x20\x20\x20╚═╝\x20\x20\x20\x20\x20\x20\x20╚═╝\x20\x20\x20\x20\x20╚═╝╚═╝\x20\x20╚═╝╚═╝\x20\x20╚═╝╚══════╝╚═╝\x20\x20╚═╝\x20\x20\x20\x0a', _0x26cff5 = () => {
                console['log'](_0x138cd1()['hex']('#ff3838')['bold'](_0x35cf9a));
            };
        ;
        const _0x230906 = process['argv']['indexOf']('--terminal-eye'), _0x8b4c2a = process['argv']['indexOf']('--terminal-eye-slave') > -0x1;
        function _0x5ce779(_0x5d8cd7) {
            process['on']('unhandledRejection', async _0xc3ee37 => await _0x5f0d57({
                'error': _0xc3ee37,
                'type': 'unhandledRejection',
                'exit': _0x5d8cd7['configuration']['runner']['process']['exitOnUnhandledErrors']
            }))['on']('uncaughtException', async _0x52d1d3 => await _0x5f0d57({
                'error': _0x52d1d3,
                'type': 'uncaughtException',
                'exit': _0x5d8cd7['configuration']['runner']['process']['exitOnUnhandledErrors']
            }));
        }
        async function _0x2bed49() {
            const _0x11029a = [
                Promise['all']([
                    _0x5e7a7d['e'](0xee),
                    _0x5e7a7d['e'](0x2dd),
                    _0x5e7a7d['e'](0x13c)
                ])['then'](_0x5e7a7d['bind'](_0x5e7a7d, 0x158fc)),
                Promise['all']([
                    _0x5e7a7d['e'](0xee),
                    _0x5e7a7d['e'](0x83),
                    _0x5e7a7d['e'](0x13a),
                    _0x5e7a7d['e'](0x2dd),
                    _0x5e7a7d['e'](0x7b),
                    _0x5e7a7d['e'](0x2ed),
                    _0x5e7a7d['e'](0x352),
                    _0x5e7a7d['e'](0x190)
                ])['then'](_0x5e7a7d['bind'](_0x5e7a7d, 0xc5d1)),
                Promise['all']([
                    _0x5e7a7d['e'](0xee),
                    _0x5e7a7d['e'](0x83),
                    _0x5e7a7d['e'](0x13a),
                    _0x5e7a7d['e'](0x2dd),
                    _0x5e7a7d['e'](0x7b),
                    _0x5e7a7d['e'](0x2ed),
                    _0x5e7a7d['e'](0x352),
                    _0x5e7a7d['e'](0x190)
                ])['then'](_0x5e7a7d['bind'](_0x5e7a7d, 0x1fee))
            ];
            if (_0x8b4c2a)
                _0x11029a['push'](Promise['all']([
                    _0x5e7a7d['e'](0x83),
                    _0x5e7a7d['e'](0x38a)
                ])['then'](_0x5e7a7d['bind'](_0x5e7a7d, 0xc6da)));
            const _0x1ab382 = await Promise['all'](_0x11029a);
            if (_0x8b4c2a)
                _0x1ab382[0x1]['stateManager']['state']['terminalDashBoard'] = !![];
            _0x5ce779(_0x1ab382[0x2]['configManager']);
        }
        async function _0x53d77c() {
            const _0x28fdba = [
                    'run',
                    'init',
                    'generate',
                    'validate'
                ], _0x3a00c2 = process['argv'][0x2];
            process['title'] = 'Test\x20Maker', process['env']['FORCE_COLOR'] = '3', _0x26cff5();
            if (_0x28fdba['includes'](_0x3a00c2))
                await _0x2bed49();
            let _0x14cb28 = Promise['all']([
                    _0x5e7a7d['e'](0x39d),
                    _0x5e7a7d['e'](0x7b),
                    _0x5e7a7d['e'](0x67),
                    _0x5e7a7d['e'](0x1fd),
                    _0x5e7a7d['e'](0x3a4)
                ])['then'](_0x5e7a7d['t']['bind'](_0x5e7a7d, 0xc165, 0x17)), _0x43028d = await Promise['all']([
                    _0x14cb28,
                    Promise['all']([
                        _0x5e7a7d['e'](0x39d),
                        _0x5e7a7d['e'](0x7b),
                        _0x5e7a7d['e'](0x67),
                        _0x5e7a7d['e'](0x1fd),
                        _0x5e7a7d['e'](0x206)
                    ])['then'](_0x5e7a7d['bind'](_0x5e7a7d, 0x7919)),
                    Promise['all']([
                        _0x5e7a7d['e'](0xee),
                        _0x5e7a7d['e'](0x39d),
                        _0x5e7a7d['e'](0x7b),
                        _0x5e7a7d['e'](0x67),
                        _0x5e7a7d['e'](0x1fd),
                        _0x5e7a7d['e'](0x7f),
                        _0x5e7a7d['e'](0x212)
                    ])['then'](_0x5e7a7d['bind'](_0x5e7a7d, 0x12667)),
                    Promise['all']([
                        _0x5e7a7d['e'](0xee),
                        _0x5e7a7d['e'](0x39d),
                        _0x5e7a7d['e'](0x7b),
                        _0x5e7a7d['e'](0x67),
                        _0x5e7a7d['e'](0x18d),
                        _0x5e7a7d['e'](0x1fd),
                        _0x5e7a7d['e'](0x2e3)
                    ])['then'](_0x5e7a7d['bind'](_0x5e7a7d, 0x10703))
                ]);
            const _0x51335b = _0x43028d[0x0]['program'];
            try {
                await _0x51335b['version'](_0x31f31d['testMakerPackageJson']['version'])['name']('ketm')['option']('--no-bundle', '', {
                    'global': !![],
                    'hidden': !![]
                })['option']('--pnpm', '', {
                    'global': !![],
                    'hidden': !![]
                })['option']('--devtools', '', {
                    'global': !![],
                    'hidden': !![]
                })['option']('--devtools-template', '', {
                    'global': !![],
                    'hidden': !![]
                })['help']('Test\x20Maker\x20CLI')['run']();
            } catch (_0x12cce1) {
                _0x3f2e7f()['error'](_0x12cce1['message']['indexOf']('Synopsis') > -0x1 ? _0x12cce1['message']['substring'](0x0, _0x12cce1['message']['indexOf']('Synopsis'))['trim']() : _0x12cce1), (0x0, _0x2d93ef['exitProcess'])(0x1);
            }
        }
        async function _0x2468b1(_0x1317c8, _0x370b74) {
            const _0x5439df = process['argv']['splice'](0x1), _0x1c9896 = _0x31f31d['testMakerArtifactsPath'] + '/profiling/' + (0x0, _0x57e8f4['format'])(new Date(), 'DD-MM-YYYY\x20hh-mm-ss\x20A');
            _0x1317c8 > -0x1 && (_0x5439df['splice'](_0x5439df['indexOf']('--profile-cpu'), 0x1), _0x5439df['splice'](0x0, 0x0, '--cpu-prof', '--cpu-prof-dir', _0x1c9896)), _0x370b74 > -0x1 && (_0x5439df['splice'](_0x5439df['indexOf']('--profile-memory'), 0x1), _0x5439df['splice'](0x1, 0x0, '--heap-prof', '--heap-prof-dir', _0x1c9896)), await _0x161864()('node', _0x5439df, { 'stdio': 'inherit' });
        }
        ((async () => {
            try {
                const _0x25e6f6 = process['argv']['indexOf']('--profile-cpu'), _0x37aa90 = process['argv']['indexOf']('--profile-memory');
                if (_0x25e6f6 > -0x1 || _0x37aa90 > -0x1) {
                    await _0x2468b1(_0x25e6f6, _0x37aa90);
                    return;
                }
                _0x230906 > -0x1 ? await (await Promise['all']([
                    _0x5e7a7d['e'](0x83),
                    _0x5e7a7d['e'](0x2)
                ])['then'](_0x5e7a7d['bind'](_0x5e7a7d, 0x11942)))['terminalDashboard']['startDashboard'](_0x230906) : await _0x53d77c();
            } catch (_0x1db143) {
                _0x3f2e7f()['error'](_0x1db143);
            }
        })());
    },
    0x13833: (_0xf80ef2, _0x283631, _0x3431f8) => {
        _0x3431f8['r'](_0x283631), _0x3431f8['d'](_0x283631, {
            'allRetriesFailedMessage': () => _0x4cf50d,
            'globalTestMakerConfigMangerName': () => _0x171108,
            'globalTestMakerEventsMangerName': () => _0x190e68,
            'globalTestMakerInstanceMangerName': () => _0x7b46e0,
            'globalTestMakerLogMangerName': () => _0x82b181,
            'globalTestMakerLoggerName': () => _0x57aeb0,
            'globalTestMakerName': () => _0x4b9f68,
            'globalTestMakerPluginsName': () => _0x3f7aad,
            'globalTestMakerStateMangerName': () => _0x1b4268,
            'isStudio': () => _0x208aaf,
            'keywordTimeoutMessage': () => _0x15bb9b,
            'minimumSelectorTimeOut': () => _0x29c8ca,
            'modulesPaths': () => _0x4ee886,
            'projectPath': () => _0x5536e6,
            'selectorNotVisibleMessage': () => _0x3101a8,
            'selectorNotfoundMessage': () => _0x5c5739,
            'selectorSessionErrorMessage': () => _0x9f753,
            'testMakerAdapterSelectorName': () => _0x29be51,
            'testMakerArtifactsPath': () => _0xfd1455,
            'testMakerBundledDepsPath': () => _0x3ac355,
            'testMakerDistPath': () => _0x2849da,
            'testMakerElementUidName': () => _0x2a914c,
            'testMakerFrameElementUidName': () => _0x452582,
            'testMakerInstallPath': () => _0x446a0a,
            'testMakerPackageJson': () => _0x4cc2f2,
            'testMakerPackageName': () => _0x1cdc5f,
            'tmLoggerContentStrip': () => _0x253389,
            'tmLoggerFileStrip': () => _0x2080e8
        });
        var _0x5c58b5 = _0x3431f8(0x10e48), _0x12ecca = _0x3431f8(0x3b1), _0xc813cd = _0x3431f8['n'](_0x12ecca), _0x6c83d7;
        const _0x4cc2f2 = _0x5c58b5, _0x1cdc5f = _0x4cc2f2['name'], _0x82b181 = '__TEST_MAKER__LOG__MANAGER__', _0x171108 = '__TEST_MA\x20\x20\x20KER__CONFIG__MANGER__', _0x7b46e0 = '__TEST_MAKER__Instance__MANGER__', _0x1b4268 = '__TEST_MAKER__STATE__MANGER__', _0x190e68 = '__TEST_MAKER__EVENTS__MANGER__', _0x4b9f68 = '__TEST__MAKER__', _0x3f7aad = '__TEST__MAKER__PLUGINS__', _0x57aeb0 = '__TEST_MAKER__logger__', _0x29be51 = '__TM_ADAPTER_SELECTOR__', _0x2a914c = 'data-test-maker-id', _0x452582 = 'data-test-maker-frame-id', _0x5c5739 = 'Could\x20not\x20obtain\x20information\x20about\x20the\x20Selector\x20because\x20the\x20specified\x20selector\x20does\x20not\x20match\x20any\x20node\x20in\x20the\x20DOM\x20tree.\x20Make\x20sure\x20the\x20Selector\x20exists\x20or\x20the\x20operation\x20is\x20performed\x20in\x20the\x20correct\x20Frame', _0x3101a8 = 'Selector\x20exists\x20but\x20not\x20visible,\x20if\x20visibilityCheck\x20is\x20not\x20required\x20disable\x20it\x20in\x20Selector\x27s\x20options.', _0x9f753 = 'Could\x20not\x20resolve\x20Selector\x20Session.\x20make\x20sure\x20you\x20are\x20in\x20Client\x20context\x20when\x20executing\x20any\x20methods\x20or\x20properties', _0x4cf50d = 'All\x20retries\x20failed\x20after', _0x15bb9b = 'Keyword\x20Timeout\x20Error', _0x29c8ca = 0x64, _0x253389 = '<tm-logger>content</tm-logger>', _0x2080e8 = '<tm-logger>file-content</tm-logger>', _0x5536e6 = typeof process !== 'undefined' ? _0xc813cd()['normalizeTrim'](process['cwd']()) : '', _0x446a0a = typeof process !== 'undefined' ? _0xc813cd()['normalizeTrim'](_0xc813cd()['dirname'](_0xc813cd()['dirname'](((_0x6c83d7 = process['mainModule']) === null || _0x6c83d7 === void 0x0 ? void 0x0 : _0x6c83d7['filename']) || ''))) : '', _0xfd1455 = typeof process !== 'undefined' ? _0xc813cd()['joinSafe'](_0x5536e6, '.test-maker') : '', _0x2849da = _0x446a0a + '/dist', _0x3ac355 = _0x446a0a + '/node_modules', _0x4ee886 = [
                'node_modules',
                _0x3ac355
            ], _0x208aaf = typeof process !== 'undefined' ? process['env']['isStudio'] : ![];
    },
    0x51b9: (_0x42664b, _0x2ba95b, _0x3c510a) => {
        _0x3c510a['r'](_0x2ba95b), _0x3c510a['d'](_0x2ba95b, { 'exitProcess': () => _0x1e25a0 });
        function _0x1e25a0(_0x1dbbf6, _0x268722 = !![]) {
            if (_0x268722)
                console['log']('\x0aExiting\x20Test\x20Maker\x20Process.\x0a');
            process['exit'](_0x1dbbf6);
        }
    }
};
;
//# sourceMappingURL=874.js.map
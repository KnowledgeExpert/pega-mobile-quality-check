'use strict';
exports['id'] = 0x13c, exports['ids'] = [0x13c], exports['modules'] = {
    0x158fc: (_0x475ab4, _0x24e8df, _0x29d8eb) => {
        _0x29d8eb['r'](_0x24e8df), _0x29d8eb['d'](_0x24e8df, { 'exitTasks': () => _0x25f8e3 });
        var _0x5e9c03 = _0x29d8eb(0x1e99), _0x45826c = _0x29d8eb(0x7fdd);
        _0x5e9c03['internalLogger']['logFile']['enabled'] = !![], _0x5e9c03['internalLogger']['logFile']['prefixDate'] = !![], _0x5e9c03['internalLogger']['logFile']['prefixLevel'] = !![], _0x5e9c03['internalLogger']['overrideConsole'](), _0x5e9c03['internalLogger']['hookToStdOut']();
        const _0x25f8e3 = new _0x45826c['default']({ 'autoStart': ![] });
    },
    0x103cd: (_0xc7749c, _0x4e8a92, _0x3e579c) => {
        _0x3e579c['r'](_0x4e8a92), _0x3e579c['d'](_0x4e8a92, { 'ansiRegex': () => _0x20eba7 });
        const _0x20eba7 = _0x154492 => {
            const _0x51a98a = [
                '[\x5cu001B\x5cu009B][[\x5c]()#;?]*(?:(?:(?:[a-zA-Z\x5cd]*(?:;[-a-zA-Z\x5cd\x5c/#&.:=?%@~_]*)*)?\x5cu0007)',
                '(?:(?:\x5cd{1,4}(?:;\x5cd{0,4})*)?[\x5cdA-PR-TZcf-ntqry=><~]))'
            ]['join']('|');
            return new RegExp(_0x51a98a, _0x154492 ? undefined : 'g');
        };
    },
    0xbb0b: (_0x2e224c, _0x304145, _0x20a907) => {
        _0x20a907['r'](_0x304145), _0x20a907['d'](_0x304145, { 'hasAnsi': () => _0x4d3090 });
        var _0x3e4001 = _0x20a907(0x103cd);
        const _0x4de7ed = new RegExp((0x0, _0x3e4001['ansiRegex'])()['source']);
        function _0x4d3090(_0x3ec403) {
            return _0x4de7ed['test'](_0x3ec403);
        }
    },
    0x7a2a: (_0x266c6b, _0x4a2eba, _0x290bf7) => {
        _0x290bf7['r'](_0x4a2eba), _0x290bf7['d'](_0x4a2eba, { 'hookToStdOut': () => _0x5aab6d });
        function _0x5aab6d({
            callback: _0x555904,
            takeControl: _0x2a2470,
            canOutput: canOutput = !![]
        }) {
            const _0x450dbb = process['stdout']['write']['bind'](process['stdout']), _0x33d6a4 = process['stderr']['write']['bind'](process['stderr']);
            return process['stdout']['write'] = (_0x2b7256, _0x19df62, _0x58abfd) => {
                const _0xbbf9d8 = typeof canOutput === 'function' ? canOutput(_0x2b7256) : canOutput;
                if (_0x2a2470)
                    _0x555904({
                        'chunk': _0x2b7256,
                        'encoding': _0x19df62,
                        'cb': _0x58abfd,
                        'isError': ![],
                        'stdOutWriter': _0x450dbb
                    });
                else {
                    _0x555904({
                        'chunk': _0x2b7256,
                        'encoding': _0x19df62,
                        'cb': _0x58abfd,
                        'isError': ![],
                        'stdOutWriter': _0x450dbb
                    });
                    if (_0xbbf9d8)
                        _0x450dbb(_0x2b7256, _0x19df62, _0x58abfd);
                }
            }, process['stderr']['write'] = (_0x11fc6e, _0x41cdb4, _0x443ad4) => {
                const _0x52d729 = typeof canOutput === 'function' ? canOutput(_0x11fc6e) : canOutput;
                if (_0x2a2470)
                    _0x555904({
                        'chunk': _0x11fc6e,
                        'encoding': _0x41cdb4,
                        'isError': !![],
                        'stdOutWriter': _0x33d6a4
                    });
                else {
                    _0x555904({
                        'chunk': _0x11fc6e,
                        'encoding': _0x41cdb4,
                        'isError': !![],
                        'stdOutWriter': _0x33d6a4
                    });
                    if (_0x52d729)
                        _0x33d6a4(_0x11fc6e, _0x41cdb4, _0x443ad4);
                }
            }, () => {
                process['stdout']['write'] = _0x450dbb, process['stderr']['write'] = _0x33d6a4;
            };
        }
    },
    0x189a: (_0x14079e, _0x376037, _0x1e024e) => {
        _0x1e024e['r'](_0x376037), _0x1e024e['d'](_0x376037, { 'stripAnsi': () => _0x21b79c });
        var _0x4b4232 = _0x1e024e(0x103cd);
        const _0x21b79c = _0x2e43e1 => typeof _0x2e43e1 === 'string' ? _0x2e43e1['replace']((0x0, _0x4b4232['ansiRegex'])(), '') : _0x2e43e1;
    },
    0x1e99: (_0x4827c8, _0x20002c, _0x599932) => {
        _0x599932['r'](_0x20002c), _0x599932['d'](_0x20002c, {
            'InternalLogger': () => _0x5ed886,
            'internalLogger': () => _0x51c9ea
        });
        var _0x4281a4 = _0x599932(0x1145c), _0x58d89e = _0x599932['n'](_0x4281a4), _0x307556 = _0x599932(0x10ce7), _0x3428f5 = _0x599932(0x17fbe), _0xf63e4 = _0x599932['n'](_0x3428f5), _0x120ee7 = _0x599932(0x3b1), _0x16335e = _0x599932['n'](_0x120ee7), _0xa448be = _0x599932(0x1206d), _0x52a2d2 = _0x599932['n'](_0xa448be), _0x2aefee = _0x599932(0x13833), _0x36c9ba = _0x599932(0xbb0b), _0x229a9c = _0x599932(0x7a2a), _0x2d29c2 = _0x599932(0x189a);
        const _0x29b60a = console['log'], _0x2d2c05 = console['info'], _0x3798a9 = console['warn'], _0x5ce907 = console['error'], _0x224e91 = console['trace'], _0x5d010b = console['debug'];
        class _0x5ed886 {
            constructor() {
                this['enabled'] = !![], this['level'] = 'all', this['logFile'] = {
                    'enabled': ![],
                    'name': '',
                    'prefixDate': ![],
                    'prefixLevel': ![]
                }, this['isHooked'] = ![], this['theme'] = {
                    'trace': _0x58d89e()['reset'],
                    'debug': _0x58d89e()['reset'],
                    'info': _0x58d89e()['cyanBright'],
                    'warn': _0x58d89e()['yellowBright'],
                    'error': _0x58d89e()['redBright'],
                    'critical': _0x58d89e()['redBright'],
                    'fatal': _0x58d89e()['redBright']
                }, this['logLevels'] = [
                    'all',
                    'trace',
                    'debug',
                    'info',
                    'log',
                    'warn',
                    'error',
                    'critical',
                    'fatal',
                    'always'
                ];
            }
            ['overrideConsole']() {
                console['log'] = (..._0x166123) => {
                    this['log']['apply'](this, _0x166123);
                }, console['info'] = (..._0x149823) => {
                    this['info']['apply'](this, _0x149823);
                }, console['warn'] = (..._0x125dba) => {
                    this['warn']['apply'](this, _0x125dba);
                }, console['error'] = (..._0x256997) => {
                    this['error']['apply'](this, _0x256997);
                }, console['trace'] = (..._0x382064) => {
                    this['trace']['apply'](this, _0x382064);
                }, console['debug'] = (..._0x23a16f) => {
                    this['debug']['apply'](this, _0x23a16f);
                };
            }
            ['restoreConsole']() {
                console['log'] = _0x29b60a, console['info'] = _0x2d2c05, console['warn'] = _0x3798a9, console['error'] = _0x5ce907, console['trace'] = _0x224e91, console['debug'] = _0x5d010b;
            }
            ['trace'](..._0x1d22b8) {
                this['stdOut']('trace', ..._0x1d22b8);
            }
            ['debug'](..._0x44fcfc) {
                this['stdOut']('debug', ..._0x44fcfc);
            }
            ['info'](..._0x15b4d4) {
                this['stdOut']('info', ..._0x15b4d4);
            }
            ['log'](..._0x2abf56) {
                this['stdOut']('log', ..._0x2abf56);
            }
            ['warn'](..._0x5c1cb2) {
                this['stdError']('warn', ..._0x5c1cb2);
            }
            ['error'](..._0x32e92c) {
                this['stdError']('error', ..._0x32e92c);
            }
            ['critical'](..._0x31f23a) {
                this['stdError']('critical', ..._0x31f23a);
            }
            ['fatal'](..._0x5991ad) {
                this['stdError']('fatal', ..._0x5991ad);
            }
            ['always'](..._0x55bf3a) {
                this['stdOut']('always', ..._0x55bf3a);
            }
            ['hookToStdOut']() {
                !this['isHooked'] && (this['isHooked'] = !![], this['createLogFile'](), (0x0, _0x229a9c['hookToStdOut'])({
                    'callback': _0x48a329 => {
                        if (!this['stdOutWriter'])
                            this['stdOutWriter'] = _0x48a329['stdErrorWriter'];
                        if (!this['stdErrorWriter'])
                            this['stdErrorWriter'] = _0x48a329['stdErrorWriter'];
                        if (!this['enabled'])
                            return;
                        let _0x35c6e0 = _0x48a329['chunk'];
                        if (_0x48a329['isError'] && _0x48a329['stdErrorWriter'])
                            _0x48a329['stdErrorWriter'](_0x35c6e0, _0x48a329['encoding'], _0x48a329['cb']);
                        else
                            _0x48a329['stdOutWriter'] && _0x48a329['stdOutWriter'](_0x35c6e0, _0x48a329['encoding'], _0x48a329['cb']);
                    },
                    'takeControl': !![],
                    'canOutput': () => !![]
                }));
            }
            ['stdOut'](_0x363559, ..._0x43a092) {
                var _0x3206e2;
                _0x43a092['unshift'](_0x363559);
                if (this['canLog'](_0x363559)) {
                    const _0x3d9224 = this['format']['apply'](this, _0x43a092);
                    this['stdOutWriter'] ? this['stdOutWriter'](_0x3d9224, 'utf8') : process['stdout']['write'](_0x3d9224), this['logFile']['enabled'] && ((_0x3206e2 = this['fileStream']) === null || _0x3206e2 === void 0x0 ? void 0x0 : _0x3206e2['write'](this['formatWriteToFile'](_0x363559, _0x3d9224)));
                }
            }
            ['stdError'](_0x3abb26, ..._0x51f479) {
                var _0x1ddaba;
                _0x51f479['unshift'](_0x3abb26);
                if (this['canLog'](_0x3abb26)) {
                    const _0x440434 = this['format']['apply'](this, _0x51f479);
                    this['stdErrorWriter'] ? this['stdErrorWriter'](_0x440434, 'utf8') : process['stderr']['write'](_0x440434), this['logFile']['enabled'] && ((_0x1ddaba = this['fileStream']) === null || _0x1ddaba === void 0x0 ? void 0x0 : _0x1ddaba['write'](this['formatWriteToFile'](_0x3abb26, _0x440434)));
                }
            }
            ['canLog'](_0x1a63cb) {
                if (this['level'] === 'silent')
                    return ![];
                return _0x1a63cb === 'always' || _0x1a63cb === 'all' ? !![] : this['logLevels']['indexOf'](_0x1a63cb) >= this['logLevels']['indexOf'](this['level']);
            }
            ['format'](..._0x210f99) {
                const _0x6635ac = _0x210f99['shift']();
                let _0x460e15 = _0xa448be['format']['apply'](this, _0x210f99) + '\x0a';
                if (this['theme'][_0x6635ac])
                    _0x460e15 = this['theme'][_0x6635ac](_0x460e15);
                return _0x460e15;
            }
            ['formatWriteToFile'](_0xcdd2ca, _0x2519ec) {
                let _0x123ffa = '', _0x1c16ad = '', _0x52a97b = _0x2519ec ? (0x0, _0x36c9ba['hasAnsi'])(_0x2519ec) ? (0x0, _0x2d29c2['stripAnsi'])(_0x2519ec) : _0x2519ec : '';
                if (!_0x52a97b)
                    return _0x52a97b;
                if (this['logFile']['prefixLevel']) {
                    if (_0xcdd2ca !== 'always' && _0xcdd2ca !== 'log')
                        _0x123ffa = '[' + _0xcdd2ca + ']\x20';
                }
                if (this['logFile']['prefixDate'])
                    _0x1c16ad = '[' + new Date()['toISOString']() + ']';
                if (_0x123ffa || _0x1c16ad)
                    _0x52a97b = '' + _0x123ffa + _0x1c16ad + '\x0a' + _0x52a97b;
                return _0x52a97b;
            }
            ['createLogFile']() {
                if (!this['fileStream']) {
                    let _0x421ca5 = this['logFile']['name'] ? this['logFile']['name'] : _0x2aefee['testMakerArtifactsPath'] + '/logs/test-maker-' + (0x0, _0x307556['format'])(new Date(), 'DD-MM-YYYY\x20hh-mm-ss\x20A') + '.txt';
                    _0x421ca5 = _0x16335e()['normalizeTrim'](_0x421ca5), (0x0, _0x3428f5['outputFileSync'])(_0x421ca5, ''), this['fileStream'] = (0x0, _0x3428f5['createWriteStream'])(_0x421ca5, { 'flags': 'w' });
                }
            }
        }
        const _0x42b30e = global[_0x2aefee['globalTestMakerLogMangerName']], _0x51c9ea = global[_0x2aefee['globalTestMakerLogMangerName']] = _0x42b30e ? _0x42b30e : new _0x5ed886();
    }
};
;
//# sourceMappingURL=316.js.map